{
  "statistics": {
    "detectionDate": "2025-10-06T16:42:36.839Z",
    "formats": {
      "markdown": {
        "sources": {
          "src/test-results/production-readiness-output/deployment-testing-Deploym-6a9c5-ealth-checks-and-monitoring-devops-tests/error-context.md": {
            "lines": 536,
            "tokens": 1095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 536,
          "tokens": 1095,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "src/test/production-readiness/orchestrator/test-categories.ts": {
            "lines": 503,
            "tokens": 3495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/orchestrator/global-teardown.ts": {
            "lines": 305,
            "tokens": 2331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/orchestrator/global-setup.ts": {
            "lines": 267,
            "tokens": 1755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/config/production-readiness.config.ts": {
            "lines": 92,
            "tokens": 604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/08-integration-extensibility/extensibility-testing.test.ts": {
            "lines": 767,
            "tokens": 6482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/08-integration-extensibility/api-integration.test.ts": {
            "lines": 605,
            "tokens": 5654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/07-data-management/data-integrity.test.ts": {
            "lines": 610,
            "tokens": 5292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/07-data-management/backup-recovery.test.ts": {
            "lines": 553,
            "tokens": 5210,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 213,
            "percentage": 3.44,
            "percentageTokens": 4.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/06-devops-maintainability/deployment-testing.test.ts": {
            "lines": 512,
            "tokens": 5009,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/06-devops-maintainability/code-quality.test.ts": {
            "lines": 609,
            "tokens": 5523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/05-ux-usability/user-experience.test.ts": {
            "lines": 685,
            "tokens": 6226,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 74,
            "percentage": 1.02,
            "percentageTokens": 1.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/05-ux-usability/usability-testing.test.ts": {
            "lines": 650,
            "tokens": 6443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/04-compliance-legal/legal-compliance.test.ts": {
            "lines": 529,
            "tokens": 4936,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 138,
            "percentage": 1.89,
            "percentageTokens": 2.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/04-compliance-legal/gdpr-compliance.test.ts": {
            "lines": 471,
            "tokens": 4305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/04-compliance-legal/accessibility-compliance.test.ts": {
            "lines": 487,
            "tokens": 4703,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 19,
            "duplicatedTokens": 236,
            "percentage": 3.9,
            "percentageTokens": 5.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/03-reliability-availability/system-reliability.test.ts": {
            "lines": 378,
            "tokens": 3698,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 84,
            "percentage": 2.38,
            "percentageTokens": 2.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/03-reliability-availability/monitoring-alerting.test.ts": {
            "lines": 503,
            "tokens": 4642,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/03-reliability-availability/disaster-recovery.test.ts": {
            "lines": 413,
            "tokens": 3917,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 213,
            "percentage": 4.6,
            "percentageTokens": 5.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/02-scalability-performance/performance-optimization.test.ts": {
            "lines": 501,
            "tokens": 4826,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 212,
            "percentage": 4.39,
            "percentageTokens": 4.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/02-scalability-performance/horizontal-scaling.test.ts": {
            "lines": 364,
            "tokens": 3713,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 84,
            "percentage": 2.47,
            "percentageTokens": 2.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/01-security/vulnerability-scanning.test.ts": {
            "lines": 370,
            "tokens": 3502,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 160,
            "percentage": 3.24,
            "percentageTokens": 4.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/01-security/input-validation.test.ts": {
            "lines": 386,
            "tokens": 3636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/production-readiness/01-security/authentication-authorization.test.ts": {
            "lines": 331,
            "tokens": 3021,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 368,
            "percentage": 9.67,
            "percentageTokens": 12.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/index.ts": {
            "lines": 6,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/utils/utils.test.ts": {
            "lines": 43,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useTheme.test.ts": {
            "lines": 47,
            "tokens": 456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useProductivityProfile.test.ts": {
            "lines": 205,
            "tokens": 1895,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 172,
            "duplicatedTokens": 1443,
            "percentage": 83.9,
            "percentageTokens": 76.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useNotes.test.ts": {
            "lines": 198,
            "tokens": 1808,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 113,
            "duplicatedTokens": 980,
            "percentage": 57.07,
            "percentageTokens": 54.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useGamification.test.ts": {
            "lines": 167,
            "tokens": 1514,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 623,
            "percentage": 44.31,
            "percentageTokens": 41.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/storage/safeStorage.ts": {
            "lines": 228,
            "tokens": 1649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/webVitals.ts": {
            "lines": 255,
            "tokens": 1917,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/errors/recovery.ts": {
            "lines": 191,
            "tokens": 1484,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/errors/logger.ts": {
            "lines": 111,
            "tokens": 920,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/errors/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/errors/apiErrors.ts": {
            "lines": 101,
            "tokens": 746,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/environment/validation.ts": {
            "lines": 178,
            "tokens": 1214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/diagnostics/logger.ts": {
            "lines": 307,
            "tokens": 2274,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 184,
            "percentage": 5.86,
            "percentageTokens": 8.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/accessibility/testing.ts": {
            "lines": 165,
            "tokens": 1497,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/accessibility/focusManagement.ts": {
            "lines": 91,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/accessibility/ariaAnnouncer.ts": {
            "lines": 61,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/utils/test-utils.ts": {
            "lines": 268,
            "tokens": 2002,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/mocks/ai-data-mocks.ts": {
            "lines": 490,
            "tokens": 4007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/fixtures/mockData.ts": {
            "lines": 91,
            "tokens": 785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/factories/data-factories.ts": {
            "lines": 581,
            "tokens": 5423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/factories/data-factories.test.ts": {
            "lines": 437,
            "tokens": 4440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/e2e/visual-regression.spec.ts": {
            "lines": 198,
            "tokens": 1625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/e2e/test-basic.spec.ts": {
            "lines": 48,
            "tokens": 483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/e2e/security.spec.ts": {
            "lines": 278,
            "tokens": 2317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/e2e/persona-scenarios.spec.ts": {
            "lines": 307,
            "tokens": 2794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/e2e/performance.spec.ts": {
            "lines": 182,
            "tokens": 1781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/e2e/accessibility.spec.ts": {
            "lines": 246,
            "tokens": 2195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/data/persona-test-data.ts": {
            "lines": 440,
            "tokens": 2796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/config/quality-gates.ts": {
            "lines": 265,
            "tokens": 1579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ai/productivityAnalyzer.ts": {
            "lines": 796,
            "tokens": 6497,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ai/behavioralAnalytics.ts": {
            "lines": 763,
            "tokens": 6264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ai/aiServiceManager.ts": {
            "lines": 427,
            "tokens": 3623,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 72,
            "duplicatedTokens": 586,
            "percentage": 16.86,
            "percentageTokens": 16.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/integrations/supabase/safeClient.ts": {
            "lines": 267,
            "tokens": 1898,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/integrations/supabase/client.ts": {
            "lines": 28,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/quickTodos/index.ts": {
            "lines": 7,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/index.ts": {
            "lines": 24,
            "tokens": 423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/index.ts": {
            "lines": 37,
            "tokens": 660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/index.ts": {
            "lines": 10,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/help/index.ts": {
            "lines": 11,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/index.ts": {
            "lines": 6,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/index.ts": {
            "lines": 14,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/accessibility/index.ts": {
            "lines": 7,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/systemTemplates.ts": {
            "lines": 665,
            "tokens": 3719,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/security-test-helper.ts": {
            "lines": 478,
            "tokens": 2988,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/reflections.ts": {
            "lines": 377,
            "tokens": 3239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/notifications.ts": {
            "lines": 324,
            "tokens": 2049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/habits.ts": {
            "lines": 450,
            "tokens": 3436,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 240,
            "percentage": 4.89,
            "percentageTokens": 6.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/habitAnalytics.ts": {
            "lines": 272,
            "tokens": 2484,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 172,
            "percentage": 3.68,
            "percentageTokens": 6.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/goalValidation.ts": {
            "lines": 106,
            "tokens": 898,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/goalStatus.ts": {
            "lines": 73,
            "tokens": 604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/reflections.ts": {
            "lines": 312,
            "tokens": 2077,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/quickTodos.ts": {
            "lines": 23,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/projects.ts": {
            "lines": 438,
            "tokens": 2839,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 192,
            "percentage": 5.48,
            "percentageTokens": 6.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/notes.ts": {
            "lines": 55,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/modules.ts": {
            "lines": 33,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/integrations.ts": {
            "lines": 390,
            "tokens": 2633,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/habits.ts": {
            "lines": 297,
            "tokens": 2070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/goals.ts": {
            "lines": 136,
            "tokens": 1070,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 250,
            "percentage": 19.12,
            "percentageTokens": 23.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/gamification.ts": {
            "lines": 269,
            "tokens": 1921,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/demo.ts": {
            "lines": 71,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/demo-data.ts": {
            "lines": 108,
            "tokens": 697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/database.ts": {
            "lines": 75,
            "tokens": 630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/conversion.ts": {
            "lines": 47,
            "tokens": 339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/api-management.ts": {
            "lines": 435,
            "tokens": 2700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/analytics.ts": {
            "lines": 558,
            "tokens": 3923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ai.ts": {
            "lines": 210,
            "tokens": 1461,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 71,
            "duplicatedTokens": 564,
            "percentage": 33.81,
            "percentageTokens": 38.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ai-insights.ts": {
            "lines": 118,
            "tokens": 847,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ai-automation.ts": {
            "lines": 222,
            "tokens": 1627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/setup.ts": {
            "lines": 52,
            "tokens": 355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/mock-data.ts": {
            "lines": 384,
            "tokens": 2907,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 43,
            "duplicatedTokens": 388,
            "percentage": 11.2,
            "percentageTokens": 13.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils.ts": {
            "lines": 16,
            "tokens": 224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/theme-utils.ts": {
            "lines": 292,
            "tokens": 1918,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/predictive-insights.ts": {
            "lines": 401,
            "tokens": 3493,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/nlp-utils.ts": {
            "lines": 369,
            "tokens": 2602,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 132,
            "percentage": 5.42,
            "percentageTokens": 5.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/index.ts": {
            "lines": 7,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/i18n.ts": {
            "lines": 119,
            "tokens": 1017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/demo-data-loader.ts": {
            "lines": 152,
            "tokens": 1120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-system.ts": {
            "lines": 333,
            "tokens": 2427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/brand.ts": {
            "lines": 108,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai-service.ts": {
            "lines": 272,
            "tokens": 1945,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 36,
            "duplicatedTokens": 269,
            "percentage": 13.24,
            "percentageTokens": 13.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useWorkspaces.ts": {
            "lines": 327,
            "tokens": 2502,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useWidgetLayout.ts": {
            "lines": 235,
            "tokens": 1888,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useUpdateQuickTodo.ts": {
            "lines": 63,
            "tokens": 573,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 396,
            "percentage": 85.71,
            "percentageTokens": 69.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTimeTracking.ts": {
            "lines": 269,
            "tokens": 2253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTheme.ts": {
            "lines": 22,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTasks.ts": {
            "lines": 325,
            "tokens": 3063,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 170,
            "percentage": 5.54,
            "percentageTokens": 5.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTaskTemplates.ts": {
            "lines": 344,
            "tokens": 2899,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 164,
            "percentage": 5.23,
            "percentageTokens": 5.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTags.ts": {
            "lines": 182,
            "tokens": 1655,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 103,
            "percentage": 6.59,
            "percentageTokens": 6.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useSubtasks.ts": {
            "lines": 330,
            "tokens": 2738,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 166,
            "percentage": 4.85,
            "percentageTokens": 6.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useSpringAnimation.ts": {
            "lines": 57,
            "tokens": 541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useRovingTabIndex.ts": {
            "lines": 80,
            "tokens": 551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useResponsiveBreakpoint.ts": {
            "lines": 37,
            "tokens": 325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useReflections.ts": {
            "lines": 397,
            "tokens": 3260,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 82,
            "duplicatedTokens": 692,
            "percentage": 20.65,
            "percentageTokens": 21.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useReflectionTemplates.ts": {
            "lines": 342,
            "tokens": 2858,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 65,
            "duplicatedTokens": 585,
            "percentage": 19.01,
            "percentageTokens": 20.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useReflectionSharing.ts": {
            "lines": 204,
            "tokens": 1589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useReflectionPrompts.ts": {
            "lines": 246,
            "tokens": 1951,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 84,
            "percentage": 2.44,
            "percentageTokens": 4.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useReflectionLinks.ts": {
            "lines": 267,
            "tokens": 2055,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useReflectionAnalytics.ts": {
            "lines": 286,
            "tokens": 2287,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 84,
            "percentage": 2.1,
            "percentageTokens": 3.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useRecurringTasks.ts": {
            "lines": 324,
            "tokens": 2735,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 443,
            "percentage": 16.05,
            "percentageTokens": 16.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useQuickTodos.ts": {
            "lines": 66,
            "tokens": 578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useQuickTodoActions.ts": {
            "lines": 50,
            "tokens": 458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useQuickTask.ts": {
            "lines": 186,
            "tokens": 1557,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 170,
            "percentage": 7.53,
            "percentageTokens": 10.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useProjects.ts": {
            "lines": 249,
            "tokens": 1827,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useProjectTemplates.ts": {
            "lines": 457,
            "tokens": 3605,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 76,
            "percentage": 2.63,
            "percentageTokens": 2.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useProjectMembers.ts": {
            "lines": 488,
            "tokens": 3714,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 80,
            "duplicatedTokens": 574,
            "percentage": 16.39,
            "percentageTokens": 15.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useProductivityProfile.ts": {
            "lines": 684,
            "tokens": 4560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePredictiveInsights.ts": {
            "lines": 375,
            "tokens": 3345,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePersonalization.ts": {
            "lines": 198,
            "tokens": 1634,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 182,
            "percentage": 7.07,
            "percentageTokens": 11.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePerformanceMonitor.ts": {
            "lines": 219,
            "tokens": 1696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useOfflineSync.ts": {
            "lines": 411,
            "tokens": 3317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useOfflineDetection.ts": {
            "lines": 45,
            "tokens": 344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useNotes.ts": {
            "lines": 336,
            "tokens": 2783,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useMobile.ts": {
            "lines": 253,
            "tokens": 2142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useKeyboardShortcutsDialog.ts": {
            "lines": 41,
            "tokens": 317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useKeyboardShortcuts.ts": {
            "lines": 77,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useKeyboardNavigation.ts": {
            "lines": 52,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useIntegrations.ts": {
            "lines": 612,
            "tokens": 4501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useI18n.ts": {
            "lines": 261,
            "tokens": 2313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHapticFeedback.ts": {
            "lines": 375,
            "tokens": 3201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabits.ts": {
            "lines": 442,
            "tokens": 3814,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabitTemplates.ts": {
            "lines": 244,
            "tokens": 1957,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 183,
            "percentage": 11.07,
            "percentageTokens": 9.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabitStreaks.ts": {
            "lines": 241,
            "tokens": 2000,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 152,
            "percentage": 5.81,
            "percentageTokens": 7.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabitReminders.ts": {
            "lines": 292,
            "tokens": 2233,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 88,
            "duplicatedTokens": 716,
            "percentage": 30.14,
            "percentageTokens": 32.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabitGoalLinks.ts": {
            "lines": 239,
            "tokens": 1807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabitEntries.ts": {
            "lines": 321,
            "tokens": 2679,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 288,
            "percentage": 9.35,
            "percentageTokens": 10.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useHabitAnalytics.ts": {
            "lines": 369,
            "tokens": 3170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGoals.ts": {
            "lines": 361,
            "tokens": 3159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGoalProgress.ts": {
            "lines": 228,
            "tokens": 1915,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGoalMilestones.ts": {
            "lines": 427,
            "tokens": 3643,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 46,
            "duplicatedTokens": 412,
            "percentage": 10.77,
            "percentageTokens": 11.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGestureNavigation.ts": {
            "lines": 608,
            "tokens": 4826,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGenerateAIInsights.ts": {
            "lines": 88,
            "tokens": 782,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGamification.ts": {
            "lines": 365,
            "tokens": 2895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useFormError.ts": {
            "lines": 70,
            "tokens": 571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useFocusTrap.ts": {
            "lines": 21,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useExitIntent.ts": {
            "lines": 42,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useErrorHandler.ts": {
            "lines": 75,
            "tokens": 541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useDragAndDrop.ts": {
            "lines": 140,
            "tokens": 1198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useDemoState.ts": {
            "lines": 393,
            "tokens": 3087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useDeleteQuickTodo.ts": {
            "lines": 52,
            "tokens": 469,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 194,
            "percentage": 48.08,
            "percentageTokens": 41.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useCreateQuickTodo.ts": {
            "lines": 80,
            "tokens": 749,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 202,
            "percentage": 36.25,
            "percentageTokens": 26.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useConversionTracking.ts": {
            "lines": 259,
            "tokens": 2103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useBehavioralAnalytics.ts": {
            "lines": 460,
            "tokens": 3679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAutomation.ts": {
            "lines": 334,
            "tokens": 2770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAsyncError.ts": {
            "lines": 17,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAriaAnnounce.ts": {
            "lines": 43,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAnalytics.ts": {
            "lines": 535,
            "tokens": 4327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAdvancedLoading.ts": {
            "lines": 325,
            "tokens": 2560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAIUsageStats.ts": {
            "lines": 184,
            "tokens": 1461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAISettings.ts": {
            "lines": 349,
            "tokens": 2820,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 364,
            "percentage": 11.46,
            "percentageTokens": 12.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAIRecommendations.ts": {
            "lines": 97,
            "tokens": 825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAIInsights.ts": {
            "lines": 143,
            "tokens": 1240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAIAutomation.ts": {
            "lines": 427,
            "tokens": 3195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAI.ts": {
            "lines": 330,
            "tokens": 2736,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 163,
            "percentage": 4.55,
            "percentageTokens": 5.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-toast.ts": {
            "lines": 187,
            "tokens": 1413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/index.ts": {
            "lines": 71,
            "tokens": 664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/modules.ts": {
            "lines": 146,
            "tokens": 986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 47300,
          "tokens": 386058,
          "sources": 180,
          "clones": 63,
          "duplicatedLines": 811,
          "duplicatedTokens": 7184,
          "percentage": 1.71,
          "percentageTokens": 1.86,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "json": {
        "sources": {
          "src/test/fixtures/auth/user-state.json": {
            "lines": 14,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/fixtures/auth/admin-state.json": {
            "lines": 14,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test-results/production-readiness/results.json": {
            "lines": 184,
            "tokens": 1059,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test-results/production-readiness/.last-run.json": {
            "lines": 27,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/sarah-demo-data.json": {
            "lines": 215,
            "tokens": 1177,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 215,
            "duplicatedTokens": 1178,
            "percentage": 100,
            "percentageTokens": 100.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/marcus-demo-data.json": {
            "lines": 209,
            "tokens": 1140,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 209,
            "duplicatedTokens": 1141,
            "percentage": 100,
            "percentageTokens": 100.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/james-demo-data.json": {
            "lines": 144,
            "tokens": 790,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 144,
            "duplicatedTokens": 791,
            "percentage": 100,
            "percentageTokens": 100.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/elena-demo-data.json": {
            "lines": 168,
            "tokens": 922,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 168,
            "duplicatedTokens": 923,
            "percentage": 100,
            "percentageTokens": 100.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/consolidated-demo-data.json": {
            "lines": 173,
            "tokens": 1379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/all-personas-demo-data.json": {
            "lines": 896,
            "tokens": 4917,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 890,
            "duplicatedTokens": 4880,
            "percentage": 99.33,
            "percentageTokens": 99.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/data/demo/aisha-demo-data.json": {
            "lines": 154,
            "tokens": 847,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 154,
            "duplicatedTokens": 847,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2198,
          "tokens": 12476,
          "sources": 11,
          "clones": 5,
          "duplicatedLines": 890,
          "duplicatedTokens": 4880,
          "percentage": 40.49,
          "percentageTokens": 39.12,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "src/components/tasks/recurring/RecurringInstancesList.tsx": {
            "lines": 9,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/recurring/RecurrencePreview.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/recurring/RecurrencePatternEditor.tsx": {
            "lines": 171,
            "tokens": 1379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/recurring/RecurrenceIndicator.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/LiveDashboardDemo.tsx": {
            "lines": 165,
            "tokens": 1305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/InteractiveOverlay.tsx": {
            "lines": 52,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/DemoProgressTracker.tsx": {
            "lines": 14,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/DemoNavigation.tsx": {
            "lines": 37,
            "tokens": 276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/DemoContainer.tsx": {
            "lines": 167,
            "tokens": 1256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/TrustSignals.tsx": {
            "lines": 4,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/SocialProofBanner.tsx": {
            "lines": 16,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/FloatingCTA.tsx": {
            "lines": 3,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/EmailCaptureModal.tsx": {
            "lines": 58,
            "tokens": 457,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/UsageAnalytics.tsx": {
            "lines": 626,
            "tokens": 5113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/EditAPIKeyDialog.tsx": {
            "lines": 151,
            "tokens": 1101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/CreateAPIKeyDialog.tsx": {
            "lines": 164,
            "tokens": 1186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/APIManagementDashboard.tsx": {
            "lines": 32,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/APIKeyManagement.tsx": {
            "lines": 253,
            "tokens": 2047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/widgets/TimeTrackingWidget.test.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/notes/NotesGrid.test.tsx": {
            "lines": 129,
            "tokens": 855,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 222,
            "duplicatedTokens": 1482,
            "percentage": 172.09,
            "percentageTokens": 173.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useTasks.test.tsx": {
            "lines": 1,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useReflections.test.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useHabits.test.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useGoals.test.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/components/TaskCard.test.tsx": {
            "lines": 74,
            "tokens": 677,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/components/GoalCard.test.tsx": {
            "lines": 39,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/components/Button.test.tsx": {
            "lines": 39,
            "tokens": 411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/ai/RecommendationsBanner.test.tsx": {
            "lines": 32,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/ai/LoadingSkeleton.test.tsx": {
            "lines": 0,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/accessibility/AccessibleInput.test.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integration/auth/AuthenticationFlows.test.tsx": {
            "lines": 602,
            "tokens": 5048,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integration/ai/AIWidgetIntegration.test.tsx": {
            "lines": 13,
            "tokens": 134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/utils/test-utils.tsx": {
            "lines": 2,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/security/security-testing.test.tsx": {
            "lines": 298,
            "tokens": 2483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/performance/performance-suite.test.tsx": {
            "lines": 324,
            "tokens": 2714,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/integration/goal-management.test.tsx": {
            "lines": 608,
            "tokens": 5229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetSelector.tsx": {
            "lines": 29,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetInteractionWrapper.tsx": {
            "lines": 5,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetGrid.tsx": {
            "lines": 46,
            "tokens": 360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetActions.tsx": {
            "lines": 28,
            "tokens": 183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/TimeTrackingWidget.tsx": {
            "lines": 109,
            "tokens": 923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/TasksWidget.tsx": {
            "lines": 80,
            "tokens": 611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/SortableWidget.tsx": {
            "lines": 31,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/SmartWidgetGrid.tsx": {
            "lines": 49,
            "tokens": 328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/SmartRecommendationsWidget.tsx": {
            "lines": 133,
            "tokens": 1088,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/ReflectionsWidget.tsx": {
            "lines": 51,
            "tokens": 382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/QuickActionsWidget.tsx": {
            "lines": 12,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/QuickActionButton.tsx": {
            "lines": 10,
            "tokens": 48,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/ProductivityProfileWidget.tsx": {
            "lines": 47,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/PersonalizationPanel.tsx": {
            "lines": 93,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/NotesWidget.tsx": {
            "lines": 125,
            "tokens": 968,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/NewQuickTodosWidget.tsx": {
            "lines": 41,
            "tokens": 325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/LayoutConfigPanel.tsx": {
            "lines": 75,
            "tokens": 653,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/JourneyProgressWidget.tsx": {
            "lines": 50,
            "tokens": 399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/InteractiveWidget.tsx": {
            "lines": 23,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/HabitsWidget.tsx": {
            "lines": 92,
            "tokens": 674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/GoalsWidget.tsx": {
            "lines": 113,
            "tokens": 890,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/GamificationWidget.tsx": {
            "lines": 72,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/EnhancedWidgetLoader.tsx": {
            "lines": 320,
            "tokens": 2610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/EnhancedBaseWidget.tsx": {
            "lines": 34,
            "tokens": 262,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/DraggableWidget.tsx": {
            "lines": 50,
            "tokens": 407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/CommandPalette.tsx": {
            "lines": 52,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/BaseWidget.tsx": {
            "lines": 7,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip.tsx": {
            "lines": 5,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toggle.tsx": {
            "lines": 1,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toggle-group.tsx": {
            "lines": 28,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toaster.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toast.tsx": {
            "lines": 92,
            "tokens": 643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/theme-toggle.tsx": {
            "lines": 73,
            "tokens": 591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/textarea.tsx": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tabs.tsx": {
            "lines": 34,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/table.tsx": {
            "lines": 91,
            "tokens": 630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/switch.tsx": {
            "lines": 10,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/slider.tsx": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/skeleton.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/sidebar.tsx": {
            "lines": 598,
            "tokens": 3745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/sheet.tsx": {
            "lines": 100,
            "tokens": 651,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/separator.tsx": {
            "lines": 7,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/select.tsx": {
            "lines": 123,
            "tokens": 839,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/scroll-area.tsx": {
            "lines": 27,
            "tokens": 185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/rtl-utils.tsx": {
            "lines": 76,
            "tokens": 622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/radio-group.tsx": {
            "lines": 18,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/progress.tsx": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/popover.tsx": {
            "lines": 6,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/language-switcher.tsx": {
            "lines": 100,
            "tokens": 759,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/label.tsx": {
            "lines": 1,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/input.tsx": {
            "lines": 7,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/form.tsx": {
            "lines": 123,
            "tokens": 947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dropdown-menu.tsx": {
            "lines": 149,
            "tokens": 1015,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dialog.tsx": {
            "lines": 83,
            "tokens": 532,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/command.tsx": {
            "lines": 122,
            "tokens": 825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/collapsible.tsx": {
            "lines": 25,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/checkbox.tsx": {
            "lines": 8,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card.tsx": {
            "lines": 63,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/button.tsx": {
            "lines": 3,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/breadcrumb.tsx": {
            "lines": 86,
            "tokens": 599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/badge.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/avatar.tsx": {
            "lines": 31,
            "tokens": 218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/alert.tsx": {
            "lines": 26,
            "tokens": 197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/alert-dialog.tsx": {
            "lines": 103,
            "tokens": 689,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ThemeToggle.tsx": {
            "lines": 44,
            "tokens": 385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/LanguageSwitcher.tsx": {
            "lines": 63,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/EnhancedSkeleton.tsx": {
            "lines": 128,
            "tokens": 959,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/TimerButton.tsx": {
            "lines": 4,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/Timer.tsx": {
            "lines": 13,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/TimeEntryForm.tsx": {
            "lines": 73,
            "tokens": 534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/TimeEntriesList.tsx": {
            "lines": 30,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/VariableInput.tsx": {
            "lines": 125,
            "tokens": 990,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 314,
            "percentage": 35.2,
            "percentageTokens": 31.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/TemplateSelector.tsx": {
            "lines": 93,
            "tokens": 720,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 256,
            "percentage": 36.56,
            "percentageTokens": 35.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/TemplateCard.tsx": {
            "lines": 57,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/SaveAsTemplateDialog.tsx": {
            "lines": 77,
            "tokens": 626,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/team/WorkspaceSelector.tsx": {
            "lines": 148,
            "tokens": 1207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/ViewModeSelector.tsx": {
            "lines": 42,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskTemplateSelector.tsx": {
            "lines": 8,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskListView.tsx": {
            "lines": 219,
            "tokens": 1724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskHierarchy.tsx": {
            "lines": 78,
            "tokens": 574,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskForm.tsx": {
            "lines": 233,
            "tokens": 1424,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 193,
            "percentage": 12.45,
            "percentageTokens": 13.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskCard.tsx": {
            "lines": 129,
            "tokens": 1017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskCalendarView.tsx": {
            "lines": 87,
            "tokens": 706,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskBoardView.tsx": {
            "lines": 148,
            "tokens": 1457,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/SubtaskList.tsx": {
            "lines": 40,
            "tokens": 311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/SubtaskCreator.tsx": {
            "lines": 32,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/QuickTaskModal.tsx": {
            "lines": 40,
            "tokens": 345,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/QuickTaskInput.tsx": {
            "lines": 46,
            "tokens": 311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/ProgressIndicator.tsx": {
            "lines": 7,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/HierarchyBreadcrumb.tsx": {
            "lines": 6,
            "tokens": 94,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/FloatingTaskButton.tsx": {
            "lines": 13,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagSelector.tsx": {
            "lines": 124,
            "tokens": 920,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagManager.tsx": {
            "lines": 154,
            "tokens": 1224,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 74,
            "duplicatedTokens": 608,
            "percentage": 48.05,
            "percentageTokens": 49.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagColorPicker.tsx": {
            "lines": 16,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagBadge.tsx": {
            "lines": 6,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/CategoryFilter.tsx": {
            "lines": 14,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/settings/HapticFeedbackSettings.tsx": {
            "lines": 269,
            "tokens": 2243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/settings/AccessibilitySettings.tsx": {
            "lines": 179,
            "tokens": 1360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/StreakAnalytics.tsx": {
            "lines": 51,
            "tokens": 461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionTimeline.tsx": {
            "lines": 53,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionFilters.tsx": {
            "lines": 118,
            "tokens": 1061,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionCard.tsx": {
            "lines": 195,
            "tokens": 1582,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionCalendar.tsx": {
            "lines": 50,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionAnalyticsDashboard.tsx": {
            "lines": 77,
            "tokens": 664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/PersonalGrowthMetrics.tsx": {
            "lines": 53,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/MoodTracker.tsx": {
            "lines": 79,
            "tokens": 631,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/MoodHeatmap.tsx": {
            "lines": 8,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/MoodAnalytics.tsx": {
            "lines": 40,
            "tokens": 252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ImpactAnalysis.tsx": {
            "lines": 57,
            "tokens": 537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/GuidedReflectionFlow.tsx": {
            "lines": 83,
            "tokens": 659,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/GoalReflectionLinker.tsx": {
            "lines": 227,
            "tokens": 1720,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/DailyReflectionForm.tsx": {
            "lines": 353,
            "tokens": 2591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ContentAnalytics.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/quickTodos/QuickTodosWidget.tsx": {
            "lines": 5,
            "tokens": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/quickTodos/QuickTodoItem.tsx": {
            "lines": 84,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/quickTodos/QuickTodoForm.tsx": {
            "lines": 17,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/projects/ProjectForm.tsx": {
            "lines": 298,
            "tokens": 2054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/projects/ProjectCard.tsx": {
            "lines": 191,
            "tokens": 1615,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notes/NotesGrid.tsx": {
            "lines": 93,
            "tokens": 758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notes/NoteEditor.tsx": {
            "lines": 202,
            "tokens": 1369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/navigation/AppSidebar.tsx": {
            "lines": 67,
            "tokens": 457,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mobile/TouchOptimizedButton.tsx": {
            "lines": 156,
            "tokens": 906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mobile/TouchOptimizedButton.test.tsx": {
            "lines": 293,
            "tokens": 2331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mobile/MobileNavigation.tsx": {
            "lines": 129,
            "tokens": 852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layouts/AppLayout.tsx": {
            "lines": 1,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/TrustBadges.tsx": {
            "lines": 45,
            "tokens": 388,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 185,
            "percentage": 40,
            "percentageTokens": 47.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/TestimonialCarousel.tsx": {
            "lines": 97,
            "tokens": 691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/SuccessStoriesGrid.tsx": {
            "lines": 113,
            "tokens": 860,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 90,
            "percentage": 7.96,
            "percentageTokens": 10.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/PersonaSelector.tsx": {
            "lines": 101,
            "tokens": 793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/LiveActivityFeed.tsx": {
            "lines": 54,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/LandingPage.tsx": {
            "lines": 364,
            "tokens": 3070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/InteractiveJourneyBuilder.tsx": {
            "lines": 201,
            "tokens": 1502,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/CommunityStatsCounter.tsx": {
            "lines": 42,
            "tokens": 337,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 95,
            "percentage": 21.43,
            "percentageTokens": 28.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/BuildStory.tsx": {
            "lines": 15,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/help/HelpProvider.tsx": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/help/ContextualHelp.tsx": {
            "lines": 356,
            "tokens": 2503,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/TodayTracker.tsx": {
            "lines": 63,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakManager.tsx": {
            "lines": 112,
            "tokens": 900,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakLeaderboard.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakDisplay.tsx": {
            "lines": 23,
            "tokens": 197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakChallenges.tsx": {
            "lines": 46,
            "tokens": 400,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakAchievements.tsx": {
            "lines": 49,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ReminderManager.tsx": {
            "lines": 145,
            "tokens": 1111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ReminderForm.tsx": {
            "lines": 113,
            "tokens": 840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ProgressRing.tsx": {
            "lines": 22,
            "tokens": 162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ProgressExport.tsx": {
            "lines": 10,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/NotificationPermission.tsx": {
            "lines": 35,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitTemplates.tsx": {
            "lines": 48,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitPerformanceMetrics.tsx": {
            "lines": 83,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitInsightsEngine.tsx": {
            "lines": 1,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitHeatmap.tsx": {
            "lines": 127,
            "tokens": 1025,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitGoalLinker.tsx": {
            "lines": 124,
            "tokens": 964,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitFilters.tsx": {
            "lines": 128,
            "tokens": 1113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitEmpty.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitEditForm.tsx": {
            "lines": 205,
            "tokens": 1361,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 88,
            "duplicatedTokens": 454,
            "percentage": 42.93,
            "percentageTokens": 33.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitCreateForm.tsx": {
            "lines": 229,
            "tokens": 1522,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 117,
            "duplicatedTokens": 647,
            "percentage": 51.09,
            "percentageTokens": 42.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitCard.tsx": {
            "lines": 128,
            "tokens": 1080,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitCalendar.tsx": {
            "lines": 41,
            "tokens": 317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitAnalyticsDashboard.tsx": {
            "lines": 63,
            "tokens": 476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitAnalytics.tsx": {
            "lines": 9,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/CompletionTrends.tsx": {
            "lines": 85,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/SubGoalsList.tsx": {
            "lines": 49,
            "tokens": 384,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressVisualization.tsx": {
            "lines": 221,
            "tokens": 1832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressSuggestions.tsx": {
            "lines": 9,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressHistory.tsx": {
            "lines": 36,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressEditor.tsx": {
            "lines": 99,
            "tokens": 776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressChart.tsx": {
            "lines": 57,
            "tokens": 467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneTimeline.tsx": {
            "lines": 12,
            "tokens": 101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneEditor.tsx": {
            "lines": 112,
            "tokens": 806,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 112,
            "duplicatedTokens": 801,
            "percentage": 100,
            "percentageTokens": 99.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneCreator.tsx": {
            "lines": 112,
            "tokens": 832,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 112,
            "duplicatedTokens": 801,
            "percentage": 100,
            "percentageTokens": 96.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneCompletion.tsx": {
            "lines": 57,
            "tokens": 456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneCard.tsx": {
            "lines": 214,
            "tokens": 1519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneAnalytics.tsx": {
            "lines": 0,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalTimeline.tsx": {
            "lines": 2,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalReflectionsTab.tsx": {
            "lines": 168,
            "tokens": 1369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalQuickActions.tsx": {
            "lines": 23,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalHabitManager.tsx": {
            "lines": 149,
            "tokens": 1201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalForm.tsx": {
            "lines": 126,
            "tokens": 726,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 70,
            "duplicatedTokens": 368,
            "percentage": 55.56,
            "percentageTokens": 50.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalCard.tsx": {
            "lines": 176,
            "tokens": 1492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/WidgetErrorBoundary.tsx": {
            "lines": 90,
            "tokens": 569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/ErrorReportDialog.tsx": {
            "lines": 39,
            "tokens": 301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/ErrorFallbacks.tsx": {
            "lines": 63,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/ErrorBoundary.tsx": {
            "lines": 18,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/CascadingErrorBoundary.tsx": {
            "lines": 157,
            "tokens": 1142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/AppErrorBoundary.tsx": {
            "lines": 133,
            "tokens": 889,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dnd/DroppableArea.tsx": {
            "lines": 6,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dnd/DraggableTask.tsx": {
            "lines": 16,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dnd/DragAndDropProvider.tsx": {
            "lines": 7,
            "tokens": 48,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dialogs/KeyboardShortcutsDialog.tsx": {
            "lines": 68,
            "tokens": 598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dev/ContrastChecker.tsx": {
            "lines": 65,
            "tokens": 484,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/GreetingHeader.tsx": {
            "lines": 3,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/WorkflowOptimizer.tsx": {
            "lines": 476,
            "tokens": 3523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/RuleEditor.tsx": {
            "lines": 170,
            "tokens": 1373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/NotificationSettings.tsx": {
            "lines": 194,
            "tokens": 1468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/NotificationCenter.tsx": {
            "lines": 66,
            "tokens": 583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/NaturalLanguageRuleBuilder.tsx": {
            "lines": 261,
            "tokens": 2045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/CrossModuleChains.tsx": {
            "lines": 274,
            "tokens": 2103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/AutomationRules.tsx": {
            "lines": 68,
            "tokens": 495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/AutomationLogs.tsx": {
            "lines": 30,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/AIAutomationDashboard.tsx": {
            "lines": 507,
            "tokens": 3844,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/ProtectedRoute.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/ProtectedRoute.test.tsx": {
            "lines": 2,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/RealTimeAnalytics.tsx": {
            "lines": 349,
            "tokens": 2704,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/PredictiveAnalytics.tsx": {
            "lines": 498,
            "tokens": 3923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/MobileAnalyticsDashboard.tsx": {
            "lines": 285,
            "tokens": 2055,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 112,
            "duplicatedTokens": 692,
            "percentage": 39.3,
            "percentageTokens": 33.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/ExecutiveDashboard.tsx": {
            "lines": 403,
            "tokens": 3047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/DashboardBuilder.tsx": {
            "lines": 561,
            "tokens": 4097,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/AnalyticsDashboard.tsx": {
            "lines": 499,
            "tokens": 4068,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/PredictiveInsightsWidget.tsx": {
            "lines": 328,
            "tokens": 2643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/BehavioralInsightsWidget.tsx": {
            "lines": 250,
            "tokens": 2004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIUsageWidget.tsx": {
            "lines": 383,
            "tokens": 3032,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIRecommendationCard.tsx": {
            "lines": 77,
            "tokens": 657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIInsightsDashboard.tsx": {
            "lines": 224,
            "tokens": 1768,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIInsightCard.tsx": {
            "lines": 48,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/conversational-interface.tsx": {
            "lines": 151,
            "tokens": 1234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/ai-quick-actions.tsx": {
            "lines": 119,
            "tokens": 860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/ai-chat-widget.tsx": {
            "lines": 36,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/SmartRecommendations.tsx": {
            "lines": 395,
            "tokens": 2989,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/RecommendationsBanner.tsx": {
            "lines": 75,
            "tokens": 632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/LoadingSkeleton.tsx": {
            "lines": 135,
            "tokens": 1160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/AISettingsDashboard.tsx": {
            "lines": 711,
            "tokens": 5076,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/AIAssistant.tsx": {
            "lines": 138,
            "tokens": 1094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/accessibility/AccessibleInput.tsx": {
            "lines": 35,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/test-utils.tsx": {
            "lines": 34,
            "tokens": 252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Templates.tsx": {
            "lines": 108,
            "tokens": 858,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 256,
            "percentage": 31.48,
            "percentageTokens": 29.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Tasks.tsx": {
            "lines": 260,
            "tokens": 2086,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/TaskDetail.tsx": {
            "lines": 369,
            "tokens": 2954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Signup.tsx": {
            "lines": 62,
            "tokens": 480,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 249,
            "percentage": 53.23,
            "percentageTokens": 51.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Reflections.tsx": {
            "lines": 101,
            "tokens": 871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ReflectionDetail.tsx": {
            "lines": 184,
            "tokens": 1508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/RecurringTasks.tsx": {
            "lines": 166,
            "tokens": 1322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/QuickTodos.tsx": {
            "lines": 70,
            "tokens": 523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Projects.tsx": {
            "lines": 261,
            "tokens": 2167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ProfileAssessment.tsx": {
            "lines": 215,
            "tokens": 1579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Profile.tsx": {
            "lines": 178,
            "tokens": 1380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Notes.tsx": {
            "lines": 16,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NewGoal.tsx": {
            "lines": 16,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Login.tsx": {
            "lines": 54,
            "tokens": 400,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 249,
            "percentage": 61.11,
            "percentageTokens": 62.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Habits.tsx": {
            "lines": 98,
            "tokens": 783,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/HabitDetail.tsx": {
            "lines": 193,
            "tokens": 1670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Goals.tsx": {
            "lines": 165,
            "tokens": 1433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/GoalDetail.tsx": {
            "lines": 522,
            "tokens": 3935,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Gamification.tsx": {
            "lines": 405,
            "tokens": 3079,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ForgotPassword.tsx": {
            "lines": 13,
            "tokens": 120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Dashboard.tsx": {
            "lines": 1,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Analytics.tsx": {
            "lines": 50,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/WidgetContext.tsx": {
            "lines": 10,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThemeContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/TaskViewContext.tsx": {
            "lines": 9,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ModulesContext.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/AuthContext.tsx": {
            "lines": 13,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/AccessibilityContext.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DatabaseTest.tsx": {
            "lines": 31,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 248,
            "tokens": 1285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 30986,
          "tokens": 239099,
          "sources": 290,
          "clones": 23,
          "duplicatedLines": 575,
          "duplicatedTokens": 3870,
          "percentage": 1.86,
          "percentageTokens": 1.62,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/components/tasks/recurring/RecurringInstancesList.tsx": {
            "lines": 67,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/recurring/RecurrencePreview.tsx": {
            "lines": 46,
            "tokens": 349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/recurring/RecurrencePatternEditor.tsx": {
            "lines": 244,
            "tokens": 2081,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/recurring/RecurrenceIndicator.tsx": {
            "lines": 68,
            "tokens": 637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/LiveDashboardDemo.tsx": {
            "lines": 234,
            "tokens": 1916,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/InteractiveOverlay.tsx": {
            "lines": 108,
            "tokens": 834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/DemoProgressTracker.tsx": {
            "lines": 42,
            "tokens": 336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/DemoNavigation.tsx": {
            "lines": 72,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/demo/DemoContainer.tsx": {
            "lines": 226,
            "tokens": 1757,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/TrustSignals.tsx": {
            "lines": 72,
            "tokens": 541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/SocialProofBanner.tsx": {
            "lines": 82,
            "tokens": 712,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/FloatingCTA.tsx": {
            "lines": 86,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/conversion/EmailCaptureModal.tsx": {
            "lines": 152,
            "tokens": 1125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/UsageAnalytics.tsx": {
            "lines": 736,
            "tokens": 5944,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 256,
            "percentage": 4.76,
            "percentageTokens": 4.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/SystemLimitsConfig.tsx": {
            "lines": 41,
            "tokens": 321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/SystemConfig.tsx": {
            "lines": 43,
            "tokens": 317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/EditAPIKeyDialog.tsx": {
            "lines": 235,
            "tokens": 1704,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 92,
            "duplicatedTokens": 593,
            "percentage": 39.15,
            "percentageTokens": 34.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/CreateAPIKeyDialog.tsx": {
            "lines": 254,
            "tokens": 1784,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 100,
            "duplicatedTokens": 668,
            "percentage": 39.37,
            "percentageTokens": 37.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/APIManagementDashboard.tsx": {
            "lines": 353,
            "tokens": 2841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/admin/APIManagement/APIKeyManagement.tsx": {
            "lines": 398,
            "tokens": 3054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/widgets/TimeTrackingWidget.test.tsx": {
            "lines": 286,
            "tokens": 2212,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 61,
            "duplicatedTokens": 536,
            "percentage": 21.33,
            "percentageTokens": 24.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx": {
            "lines": 268,
            "tokens": 2213,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 72,
            "duplicatedTokens": 686,
            "percentage": 26.87,
            "percentageTokens": 31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/notes/NotesGrid.test.tsx": {
            "lines": 176,
            "tokens": 1207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useTasks.test.tsx": {
            "lines": 186,
            "tokens": 1934,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 43,
            "duplicatedTokens": 391,
            "percentage": 23.12,
            "percentageTokens": 20.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useReflections.test.tsx": {
            "lines": 180,
            "tokens": 1624,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 58,
            "duplicatedTokens": 529,
            "percentage": 32.22,
            "percentageTokens": 32.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useHabits.test.tsx": {
            "lines": 225,
            "tokens": 2225,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 157,
            "duplicatedTokens": 1547,
            "percentage": 69.78,
            "percentageTokens": 69.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/hooks/useGoals.test.tsx": {
            "lines": 191,
            "tokens": 1894,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 104,
            "duplicatedTokens": 983,
            "percentage": 54.45,
            "percentageTokens": 51.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/components/TaskCard.test.tsx": {
            "lines": 92,
            "tokens": 857,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/components/GoalCard.test.tsx": {
            "lines": 89,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/components/Button.test.tsx": {
            "lines": 66,
            "tokens": 678,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/auth/AuthContext.test.tsx": {
            "lines": 174,
            "tokens": 1696,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 380,
            "percentage": 19.54,
            "percentageTokens": 22.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/ai/RecommendationsBanner.test.tsx": {
            "lines": 258,
            "tokens": 2108,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 223,
            "percentage": 8.14,
            "percentageTokens": 10.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/ai/LoadingSkeleton.test.tsx": {
            "lines": 210,
            "tokens": 1955,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/accessibility/SkipNavigation.test.tsx": {
            "lines": 53,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/accessibility/KeyboardNavigation.test.tsx": {
            "lines": 124,
            "tokens": 993,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/accessibility/FocusManagement.test.tsx": {
            "lines": 179,
            "tokens": 1456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/unit/accessibility/AccessibleInput.test.tsx": {
            "lines": 98,
            "tokens": 881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integration/widgets/widgetSystem.test.tsx": {
            "lines": 94,
            "tokens": 941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integration/auth/ProtectedRoute.test.tsx": {
            "lines": 80,
            "tokens": 638,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 60,
            "duplicatedTokens": 473,
            "percentage": 75,
            "percentageTokens": 74.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integration/auth/AuthenticationFlows.test.tsx": {
            "lines": 767,
            "tokens": 6440,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 188,
            "duplicatedTokens": 1680,
            "percentage": 24.51,
            "percentageTokens": 26.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integration/ai/AIWidgetIntegration.test.tsx": {
            "lines": 502,
            "tokens": 3718,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 173,
            "percentage": 3.59,
            "percentageTokens": 4.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/utils/test-utils.tsx": {
            "lines": 132,
            "tokens": 942,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 101,
            "percentage": 9.09,
            "percentageTokens": 10.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/security/security-testing.test.tsx": {
            "lines": 722,
            "tokens": 5722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/performance/performance-suite.test.tsx": {
            "lines": 494,
            "tokens": 4273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/integration/goal-management.test.tsx": {
            "lines": 710,
            "tokens": 6147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetSelector.tsx": {
            "lines": 183,
            "tokens": 1279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetInteractionWrapper.tsx": {
            "lines": 69,
            "tokens": 481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetGrid.tsx": {
            "lines": 103,
            "tokens": 777,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/WidgetActions.tsx": {
            "lines": 65,
            "tokens": 431,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/TimeTrackingWidget.tsx": {
            "lines": 278,
            "tokens": 2327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/TasksWidget.tsx": {
            "lines": 120,
            "tokens": 1056,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 78,
            "percentage": 10.83,
            "percentageTokens": 7.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/SortableWidget.tsx": {
            "lines": 94,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/SmartWidgetGrid.tsx": {
            "lines": 162,
            "tokens": 1333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/SmartRecommendationsWidget.tsx": {
            "lines": 320,
            "tokens": 2438,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 25,
            "duplicatedTokens": 240,
            "percentage": 7.81,
            "percentageTokens": 9.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/ReflectionsWidget.tsx": {
            "lines": 125,
            "tokens": 1092,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 194,
            "percentage": 15.2,
            "percentageTokens": 17.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/QuickActionsWidget.tsx": {
            "lines": 58,
            "tokens": 420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/QuickActionButton.tsx": {
            "lines": 59,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/ProductivityProfileWidget.tsx": {
            "lines": 181,
            "tokens": 1442,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/PersonalizationPanel.tsx": {
            "lines": 140,
            "tokens": 1106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/NotesWidget.tsx": {
            "lines": 209,
            "tokens": 1691,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 71,
            "percentage": 2.87,
            "percentageTokens": 4.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/NewQuickTodosWidget.tsx": {
            "lines": 91,
            "tokens": 784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/LayoutConfigPanel.tsx": {
            "lines": 117,
            "tokens": 1001,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/JourneyProgressWidget.tsx": {
            "lines": 93,
            "tokens": 741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/InteractiveWidget.tsx": {
            "lines": 122,
            "tokens": 878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/HabitsWidget.tsx": {
            "lines": 160,
            "tokens": 1312,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 264,
            "percentage": 16.88,
            "percentageTokens": 20.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/GoalsWidget.tsx": {
            "lines": 179,
            "tokens": 1543,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 148,
            "percentage": 11.73,
            "percentageTokens": 9.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/GamificationWidget.tsx": {
            "lines": 218,
            "tokens": 1805,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/EnhancedWidgetLoader.tsx": {
            "lines": 441,
            "tokens": 3559,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 24,
            "duplicatedTokens": 282,
            "percentage": 5.44,
            "percentageTokens": 7.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/EnhancedBaseWidget.tsx": {
            "lines": 197,
            "tokens": 1499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/DraggableWidget.tsx": {
            "lines": 104,
            "tokens": 818,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/CommandPalette.tsx": {
            "lines": 264,
            "tokens": 2183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/widgets/BaseWidget.tsx": {
            "lines": 102,
            "tokens": 682,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip.tsx": {
            "lines": 27,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toggle.tsx": {
            "lines": 42,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toggle-group.tsx": {
            "lines": 58,
            "tokens": 448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toaster.tsx": {
            "lines": 32,
            "tokens": 234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toast.tsx": {
            "lines": 126,
            "tokens": 891,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/theme-toggle.tsx": {
            "lines": 149,
            "tokens": 1131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/textarea.tsx": {
            "lines": 23,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tabs.tsx": {
            "lines": 52,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/table.tsx": {
            "lines": 116,
            "tokens": 778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/switch.tsx": {
            "lines": 26,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/sonner.tsx": {
            "lines": 28,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/slider.tsx": {
            "lines": 25,
            "tokens": 195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/skeleton.tsx": {
            "lines": 14,
            "tokens": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/sidebar.tsx": {
            "lines": 768,
            "tokens": 4964,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/sheet.tsx": {
            "lines": 137,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/separator.tsx": {
            "lines": 28,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/select.tsx": {
            "lines": 157,
            "tokens": 1068,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/scroll-area.tsx": {
            "lines": 45,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/rtl-utils.tsx": {
            "lines": 99,
            "tokens": 787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/radio-group.tsx": {
            "lines": 41,
            "tokens": 316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/progress.tsx": {
            "lines": 25,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/popover.tsx": {
            "lines": 28,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/language-switcher.tsx": {
            "lines": 153,
            "tokens": 1190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/label.tsx": {
            "lines": 35,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/input.tsx": {
            "lines": 27,
            "tokens": 185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/form.tsx": {
            "lines": 176,
            "tokens": 1284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dropdown-menu.tsx": {
            "lines": 197,
            "tokens": 1317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dialog.tsx": {
            "lines": 119,
            "tokens": 764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/command.tsx": {
            "lines": 152,
            "tokens": 1039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/collapsible.tsx": {
            "lines": 48,
            "tokens": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/checkbox.tsx": {
            "lines": 27,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card.tsx": {
            "lines": 85,
            "tokens": 579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/calendar.tsx": {
            "lines": 63,
            "tokens": 459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/button.tsx": {
            "lines": 95,
            "tokens": 685,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/breadcrumb.tsx": {
            "lines": 114,
            "tokens": 803,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/badge.tsx": {
            "lines": 35,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/avatar.tsx": {
            "lines": 47,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/alert.tsx": {
            "lines": 58,
            "tokens": 416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/alert-dialog.tsx": {
            "lines": 138,
            "tokens": 913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ThemeToggle.tsx": {
            "lines": 106,
            "tokens": 881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/LanguageSwitcher.tsx": {
            "lines": 123,
            "tokens": 1053,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/EnhancedSkeleton.tsx": {
            "lines": 266,
            "tokens": 2066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/TimerButton.tsx": {
            "lines": 50,
            "tokens": 387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/Timer.tsx": {
            "lines": 95,
            "tokens": 781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/TimeEntryForm.tsx": {
            "lines": 138,
            "tokens": 1048,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/time/TimeEntriesList.tsx": {
            "lines": 92,
            "tokens": 802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/VariableInput.tsx": {
            "lines": 204,
            "tokens": 1676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/TemplateSelector.tsx": {
            "lines": 173,
            "tokens": 1359,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 71,
            "percentage": 4.62,
            "percentageTokens": 5.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/TemplateCard.tsx": {
            "lines": 142,
            "tokens": 1090,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/templates/SaveAsTemplateDialog.tsx": {
            "lines": 156,
            "tokens": 1168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/team/WorkspaceSelector.tsx": {
            "lines": 266,
            "tokens": 2061,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/ViewModeSelector.tsx": {
            "lines": 107,
            "tokens": 909,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskTemplateSelector.tsx": {
            "lines": 39,
            "tokens": 280,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskListView.tsx": {
            "lines": 333,
            "tokens": 2718,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 120,
            "duplicatedTokens": 917,
            "percentage": 36.04,
            "percentageTokens": 33.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskHierarchy.tsx": {
            "lines": 125,
            "tokens": 972,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskForm.tsx": {
            "lines": 348,
            "tokens": 2534,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 209,
            "percentage": 7.47,
            "percentageTokens": 8.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskCard.tsx": {
            "lines": 244,
            "tokens": 1891,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 507,
            "percentage": 30.33,
            "percentageTokens": 26.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskCalendarView.tsx": {
            "lines": 171,
            "tokens": 1491,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 15,
            "duplicatedTokens": 195,
            "percentage": 8.77,
            "percentageTokens": 13.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/TaskBoardView.tsx": {
            "lines": 205,
            "tokens": 2044,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 91,
            "percentage": 3.41,
            "percentageTokens": 4.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/SubtaskList.tsx": {
            "lines": 79,
            "tokens": 661,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/SubtaskCreator.tsx": {
            "lines": 84,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/QuickTaskModal.tsx": {
            "lines": 93,
            "tokens": 731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/QuickTaskInput.tsx": {
            "lines": 137,
            "tokens": 1087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/ProgressIndicator.tsx": {
            "lines": 47,
            "tokens": 339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/HierarchyBreadcrumb.tsx": {
            "lines": 74,
            "tokens": 612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tasks/FloatingTaskButton.tsx": {
            "lines": 33,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagSelector.tsx": {
            "lines": 220,
            "tokens": 1770,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 76,
            "percentage": 3.64,
            "percentageTokens": 4.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagManager.tsx": {
            "lines": 255,
            "tokens": 2079,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 40,
            "duplicatedTokens": 334,
            "percentage": 15.69,
            "percentageTokens": 16.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagColorPicker.tsx": {
            "lines": 63,
            "tokens": 447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/TagBadge.tsx": {
            "lines": 55,
            "tokens": 364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/tags/CategoryFilter.tsx": {
            "lines": 73,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/settings/HapticFeedbackSettings.tsx": {
            "lines": 397,
            "tokens": 3265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/settings/AccessibilitySettings.tsx": {
            "lines": 276,
            "tokens": 2077,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 85,
            "percentage": 3.26,
            "percentageTokens": 4.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/StreakAnalytics.tsx": {
            "lines": 133,
            "tokens": 1182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionTimeline.tsx": {
            "lines": 81,
            "tokens": 709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionFilters.tsx": {
            "lines": 228,
            "tokens": 1954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionCard.tsx": {
            "lines": 272,
            "tokens": 2098,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 87,
            "percentage": 3.31,
            "percentageTokens": 4.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionCalendar.tsx": {
            "lines": 164,
            "tokens": 1332,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 94,
            "percentage": 5.49,
            "percentageTokens": 7.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ReflectionAnalyticsDashboard.tsx": {
            "lines": 133,
            "tokens": 1090,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/PersonalGrowthMetrics.tsx": {
            "lines": 160,
            "tokens": 1277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/MoodTracker.tsx": {
            "lines": 138,
            "tokens": 1213,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 70,
            "duplicatedTokens": 492,
            "percentage": 50.72,
            "percentageTokens": 40.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/MoodHeatmap.tsx": {
            "lines": 140,
            "tokens": 1300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/MoodAnalytics.tsx": {
            "lines": 157,
            "tokens": 1257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ImpactAnalysis.tsx": {
            "lines": 126,
            "tokens": 1045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/GuidedReflectionFlow.tsx": {
            "lines": 156,
            "tokens": 1348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/GoalReflectionLinker.tsx": {
            "lines": 396,
            "tokens": 3120,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 183,
            "percentage": 6.31,
            "percentageTokens": 5.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/DailyReflectionForm.tsx": {
            "lines": 557,
            "tokens": 4510,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 133,
            "duplicatedTokens": 917,
            "percentage": 23.88,
            "percentageTokens": 20.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/reflections/ContentAnalytics.tsx": {
            "lines": 117,
            "tokens": 1104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/quickTodos/QuickTodosWidget.tsx": {
            "lines": 61,
            "tokens": 553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/quickTodos/QuickTodoItem.tsx": {
            "lines": 172,
            "tokens": 1202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/quickTodos/QuickTodoForm.tsx": {
            "lines": 84,
            "tokens": 699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/projects/ProjectForm.tsx": {
            "lines": 519,
            "tokens": 3741,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 192,
            "percentage": 4.62,
            "percentageTokens": 5.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/projects/ProjectCard.tsx": {
            "lines": 276,
            "tokens": 2293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notes/NotesGrid.tsx": {
            "lines": 236,
            "tokens": 2000,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 196,
            "percentage": 10.59,
            "percentageTokens": 9.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notes/NoteEditor.tsx": {
            "lines": 428,
            "tokens": 3233,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 125,
            "percentage": 4.44,
            "percentageTokens": 3.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/navigation/AppSidebar.tsx": {
            "lines": 337,
            "tokens": 2202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mobile/TouchOptimizedButton.tsx": {
            "lines": 253,
            "tokens": 1707,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mobile/TouchOptimizedButton.test.tsx": {
            "lines": 547,
            "tokens": 4381,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 144,
            "duplicatedTokens": 1106,
            "percentage": 26.33,
            "percentageTokens": 25.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mobile/MobileNavigation.tsx": {
            "lines": 288,
            "tokens": 1933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layouts/AppLayout.tsx": {
            "lines": 92,
            "tokens": 659,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/TrustBadges.tsx": {
            "lines": 178,
            "tokens": 1308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/TestimonialCarousel.tsx": {
            "lines": 277,
            "tokens": 2049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/SuccessStoriesGrid.tsx": {
            "lines": 249,
            "tokens": 1861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/PersonaSelector.tsx": {
            "lines": 268,
            "tokens": 1836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/LiveActivityFeed.tsx": {
            "lines": 212,
            "tokens": 1762,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/LandingPage.tsx": {
            "lines": 494,
            "tokens": 4272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/InteractiveJourneyBuilder.tsx": {
            "lines": 293,
            "tokens": 2285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/CommunityStatsCounter.tsx": {
            "lines": 182,
            "tokens": 1398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/landing/BuildStory.tsx": {
            "lines": 79,
            "tokens": 648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/help/HelpProvider.tsx": {
            "lines": 473,
            "tokens": 2904,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/help/ContextualHelp.tsx": {
            "lines": 700,
            "tokens": 5117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/TodayTracker.tsx": {
            "lines": 128,
            "tokens": 1105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakManager.tsx": {
            "lines": 247,
            "tokens": 2216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakLeaderboard.tsx": {
            "lines": 100,
            "tokens": 902,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakDisplay.tsx": {
            "lines": 160,
            "tokens": 1356,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakChallenges.tsx": {
            "lines": 192,
            "tokens": 1642,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/StreakAchievements.tsx": {
            "lines": 209,
            "tokens": 1611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ReminderManager.tsx": {
            "lines": 267,
            "tokens": 2091,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ReminderForm.tsx": {
            "lines": 240,
            "tokens": 1969,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ProgressRing.tsx": {
            "lines": 52,
            "tokens": 397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/ProgressExport.tsx": {
            "lines": 149,
            "tokens": 1359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/NotificationPermission.tsx": {
            "lines": 113,
            "tokens": 914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitTemplates.tsx": {
            "lines": 101,
            "tokens": 821,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitPerformanceMetrics.tsx": {
            "lines": 152,
            "tokens": 1356,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitInsightsEngine.tsx": {
            "lines": 198,
            "tokens": 1780,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitHeatmap.tsx": {
            "lines": 254,
            "tokens": 2080,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitGoalLinker.tsx": {
            "lines": 233,
            "tokens": 1923,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 35,
            "duplicatedTokens": 247,
            "percentage": 15.02,
            "percentageTokens": 12.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitFilters.tsx": {
            "lines": 187,
            "tokens": 1531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitEmpty.tsx": {
            "lines": 29,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitEditForm.tsx": {
            "lines": 302,
            "tokens": 2148,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 63,
            "duplicatedTokens": 510,
            "percentage": 20.86,
            "percentageTokens": 23.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitCreateForm.tsx": {
            "lines": 364,
            "tokens": 2645,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 396,
            "percentage": 12.09,
            "percentageTokens": 14.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitCard.tsx": {
            "lines": 217,
            "tokens": 1858,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 399,
            "percentage": 21.66,
            "percentageTokens": 21.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitCalendar.tsx": {
            "lines": 141,
            "tokens": 1144,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 94,
            "percentage": 6.38,
            "percentageTokens": 8.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitAnalyticsDashboard.tsx": {
            "lines": 216,
            "tokens": 1912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/HabitAnalytics.tsx": {
            "lines": 75,
            "tokens": 609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/habits/CompletionTrends.tsx": {
            "lines": 186,
            "tokens": 1598,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 250,
            "percentage": 20.43,
            "percentageTokens": 15.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/SubGoalsList.tsx": {
            "lines": 115,
            "tokens": 880,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressVisualization.tsx": {
            "lines": 302,
            "tokens": 2576,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressSuggestions.tsx": {
            "lines": 122,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressHistory.tsx": {
            "lines": 136,
            "tokens": 1159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressEditor.tsx": {
            "lines": 168,
            "tokens": 1319,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 342,
            "percentage": 27.98,
            "percentageTokens": 25.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/ProgressChart.tsx": {
            "lines": 174,
            "tokens": 1483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneTimeline.tsx": {
            "lines": 122,
            "tokens": 1075,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 92,
            "percentage": 5.74,
            "percentageTokens": 8.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneEditor.tsx": {
            "lines": 182,
            "tokens": 1322,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 135,
            "duplicatedTokens": 985,
            "percentage": 74.18,
            "percentageTokens": 74.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneCreator.tsx": {
            "lines": 176,
            "tokens": 1284,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 128,
            "duplicatedTokens": 897,
            "percentage": 72.73,
            "percentageTokens": 69.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneCompletion.tsx": {
            "lines": 113,
            "tokens": 874,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 104,
            "percentage": 11.5,
            "percentageTokens": 11.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneCard.tsx": {
            "lines": 344,
            "tokens": 2433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/MilestoneAnalytics.tsx": {
            "lines": 187,
            "tokens": 1359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalTimeline.tsx": {
            "lines": 117,
            "tokens": 960,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalReflectionsTab.tsx": {
            "lines": 292,
            "tokens": 2393,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 183,
            "percentage": 8.56,
            "percentageTokens": 7.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalQuickActions.tsx": {
            "lines": 97,
            "tokens": 796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalHabitManager.tsx": {
            "lines": 257,
            "tokens": 2147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 35,
            "duplicatedTokens": 247,
            "percentage": 13.62,
            "percentageTokens": 11.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalForm.tsx": {
            "lines": 207,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/goals/GoalCard.tsx": {
            "lines": 339,
            "tokens": 2632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/WidgetErrorBoundary.tsx": {
            "lines": 463,
            "tokens": 3328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/ErrorReportDialog.tsx": {
            "lines": 121,
            "tokens": 895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/ErrorFallbacks.tsx": {
            "lines": 96,
            "tokens": 808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/ErrorBoundary.tsx": {
            "lines": 109,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/CascadingErrorBoundary.tsx": {
            "lines": 492,
            "tokens": 3651,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/errors/AppErrorBoundary.tsx": {
            "lines": 308,
            "tokens": 2210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dnd/DroppableArea.tsx": {
            "lines": 34,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dnd/DraggableTask.tsx": {
            "lines": 74,
            "tokens": 584,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 91,
            "percentage": 9.46,
            "percentageTokens": 15.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dnd/DragAndDropProvider.tsx": {
            "lines": 103,
            "tokens": 766,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 104,
            "percentage": 7.77,
            "percentageTokens": 13.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dialogs/KeyboardShortcutsDialog.tsx": {
            "lines": 267,
            "tokens": 2110,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dev/ContrastChecker.tsx": {
            "lines": 187,
            "tokens": 1674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/GreetingHeader.tsx": {
            "lines": 86,
            "tokens": 735,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/WorkflowOptimizer.tsx": {
            "lines": 753,
            "tokens": 5361,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 78,
            "duplicatedTokens": 604,
            "percentage": 10.36,
            "percentageTokens": 11.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/RuleEditor.tsx": {
            "lines": 309,
            "tokens": 2450,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 186,
            "percentage": 6.47,
            "percentageTokens": 7.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/NotificationSettings.tsx": {
            "lines": 266,
            "tokens": 2045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/NotificationCenter.tsx": {
            "lines": 136,
            "tokens": 1103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/NaturalLanguageRuleBuilder.tsx": {
            "lines": 531,
            "tokens": 3949,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 108,
            "percentage": 2.64,
            "percentageTokens": 2.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/CrossModuleChains.tsx": {
            "lines": 631,
            "tokens": 4613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/AutomationRules.tsx": {
            "lines": 175,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/AutomationLogs.tsx": {
            "lines": 98,
            "tokens": 841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/automation/AIAutomationDashboard.tsx": {
            "lines": 651,
            "tokens": 4922,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 110,
            "percentage": 2,
            "percentageTokens": 2.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/ProtectedRoute.tsx": {
            "lines": 20,
            "tokens": 194,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/ProtectedRoute.test.tsx": {
            "lines": 479,
            "tokens": 3272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/RealTimeAnalytics.tsx": {
            "lines": 628,
            "tokens": 5093,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 61,
            "duplicatedTokens": 432,
            "percentage": 9.71,
            "percentageTokens": 8.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/PredictiveAnalytics.tsx": {
            "lines": 842,
            "tokens": 6209,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 151,
            "percentage": 2.85,
            "percentageTokens": 2.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/MobileAnalyticsDashboard.tsx": {
            "lines": 437,
            "tokens": 3269,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 101,
            "percentage": 2.97,
            "percentageTokens": 3.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/ExecutiveDashboard.tsx": {
            "lines": 852,
            "tokens": 6153,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 49,
            "duplicatedTokens": 271,
            "percentage": 5.75,
            "percentageTokens": 4.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/DashboardBuilder.tsx": {
            "lines": 948,
            "tokens": 7064,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 203,
            "percentage": 3.38,
            "percentageTokens": 2.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/analytics/AnalyticsDashboard.tsx": {
            "lines": 697,
            "tokens": 5545,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 95,
            "percentage": 2.58,
            "percentageTokens": 1.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/PredictiveInsightsWidget.tsx": {
            "lines": 536,
            "tokens": 4490,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 311,
            "percentage": 8.21,
            "percentageTokens": 6.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/BehavioralInsightsWidget.tsx": {
            "lines": 438,
            "tokens": 3532,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 311,
            "percentage": 10.05,
            "percentageTokens": 8.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIUsageWidget.tsx": {
            "lines": 585,
            "tokens": 4760,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 102,
            "percentage": 2.22,
            "percentageTokens": 2.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIRecommendationCard.tsx": {
            "lines": 125,
            "tokens": 964,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIInsightsDashboard.tsx": {
            "lines": 333,
            "tokens": 2593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai-insights/AIInsightCard.tsx": {
            "lines": 95,
            "tokens": 768,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/conversational-interface.tsx": {
            "lines": 298,
            "tokens": 2489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/ai-quick-actions.tsx": {
            "lines": 230,
            "tokens": 1741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/ai-chat-widget.tsx": {
            "lines": 69,
            "tokens": 570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/SmartRecommendations.tsx": {
            "lines": 835,
            "tokens": 6168,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 96,
            "percentage": 1.32,
            "percentageTokens": 1.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/RecommendationsBanner.tsx": {
            "lines": 248,
            "tokens": 1864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/LoadingSkeleton.tsx": {
            "lines": 164,
            "tokens": 1396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/AISettingsDashboard.tsx": {
            "lines": 863,
            "tokens": 6106,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 109,
            "percentage": 1.74,
            "percentageTokens": 1.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/AISettingsDashboard.test.tsx": {
            "lines": 534,
            "tokens": 4305,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 88,
            "duplicatedTokens": 804,
            "percentage": 16.48,
            "percentageTokens": 18.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ai/AIAssistant.tsx": {
            "lines": 263,
            "tokens": 2282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/accessibility/SkipNavigation.tsx": {
            "lines": 13,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/accessibility/AccessibleInput.tsx": {
            "lines": 77,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/test-utils.tsx": {
            "lines": 239,
            "tokens": 1858,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 156,
            "percentage": 6.69,
            "percentageTokens": 8.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Templates.tsx": {
            "lines": 187,
            "tokens": 1523,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 18,
            "duplicatedTokens": 191,
            "percentage": 9.63,
            "percentageTokens": 12.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Tasks.tsx": {
            "lines": 400,
            "tokens": 3485,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/TaskDetail.tsx": {
            "lines": 506,
            "tokens": 4015,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 137,
            "percentage": 4.94,
            "percentageTokens": 3.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/TagManagement.tsx": {
            "lines": 15,
            "tokens": 118,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Signup.tsx": {
            "lines": 159,
            "tokens": 1232,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 115,
            "duplicatedTokens": 838,
            "percentage": 72.33,
            "percentageTokens": 68.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Reflections.tsx": {
            "lines": 223,
            "tokens": 2007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ReflectionDetail.tsx": {
            "lines": 245,
            "tokens": 2047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/RecurringTasks.tsx": {
            "lines": 238,
            "tokens": 1895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/QuickTodos.tsx": {
            "lines": 135,
            "tokens": 1180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Projects.tsx": {
            "lines": 438,
            "tokens": 3454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ProfileAssessment.tsx": {
            "lines": 365,
            "tokens": 2754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Profile.tsx": {
            "lines": 305,
            "tokens": 2504,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 279,
            "percentage": 11.15,
            "percentageTokens": 11.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Notes.tsx": {
            "lines": 131,
            "tokens": 1045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NotFound.tsx": {
            "lines": 26,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NewGoal.tsx": {
            "lines": 86,
            "tokens": 695,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Login.tsx": {
            "lines": 148,
            "tokens": 1131,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 111,
            "duplicatedTokens": 801,
            "percentage": 75,
            "percentageTokens": 70.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Index.tsx": {
            "lines": 23,
            "tokens": 180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Habits.tsx": {
            "lines": 172,
            "tokens": 1528,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/HabitDetail.tsx": {
            "lines": 323,
            "tokens": 2882,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Goals.tsx": {
            "lines": 332,
            "tokens": 2882,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 92,
            "percentage": 2.11,
            "percentageTokens": 3.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/GoalDetail.tsx": {
            "lines": 758,
            "tokens": 6086,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 338,
            "percentage": 5.01,
            "percentageTokens": 5.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Gamification.tsx": {
            "lines": 482,
            "tokens": 3636,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 110,
            "percentage": 2.7,
            "percentageTokens": 3.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ForgotPassword.tsx": {
            "lines": 106,
            "tokens": 880,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 231,
            "percentage": 27.36,
            "percentageTokens": 26.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Dashboard.tsx": {
            "lines": 44,
            "tokens": 354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Automation.tsx": {
            "lines": 92,
            "tokens": 656,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Analytics.tsx": {
            "lines": 305,
            "tokens": 2086,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 101,
            "percentage": 4.26,
            "percentageTokens": 4.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AccessibilityStatement.tsx": {
            "lines": 340,
            "tokens": 2887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AccessibilitySettings.tsx": {
            "lines": 8,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AIInsights.tsx": {
            "lines": 11,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useSupeRadminAccess.tsx": {
            "lines": 102,
            "tokens": 704,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-mobile.tsx": {
            "lines": 20,
            "tokens": 195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/WidgetContext.tsx": {
            "lines": 169,
            "tokens": 1452,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThemeContext.tsx": {
            "lines": 162,
            "tokens": 1176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/TaskViewContext.tsx": {
            "lines": 52,
            "tokens": 449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ModulesContext.tsx": {
            "lines": 62,
            "tokens": 598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/AuthContext.tsx": {
            "lines": 344,
            "tokens": 2881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/AccessibilityContext.tsx": {
            "lines": 126,
            "tokens": 865,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DatabaseTest.tsx": {
            "lines": 126,
            "tokens": 988,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main.tsx": {
            "lines": 208,
            "tokens": 1054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 366,
            "tokens": 2471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 65749,
          "tokens": 515886,
          "sources": 313,
          "clones": 119,
          "duplicatedLines": 1776,
          "duplicatedTokens": 14291,
          "percentage": 2.7,
          "percentageTokens": 2.77,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/components/mobile/TouchOptimizedButton.tsx": {
            "lines": 11,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/rtl.css": {
            "lines": 252,
            "tokens": 920,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/globals.css": {
            "lines": 221,
            "tokens": 1536,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 74,
            "duplicatedTokens": 604,
            "percentage": 33.48,
            "percentageTokens": 39.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/index.css": {
            "lines": 784,
            "tokens": 5973,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.css": {
            "lines": 41,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 1309,
          "tokens": 8709,
          "sources": 5,
          "clones": 1,
          "duplicatedLines": 37,
          "duplicatedTokens": 302,
          "percentage": 2.83,
          "percentageTokens": 3.47,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 148078,
      "tokens": 1163323,
      "sources": 800,
      "clones": 211,
      "duplicatedLines": 4089,
      "duplicatedTokens": 30527,
      "percentage": 2.76,
      "percentageTokens": 2.62,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ") {\n        if (await page.locator(section.selector).count() > 0) {\n          await expect(page.locator(section.selector)).toBeVisible();\n          console.log(`✓ ${section.name} section present`);\n        }\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/04-compliance-legal/legal-compliance.test.ts",
        "start": 65,
        "end": 70,
        "startLoc": {
          "line": 65,
          "column": 16,
          "position": 747
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 816
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/04-compliance-legal/legal-compliance.test.ts",
        "start": 26,
        "end": 30,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 310
        },
        "endLoc": {
          "line": 30,
          "column": 5,
          "position": 378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "const headings = await page.locator('h1, h2, h3, h4, h5, h6').all();\n\n      if (headings.length > 0) {\n        // Should have exactly one h1\n        const h1Count = await page.locator('h1').count();\n        expect(h1Count).toBe(1);\n\n        // Check heading order (simplified check)",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/04-compliance-legal/accessibility-compliance.test.ts",
        "start": 142,
        "end": 149,
        "startLoc": {
          "line": 142,
          "column": 7,
          "position": 1362
        },
        "endLoc": {
          "line": 149,
          "column": 42,
          "position": 1436
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/05-ux-usability/user-experience.test.ts",
        "start": 94,
        "end": 101,
        "startLoc": {
          "line": 94,
          "column": 7,
          "position": 844
        },
        "endLoc": {
          "line": 101,
          "column": 40,
          "position": 918
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const violations = await getViolations(page, {\n          rules: { 'color-contrast': { enabled: true } }\n        });\n\n        const contrastViolations = violations.filter(v => v.id === 'color-contrast');\n        expect(contrastViolations.length).toBe(0);\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/04-compliance-legal/accessibility-compliance.test.ts",
        "start": 286,
        "end": 292,
        "startLoc": {
          "line": 286,
          "column": 9,
          "position": 2745
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2826
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/04-compliance-legal/accessibility-compliance.test.ts",
        "start": 256,
        "end": 263,
        "startLoc": {
          "line": 256,
          "column": 9,
          "position": 2451
        },
        "endLoc": {
          "line": 263,
          "column": 3,
          "position": 2533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ".json();\n        expect(backupJob.jobId).toBeDefined();\n        expect(backupJob.status).toBe('initiated');\n\n        // Monitor backup progress\n        let backupCompleted = false;\n        const maxWaitTime = 300000; // 5 minutes\n        const startTime = Date.now();\n\n        while (!backupCompleted && (Date.now() - startTime) < maxWaitTime) {\n          const statusResponse = await page.request.get(`/api/admin/backup/status/${backupJob.jobId}`);\n\n          if (statusResponse.status() === 200) {\n            const status = await statusResponse.json();\n\n            if (status.status === 'completed') {\n              backupCompleted = true;\n              expect(status.size).toBeGreaterThan(0);\n              expect(status.checksum).toBeDefined();\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/03-reliability-availability/disaster-recovery.test.ts",
        "start": 382,
        "end": 401,
        "startLoc": {
          "line": 382,
          "column": 15,
          "position": 3605
        },
        "endLoc": {
          "line": 401,
          "column": 2,
          "position": 3818
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/07-data-management/backup-recovery.test.ts",
        "start": 101,
        "end": 122,
        "startLoc": {
          "line": 101,
          "column": 21,
          "position": 1083
        },
        "endLoc": {
          "line": 122,
          "column": 7,
          "position": 1298
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= await page.evaluate(() => {\n          if ('memory' in performance) {\n            return {\n              usedJSHeapSize: (performance as any).memory.usedJSHeapSize,\n              totalJSHeapSize: (performance as any).memory.totalJSHeapSize,\n              jsHeapSizeLimit: (performance as any).memory.jsHeapSizeLimit\n            };\n          }\n          return null;\n        });\n\n        if (finalMemory",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/02-scalability-performance/performance-optimization.test.ts",
        "start": 330,
        "end": 341,
        "startLoc": {
          "line": 330,
          "column": 2,
          "position": 3095
        },
        "endLoc": {
          "line": 341,
          "column": 12,
          "position": 3201
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/02-scalability-performance/performance-optimization.test.ts",
        "start": 310,
        "end": 321,
        "startLoc": {
          "line": 310,
          "column": 2,
          "position": 2918
        },
        "endLoc": {
          "line": 321,
          "column": 14,
          "position": 3024
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "< monitoringDuration) {\n        const checkStartTime = Date.now();\n\n        try {\n          const response = await page.request.get('/api/health');\n          const responseTime = Date.now() - checkStartTime;\n\n          monitoringResults.push({\n            timestamp: Date.now(),\n            responseTime",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/02-scalability-performance/horizontal-scaling.test.ts",
        "start": 195,
        "end": 204,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 2086
        },
        "endLoc": {
          "line": 204,
          "column": 13,
          "position": 2170
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/03-reliability-availability/system-reliability.test.ts",
        "start": 20,
        "end": 29,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 201
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 285
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const vulnerabilities = auditResult.vulnerabilities || {};\n          const highCriticalVulns = Object.values(vulnerabilities).filter((vuln: any) =>\n            vuln.severity === 'high' || vuln.severity === 'critical'\n          );\n\n          expect(highCriticalVulns.length).toBe(0);\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/01-security/vulnerability-scanning.test.ts",
        "start": 35,
        "end": 41,
        "startLoc": {
          "line": 35,
          "column": 11,
          "position": 479
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 559
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/01-security/vulnerability-scanning.test.ts",
        "start": 16,
        "end": 23,
        "startLoc": {
          "line": 16,
          "column": 9,
          "position": 175
        },
        "endLoc": {
          "line": 23,
          "column": 34,
          "position": 256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", async () => {\n      await page.goto('/login');\n      await page.fill('[data-testid=\"email-input\"]', 'user@test.beproductive.com');\n      await page.fill('[data-testid=\"password-input\"]', 'UserTest123!');\n      await page.click('[data-testid=\"login-button\"]');\n      await expect(page.url()).toContain('/dashboard');\n    });\n\n    await test.step('Verify session token security'",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/01-security/authentication-authorization.test.ts",
        "start": 95,
        "end": 103,
        "startLoc": {
          "line": 95,
          "column": 30,
          "position": 939
        },
        "endLoc": {
          "line": 103,
          "column": 32,
          "position": 1031
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/01-security/authentication-authorization.test.ts",
        "start": 56,
        "end": 64,
        "startLoc": {
          "line": 56,
          "column": 24,
          "position": 578
        },
        "endLoc": {
          "line": 64,
          "column": 33,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", async () => {\n      await page.goto('/login');\n      await page.fill('[data-testid=\"email-input\"]', 'user@test.beproductive.com');\n      await page.fill('[data-testid=\"password-input\"]', 'UserTest123!');\n      await page.click('[data-testid=\"login-button\"]');\n      await expect(page.url()).toContain('/dashboard');\n    });\n\n    await test.step('Test session token manipulation'",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/production-readiness/01-security/authentication-authorization.test.ts",
        "start": 194,
        "end": 202,
        "startLoc": {
          "line": 194,
          "column": 33,
          "position": 1881
        },
        "endLoc": {
          "line": 202,
          "column": 34,
          "position": 1973
        }
      },
      "secondFile": {
        "name": "src/test/production-readiness/01-security/authentication-authorization.test.ts",
        "start": 56,
        "end": 64,
        "startLoc": {
          "line": 56,
          "column": 24,
          "position": 578
        },
        "endLoc": {
          "line": 64,
          "column": 33,
          "position": 670
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "|| 0)}\n              </div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">\n              Last {timeRange} days\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/admin/APIManagement/UsageAnalytics.tsx",
        "start": 195,
        "end": 206,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 1637
        },
        "endLoc": {
          "line": 206,
          "column": 7,
          "position": 1714
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/UsageAnalytics.tsx",
        "start": 176,
        "end": 187,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1484
        },
        "endLoc": {
          "line": 187,
          "column": 6,
          "position": 1561
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "} from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  CreateAPIKeyRequest",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/admin/APIManagement/CreateAPIKeyDialog.tsx",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 9
        },
        "endLoc": {
          "line": 22,
          "column": 20,
          "position": 139
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/EditAPIKeyDialog.tsx",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 12
        },
        "endLoc": {
          "line": 22,
          "column": 7,
          "position": 142
        }
      }
    },
    {
      "format": "tsx",
      "lines": 52,
      "fragment": "<div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monthly_limit\">Monthly Limit ($)</Label>\n              <Input\n                id=\"monthly_limit\"\n                type=\"number\"\n                min=\"0\"\n                step=\"0.01\"\n                value={formData.monthly_limit_usd}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    monthly_limit_usd: parseFloat(e.target.value),\n                  })\n                }\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"daily_requests\">Daily Requests</Label>\n              <Input\n                id=\"daily_requests\"\n                type=\"number\"\n                min=\"0\"\n                value={formData.daily_request_limit}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    daily_request_limit: parseInt(e.target.value),\n                  })\n                }\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monthly_tokens\">Monthly Tokens</Label>\n              <Input\n                id=\"monthly_tokens\"\n                type=\"number\"\n                min=\"0\"\n                value={formData.monthly_token_limit}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    monthly_token_limit: parseInt(e.target.value),\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <DialogFooter",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/admin/APIManagement/CreateAPIKeyDialog.tsx",
        "start": 185,
        "end": 236,
        "startLoc": {
          "line": 185,
          "column": 11,
          "position": 1341
        },
        "endLoc": {
          "line": 236,
          "column": 13,
          "position": 1668
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/EditAPIKeyDialog.tsx",
        "start": 157,
        "end": 208,
        "startLoc": {
          "line": 157,
          "column": 11,
          "position": 1162
        },
        "endLoc": {
          "line": 208,
          "column": 4,
          "position": 1498
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ", async () => {\n    renderWithRouter(<TimeTrackingWidget />);\n\n    await waitFor(\n      () => {\n        expect(\n          screen.queryByTestId(\"loading-skeleton-widget\"),\n        ).not.toBeInTheDocument();\n      },\n      { timeout: 1500 },\n    );\n\n    // Get timer control buttons\n    const buttons = screen.getAllByRole(\"button\");\n    const timerButtons = buttons.filter(\n      (button) =>\n        button.className.includes(\"h-9\") &&\n        (button as HTMLButtonElement).type === \"button\" &&\n        !button.className.includes(\"w-full\"),\n    );\n\n    // Second timer button should be stop",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/widgets/TimeTrackingWidget.test.tsx",
        "start": 131,
        "end": 152,
        "startLoc": {
          "line": 131,
          "column": 37,
          "position": 1062
        },
        "endLoc": {
          "line": 152,
          "column": 38,
          "position": 1225
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/TimeTrackingWidget.test.tsx",
        "start": 93,
        "end": 114,
        "startLoc": {
          "line": 93,
          "column": 41,
          "position": 807
        },
        "endLoc": {
          "line": 114,
          "column": 61,
          "position": 970
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ": ({ children, ...props }: any) => {\n      const cleanProps = { ...props };\n      delete cleanProps.initial;\n      delete cleanProps.animate;\n      delete cleanProps.exit;\n      delete cleanProps.transition;\n      delete cleanProps.whileHover;\n      delete cleanProps.whileTap;\n      return <button",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 19,
        "end": 27,
        "startLoc": {
          "line": 19,
          "column": 7,
          "position": 211
        },
        "endLoc": {
          "line": 27,
          "column": 7,
          "position": 299
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 9,
        "end": 17,
        "startLoc": {
          "line": 9,
          "column": 4,
          "position": 102
        },
        "endLoc": {
          "line": 17,
          "column": 4,
          "position": 190
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", async () => {\n    const consoleSpy = vi.spyOn(console, \"log\").mockImplementation(() => {});\n\n    renderWithRouter(<SmartRecommendationsWidget />);\n\n    await waitFor(() => {\n      expect(screen.getByText(\"Schedule deep work block\")).toBeInTheDocument();\n    });\n\n    // Find the dismiss button (X icon button)",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 138,
        "end": 147,
        "startLoc": {
          "line": 138,
          "column": 31,
          "position": 1174
        },
        "endLoc": {
          "line": 147,
          "column": 43,
          "position": 1261
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 118,
        "end": 127,
        "startLoc": {
          "line": 118,
          "column": 33,
          "position": 1023
        },
        "endLoc": {
          "line": 127,
          "column": 6,
          "position": 1110
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", async () => {\n    const consoleSpy = vi.spyOn(console, \"log\").mockImplementation(() => {});\n\n    renderWithRouter(<SmartRecommendationsWidget />);\n\n    await waitFor(() => {\n      expect(screen.getByText(\"Schedule deep work block\")).toBeInTheDocument();\n    });\n\n    // Initial count",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 222,
        "end": 231,
        "startLoc": {
          "line": 222,
          "column": 47,
          "position": 1820
        },
        "endLoc": {
          "line": 231,
          "column": 17,
          "position": 1907
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 118,
        "end": 127,
        "startLoc": {
          "line": 118,
          "column": 33,
          "position": 1023
        },
        "endLoc": {
          "line": 127,
          "column": 6,
          "position": 1110
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const buttons = screen.getAllByRole(\"button\");\n    const dismissButton = buttons.find(\n      (button) =>\n        button.className.includes(\"absolute\") &&\n        button.className.includes(\"top-2\"),\n    );\n\n    if (dismissButton) {\n      fireEvent.click(dismissButton);\n\n      // After dismissing, should show next recommendation",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 236,
        "end": 246,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 1959
        },
        "endLoc": {
          "line": 246,
          "column": 53,
          "position": 2040
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/SmartRecommendationsWidget.test.tsx",
        "start": 148,
        "end": 157,
        "startLoc": {
          "line": 148,
          "column": 5,
          "position": 1264
        },
        "endLoc": {
          "line": 157,
          "column": 7,
          "position": 1344
        }
      }
    },
    {
      "format": "javascript",
      "lines": 112,
      "fragment": "}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    expect(screen.getByText(\"Knowledge Notes\")).toBeInTheDocument();\n    expect(screen.getByText(\"Test Note 1\")).toBeInTheDocument();\n    expect(screen.getByText(\"Test Note 2\")).toBeInTheDocument();\n  });\n\n  it(\"displays note types correctly\", () => {\n    render(\n      <NotesGrid\n        notes={mockNotes}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    expect(screen.getByText(\"fleeting\")).toBeInTheDocument();\n    expect(screen.getByText(\"permanent\")).toBeInTheDocument();\n  });\n\n  it(\"shows linked indicator for notes with links\", () => {\n    render(\n      <NotesGrid\n        notes={mockNotes}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    // Should show \"Linked\" for the note with [[linked content]]\n    expect(screen.getByText(\"Linked\")).toBeInTheDocument();\n  });\n\n  it(\"calls onNoteClick when note is clicked\", () => {\n    render(\n      <NotesGrid\n        notes={mockNotes}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    const noteCard = screen\n      .getByText(\"Test Note 1\")\n      .closest(\n        '[role=\"button\"], [tabindex], button, [onclick], .cursor-pointer',\n      );\n    expect(noteCard).toBeInTheDocument();\n\n    if (noteCard) {\n      fireEvent.click(noteCard);\n      expect(mockOnNoteClick).toHaveBeenCalledWith(mockNotes[0]);\n    }\n  });\n\n  it(\"calls onNewNote when new note button is clicked\", () => {\n    render(\n      <NotesGrid\n        notes={mockNotes}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    const newNoteButton = screen.getByText(\"New Note\");\n    fireEvent.click(newNoteButton);\n    expect(mockOnNewNote).toHaveBeenCalled();\n  });\n\n  it(\"filters notes by search query\", () => {\n    render(\n      <NotesGrid\n        notes={mockNotes}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    const searchInput = screen.getByPlaceholderText(\"Search notes...\");\n    fireEvent.change(searchInput, { target: { value: \"Test Note 1\" } });\n\n    expect(screen.getByText(\"Test Note 1\")).toBeInTheDocument();\n    expect(screen.queryByText(\"Test Note 2\")).not.toBeInTheDocument();\n  });\n\n  it(\"filters notes by type\", () => {\n    render(\n      <NotesGrid\n        notes={mockNotes}\n        onNoteClick={mockOnNoteClick}\n        onNewNote={mockOnNewNote}\n      />,\n    );\n\n    const filterSelect = screen.getByRole(\"combobox\");\n    fireEvent.click(filterSelect);\n\n    const permanentOption = screen.getByText(\"Permanent\");\n    fireEvent.click(permanentOption);\n\n    expect(screen.queryByText(\"Test Note 1\")).not.toBeInTheDocument();\n    expect(screen.getByText(\"Test Note 2\")).toBeInTheDocument();\n  });\n\n  it(\"shows loading state\", () => {\n    render(\n      <NotesGrid\n        notes={[",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/notes/NotesGrid.test.tsx",
        "start": 55,
        "end": 166,
        "startLoc": {
          "line": 55,
          "column": 10,
          "position": 397
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1138
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/notes/NotesGrid.test.tsx",
        "start": 40,
        "end": 117,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 307
        },
        "endLoc": {
          "line": 117,
          "column": 10,
          "position": 784
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ";\nimport type { ReactNode } from \"react\";\n\nvi.mock(\"@/integrations/supabase/client\");\n\nconst createWrapper = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useReflections.test.tsx",
        "start": 10,
        "end": 23,
        "startLoc": {
          "line": 10,
          "column": 33,
          "position": 95
        },
        "endLoc": {
          "line": 23,
          "column": 7,
          "position": 193
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useTasks.test.tsx",
        "start": 14,
        "end": 27,
        "startLoc": {
          "line": 14,
          "column": 25,
          "position": 132
        },
        "endLoc": {
          "line": 27,
          "column": 6,
          "position": 230
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n    };\n\n    vi.mocked(supabase.from).mockReturnValue({\n      select: vi.fn().mockReturnThis(),\n      eq: vi.fn().mockReturnThis(),\n      order: vi.fn().mockResolvedValue({\n        data: [mockReflection],\n        error: null,\n      }),\n    } as any);\n\n    const { result } = renderHook(() => useReflections(\"workspace-id\")",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useReflections.test.tsx",
        "start": 107,
        "end": 119,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 939
        },
        "endLoc": {
          "line": 119,
          "column": 2,
          "position": 1056
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useReflections.test.tsx",
        "start": 76,
        "end": 89,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 661
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 780
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      session: null,\n      profile: null,\n      loading: false,\n      authError: null,\n      signIn: vi.fn(),\n      signUp: vi.fn(),\n      signOut: vi.fn(),\n      signInWithGoogle: vi.fn(),\n      resetPassword: vi.fn(),\n      updateProfile: vi.fn(),\n      clearAuthError: vi.fn(),\n    });",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 173,
        "end": 185,
        "startLoc": {
          "line": 173,
          "column": 5,
          "position": 1585
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 1695
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 64,
        "end": 76,
        "startLoc": {
          "line": 64,
          "column": 9,
          "position": 558
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ";\n\n// Mock Supabase client\nconst mockSupabase = {\n  from: vi.fn(() => ({\n    select: vi.fn(() => ({\n      eq: vi.fn(() => ({\n        order: vi.fn(() => ({\n          data",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 3,
        "end": 11,
        "startLoc": {
          "line": 3,
          "column": 19,
          "position": 52
        },
        "endLoc": {
          "line": 11,
          "column": 5,
          "position": 130
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 3,
        "end": 11,
        "startLoc": {
          "line": 3,
          "column": 33,
          "position": 52
        },
        "endLoc": {
          "line": 11,
          "column": 6,
          "position": 130
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n        })),\n      })),\n    })),\n    insert: vi.fn(() => ({\n      select: vi.fn(() => ({\n        single: vi.fn(() => ({\n          data: {\n            id: \"1\",\n            title",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 12,
        "end": 21,
        "startLoc": {
          "line": 12,
          "column": 5,
          "position": 142
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 224
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 27,
        "end": 36,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 278
        },
        "endLoc": {
          "line": 36,
          "column": 8,
          "position": 360
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n  })),\n};\n\nvi.mock(\"@/integrations/supabase/client\", () => ({\n  supabase: mockSupabase,\n}));\n\n// Mock auth context\nconst mockUser = {\n  id: \"user1\",\n  email: \"test@example.com\",\n};\n\nvi.mock(\"@/contexts/AuthContext\", () => ({\n  useAuth: () => ({\n    user: mockUser,\n    session: null,\n    profile: null,\n    loading: false,\n    authError: null,\n    signIn: vi.fn(),\n    signUp: vi.fn(),\n    signOut: vi.fn(),\n    signInWithGoogle: vi.fn(),\n    resetPassword: vi.fn(),\n    updateProfile: vi.fn(),\n    clearAuthError: vi.fn(),\n  }),\n}));\n\n// Mock toast\nvi.mock(\"@/hooks/use-toast\", () => ({\n  useToast: () => ({\n    toast: vi.fn(),\n  }),\n}));\n\ndescribe",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 65,
        "end": 103,
        "startLoc": {
          "line": 65,
          "column": 5,
          "position": 611
        },
        "endLoc": {
          "line": 103,
          "column": 9,
          "position": 880
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 48,
        "end": 86,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 458
        },
        "endLoc": {
          "line": 86,
          "column": 26,
          "position": 727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", async () => {\n    // Mock no user\n    vi.mocked(require(\"@/contexts/AuthContext\").useAuth).mockReturnValue({\n      user: null,\n      session: null,\n      profile: null,\n      loading: false,\n      authError: null,\n      signIn: vi.fn(),\n      signUp: vi.fn(),\n      signOut: vi.fn(),\n      signInWithGoogle: vi.fn(),\n      resetPassword: vi.fn(),\n      updateProfile: vi.fn(),\n      clearAuthError: vi.fn(),\n    });\n\n    const { result } = renderHook(() => useNotes",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 152,
        "end": 169,
        "startLoc": {
          "line": 152,
          "column": 54,
          "position": 1354
        },
        "endLoc": {
          "line": 169,
          "column": 9,
          "position": 1521
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 170,
        "end": 187,
        "startLoc": {
          "line": 170,
          "column": 34,
          "position": 1549
        },
        "endLoc": {
          "line": 187,
          "column": 23,
          "position": 1716
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ";\nimport type { ReactNode } from \"react\";\n\nvi.mock(\"@/integrations/supabase/client\");\n\nconst createWrapper = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n\n  return ({ children }: { children: ReactNode }) => (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\ndescribe(\"useHabits Hook\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 12,
        "end": 30,
        "startLoc": {
          "line": 12,
          "column": 27,
          "position": 112
        },
        "endLoc": {
          "line": 30,
          "column": 17,
          "position": 261
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useTasks.test.tsx",
        "start": 14,
        "end": 28,
        "startLoc": {
          "line": 14,
          "column": 25,
          "position": 132
        },
        "endLoc": {
          "line": 28,
          "column": 22,
          "position": 244
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ";\n\n    vi.mocked(supabase.from).mockReturnValue({\n      select: vi.fn().mockReturnThis(),\n      eq: vi.fn().mockReturnThis(),\n      order: vi.fn().mockResolvedValue({\n        data: [mockHabit",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 727
        },
        "endLoc": {
          "line": 82,
          "column": 10,
          "position": 793
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useReflections.test.tsx",
        "start": 77,
        "end": 83,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 665
        },
        "endLoc": {
          "line": 83,
          "column": 15,
          "position": 731
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "});\n\n    vi.mocked(supabase.from).mockReturnValue({\n      select: vi.fn().mockReturnThis(),\n      eq: vi.fn().mockReturnThis(),\n      order: vi.fn().mockResolvedValue({\n        data: [mockHabit],\n        error: null,\n      }),\n      in: vi.fn().mockReturnThis(),\n      gte: vi.fn().mockResolvedValue({\n        data: [],\n        error: null,\n      }),\n    } as any);\n\n    const { result } = renderHook(() => useHabits(\"workspace-id\"), {\n      wrapper: createWrapper(),\n    });\n\n    await waitFor(() => {\n      expect(result.current.data",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 106,
        "end": 127,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 1031
        },
        "endLoc": {
          "line": 127,
          "column": 5,
          "position": 1234
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 76,
        "end": 97,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 725
        },
        "endLoc": {
          "line": 97,
          "column": 10,
          "position": 928
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": ";\n\n    vi.mocked(supabase.from).mockImplementation((table) => {\n      if (table === \"habits\") {\n        return {\n          select: vi.fn().mockReturnThis(),\n          eq: vi.fn().mockReturnThis(),\n          order: vi.fn().mockResolvedValue({\n            data: [mockHabit],\n            error: null,\n          }),\n        } as any;\n      }\n      return {\n        select: vi.fn().mockReturnThis(),\n        eq: vi.fn().mockReturnThis(),\n        in: vi.fn().mockReturnThis(),\n        gte: vi.fn().mockResolvedValue({\n          data: mockEntries,\n          error: null,\n        }),\n      } as any;\n    });\n\n    const { result } = renderHook(() => useHabits(\"workspace-id\")",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 137,
        "end": 161,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1382
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1617
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 39,
        "end": 64,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 366
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 603
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ");\n\n    const { result } = renderHook(() => useHabits(\"workspace-id\"), {\n      wrapper: createWrapper(),\n    });\n\n    await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    const habit = result.current.data?.[0];\n    expect(habit?.completion_rate",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 159,
        "end": 170,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1592
        },
        "endLoc": {
          "line": 170,
          "column": 16,
          "position": 1696
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 90,
        "end": 101,
        "startLoc": {
          "line": 90,
          "column": 4,
          "position": 864
        },
        "endLoc": {
          "line": 101,
          "column": 15,
          "position": 968
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n\n    vi.mocked(supabase.from).mockReturnValue({\n      update: vi.fn().mockReturnThis(),\n      eq: vi.fn().mockReturnThis(),\n      select: vi.fn().mockReturnThis(),\n      single: vi.fn().mockResolvedValue({\n        data: mockHabit",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 177,
        "end": 184,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1754
        },
        "endLoc": {
          "line": 184,
          "column": 10,
          "position": 1834
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useTasks.test.tsx",
        "start": 135,
        "end": 142,
        "startLoc": {
          "line": 135,
          "column": 4,
          "position": 1362
        },
        "endLoc": {
          "line": 142,
          "column": 2,
          "position": 1442
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ");\n\n    vi.mocked(supabase.from).mockReturnValue({\n      update: vi.fn().mockReturnThis(),\n      eq: vi.fn().mockReturnThis(),\n      select: vi.fn().mockReturnThis(),\n      single: vi.fn().mockResolvedValue({\n        data: { ...mockHabit",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 204,
        "end": 211,
        "startLoc": {
          "line": 204,
          "column": 2,
          "position": 1993
        },
        "endLoc": {
          "line": 211,
          "column": 10,
          "position": 2077
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useHabits.test.tsx",
        "start": 177,
        "end": 142,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1753
        },
        "endLoc": {
          "line": 142,
          "column": 9,
          "position": 1445
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "vi.mock(\"@/integrations/supabase/client\");\n\nconst createWrapper = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n\n  return ({ children }: { children: ReactNode }) => (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\ndescribe(\"useGoals Hook\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGoals.test.tsx",
        "start": 15,
        "end": 30,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 131
        },
        "endLoc": {
          "line": 30,
          "column": 16,
          "position": 262
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useReflections.test.tsx",
        "start": 13,
        "end": 28,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 113
        },
        "endLoc": {
          "line": 28,
          "column": 22,
          "position": 244
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ", error: null }),\n    } as any);\n\n    vi.mocked(supabase.channel).mockReturnValue({\n      on: vi.fn().mockReturnThis(),\n      subscribe: vi.fn(),\n    } as any);\n\n    vi.mocked(supabase.removeChannel).mockReturnValue(\n      Promise.resolve(\"ok\" as any),\n    );\n\n    const { result } = renderHook(() => useGoals(), {\n      wrapper: createWrapper(),\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    // Test create goal",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGoals.test.tsx",
        "start": 85,
        "end": 105,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 861
        },
        "endLoc": {
          "line": 105,
          "column": 20,
          "position": 1038
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useGoals.test.tsx",
        "start": 43,
        "end": 63,
        "startLoc": {
          "line": 43,
          "column": 10,
          "position": 412
        },
        "endLoc": {
          "line": 63,
          "column": 7,
          "position": 589
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ";\n\n    vi.mocked(supabase.from).mockReturnValue({\n      select: vi.fn().mockReturnThis(),\n      eq: vi.fn().mockReturnThis(),\n      single: vi.fn().mockResolvedValue({ data: null",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGoals.test.tsx",
        "start": 138,
        "end": 143,
        "startLoc": {
          "line": 138,
          "column": 10,
          "position": 1316
        },
        "endLoc": {
          "line": 143,
          "column": 5,
          "position": 1380
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useTasks.test.tsx",
        "start": 77,
        "end": 83,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 705
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 770
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "}),\n    ];\n\n    vi.mocked(supabase.from).mockReturnValue({\n      select: vi.fn().mockReturnThis(),\n      order: vi.fn().mockResolvedValue({ data: mockGoals, error: null }),\n    } as any);\n\n    vi.mocked(supabase.channel).mockReturnValue({\n      on: vi.fn().mockReturnThis(),\n      subscribe: vi.fn(),\n    } as any);\n\n    vi.mocked(supabase.removeChannel).mockReturnValue(\n      Promise.resolve(\"ok\" as any),\n    );\n\n    const { result } = renderHook(() => useGoals(), {\n      wrapper: createWrapper(),\n    });\n\n    await waitFor(() => {\n      expect(result.current.goals",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGoals.test.tsx",
        "start": 162,
        "end": 184,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1588
        },
        "endLoc": {
          "line": 184,
          "column": 6,
          "position": 1805
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useGoals.test.tsx",
        "start": 38,
        "end": 60,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 356
        },
        "endLoc": {
          "line": 60,
          "column": 10,
          "position": 573
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "order: vi.fn(() => ({\n            data: [],\n            error: null,\n          })),\n        })),\n      })),\n      insert: vi.fn(() => ({\n        select: vi.fn(() => ({\n          single: vi.fn(() => ({\n            data: {\n              id: \"1\",\n              user_id: \"user1\",\n              level",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGamification.test.ts",
        "start": 26,
        "end": 38,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 236
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 353
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 10,
        "end": 37,
        "startLoc": {
          "line": 10,
          "column": 9,
          "position": 114
        },
        "endLoc": {
          "line": 37,
          "column": 17,
          "position": 367
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    })),\n    channel: vi.fn(() => ({\n      on: vi.fn(() => ({\n        subscribe: vi.fn(() => ({\n          unsubscribe: vi.fn(),\n        })),\n      })),\n    })),\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGamification.test.ts",
        "start": 50,
        "end": 59,
        "startLoc": {
          "line": 50,
          "column": 5,
          "position": 443
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 529
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 54,
        "end": 63,
        "startLoc": {
          "line": 54,
          "column": 2,
          "position": 497
        },
        "endLoc": {
          "line": 63,
          "column": 4,
          "position": 583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ",\n}));\n\n// Mock auth context\nconst mockUser = {\n  id: \"user1\",\n  email: \"test@example.com\",\n};\n\nvi.mock(\"@/contexts/AuthContext\", () => ({\n  useAuth: () => ({\n    user: mockUser,\n    session: null,\n    profile: null,\n    loading: false,\n    authError: null,\n    signIn: vi.fn(),\n    signUp: vi.fn(),\n    signOut: vi.fn(),\n    signInWithGoogle: vi.fn(),\n    resetPassword: vi.fn(),\n    updateProfile: vi.fn(),\n    clearAuthError: vi.fn(),\n  }),\n}));\n\n// Mock toast\nvi.mock(\"@/hooks/use-toast\", () => ({\n  useToast: () => ({\n    toast: vi.fn(),\n  }),\n}));\n\ndescribe(\"useGamification\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGamification.test.ts",
        "start": 59,
        "end": 92,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 530
        },
        "endLoc": {
          "line": 92,
          "column": 18,
          "position": 769
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 53,
        "end": 103,
        "startLoc": {
          "line": 53,
          "column": 13,
          "position": 490
        },
        "endLoc": {
          "line": 103,
          "column": 11,
          "position": 882
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "});\n  });\n\n  it(\"should handle errors when user is not authenticated\", async () => {\n    // Mock no user\n    vi.mocked(require(\"@/contexts/AuthContext\").useAuth).mockReturnValue({\n      user: null,\n      session: null,\n      profile: null,\n      loading: false,\n      authError: null,\n      signIn: vi.fn(),\n      signUp: vi.fn(),\n      signOut: vi.fn(),\n      signInWithGoogle: vi.fn(),\n      resetPassword: vi.fn(),\n      updateProfile: vi.fn(),\n      clearAuthError: vi.fn(),\n    });\n\n    const { result } = renderHook(() => useGamification",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/hooks/useGamification.test.ts",
        "start": 132,
        "end": 152,
        "startLoc": {
          "line": 132,
          "column": 5,
          "position": 1171
        },
        "endLoc": {
          "line": 152,
          "column": 16,
          "position": 1352
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useNotes.test.ts",
        "start": 149,
        "end": 187,
        "startLoc": {
          "line": 149,
          "column": 5,
          "position": 1340
        },
        "endLoc": {
          "line": 187,
          "column": 23,
          "position": 1716
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ").mockResolvedValue({\n      data: { user: mockUser, session: mockSession },\n      error: null,\n    });\n\n    const { result } = renderHook(() => useAuth(), { wrapper });\n\n    await act(async () => {\n      const response = await result.current.signUp",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/auth/AuthContext.test.tsx",
        "start": 124,
        "end": 132,
        "startLoc": {
          "line": 124,
          "column": 7,
          "position": 1251
        },
        "endLoc": {
          "line": 132,
          "column": 7,
          "position": 1349
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/auth/AuthContext.test.tsx",
        "start": 62,
        "end": 70,
        "startLoc": {
          "line": 62,
          "column": 19,
          "position": 671
        },
        "endLoc": {
          "line": 70,
          "column": 7,
          "position": 769
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "vi.mock(\"framer-motion\", () => ({\n  motion: {\n    div: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n  },\n  AnimatePresence: ({ children }: any) => children,\n}));\n\nconst renderWithRouter = (component: React.ReactElement) => {\n  return render(<BrowserRouter>{component}</BrowserRouter>);\n};\n\ndescribe(\"RecommendationsBanner\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/unit/ai/RecommendationsBanner.test.tsx",
        "start": 7,
        "end": 18,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 79
        },
        "endLoc": {
          "line": 18,
          "column": 24,
          "position": 209
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/TimeTrackingWidget.test.tsx",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 152
        },
        "endLoc": {
          "line": 25,
          "column": 21,
          "position": 282
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ",\n          signIn: vi.fn(),\n          signUp: vi.fn(),\n          signOut: vi.fn(),\n          signInWithGoogle: vi.fn(),\n          resetPassword: vi.fn(),\n          updateProfile: vi.fn(),\n        },\n      },\n    );\n\n    expect(screen.queryByText",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/ProtectedRoute.test.tsx",
        "start": 42,
        "end": 53,
        "startLoc": {
          "line": 42,
          "column": 6,
          "position": 335
        },
        "endLoc": {
          "line": 53,
          "column": 12,
          "position": 421
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/ProtectedRoute.test.tsx",
        "start": 17,
        "end": 28,
        "startLoc": {
          "line": 17,
          "column": 5,
          "position": 151
        },
        "endLoc": {
          "line": 28,
          "column": 10,
          "position": 237
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ",\n          profile: null,\n          loading: false,\n          signIn: vi.fn(),\n          signUp: vi.fn(),\n          signOut: vi.fn(),\n          signInWithGoogle: vi.fn(),\n          resetPassword: vi.fn(),\n          updateProfile: vi.fn(),\n        },\n      },\n    );\n\n    expect(screen.getByText",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/ProtectedRoute.test.tsx",
        "start": 66,
        "end": 79,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 520
        },
        "endLoc": {
          "line": 79,
          "column": 10,
          "position": 620
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/ProtectedRoute.test.tsx",
        "start": 40,
        "end": 28,
        "startLoc": {
          "line": 40,
          "column": 5,
          "position": 321
        },
        "endLoc": {
          "line": 28,
          "column": 10,
          "position": 237
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ";\n\n// Mock Supabase client\nvi.mock(\"@/integrations/supabase/client\", () => ({\n  supabase: {\n    auth: {\n      getSession: vi.fn(),\n      getUser: vi.fn(),\n      signInWithPassword: vi.fn(),\n      signUp: vi.fn(),\n      signOut: vi.fn(),\n      signInWithOAuth: vi.fn(),\n      resetPasswordForEmail: vi.fn(),\n      onAuthStateChange: vi.fn(() => ({\n        data: { subscription: { unsubscribe: vi.fn() } },\n      })),\n    },\n    from: vi.fn(() => ({\n      select: vi.fn()",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 21,
        "end": 39,
        "startLoc": {
          "line": 21,
          "column": 27,
          "position": 177
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 361
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/auth/AuthContext.test.tsx",
        "start": 6,
        "end": 24,
        "startLoc": {
          "line": 6,
          "column": 8,
          "position": 100
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 284
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const emailInput = screen.getByLabelText(/email/i);\n      const passwordInput = screen.getByLabelText(/^password$/i);\n      const confirmPasswordInput = screen.getByLabelText(/confirm password/i);\n      const fullNameInput = screen.getByLabelText(/full name/i);\n      const signupButton = screen.getByRole(\"button\", {\n        name: /create account/i,\n      });\n\n      await user.type(fullNameInput, \"Existing User\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 354,
        "end": 362,
        "startLoc": {
          "line": 354,
          "column": 7,
          "position": 2972
        },
        "endLoc": {
          "line": 362,
          "column": 16,
          "position": 3070
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 286,
        "end": 294,
        "startLoc": {
          "line": 286,
          "column": 7,
          "position": 2401
        },
        "endLoc": {
          "line": 294,
          "column": 11,
          "position": 2499
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ");\n\n      // Setup auth state change listener\n      let authStateCallback: (event: string, session: any) => void;\n      vi.mocked(supabase.auth.onAuthStateChange).mockImplementation(\n        (callback) => {\n          authStateCallback = callback;\n          return {\n            data: { subscription: { unsubscribe: vi.fn() } },\n          } as any;\n        },\n      );\n\n      render(\n        <TestWrapper>\n          <AuthStateTestComponent />\n        </TestWrapper>,\n      );\n\n      // Simulate user sign in with profile error",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 436,
        "end": 455,
        "startLoc": {
          "line": 436,
          "column": 7,
          "position": 3731
        },
        "endLoc": {
          "line": 455,
          "column": 44,
          "position": 3868
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 383,
        "end": 402,
        "startLoc": {
          "line": 383,
          "column": 2,
          "position": 3267
        },
        "endLoc": {
          "line": 402,
          "column": 31,
          "position": 3404
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "mockSupabaseChain.single.mockResolvedValue({\n        data: createMockProfile({ id: mockUser.id }),\n        error: null,\n      });\n\n      render(\n        <TestWrapper initialRoute=\"/login\">\n          <AuthStateTestComponent />\n          <Login />\n        </TestWrapper>,\n      );\n\n      // Start login process",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 483,
        "end": 495,
        "startLoc": {
          "line": 483,
          "column": 7,
          "position": 4146
        },
        "endLoc": {
          "line": 495,
          "column": 23,
          "position": 4225
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 7,
          "position": 2096
        },
        "endLoc": {
          "line": 258,
          "column": 32,
          "position": 2175
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const emailInput = screen.getByLabelText(/email/i);\n      const passwordInput = screen.getByLabelText(/password/i);\n      const loginButton = screen.getByRole(\"button\", { name: /sign in/i });\n\n      await user.type(emailInput, \"test@example.com\");\n      await user.type(passwordInput, \"password123\");\n\n      // Start multiple concurrent operations (shouldn't break)",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 496,
        "end": 503,
        "startLoc": {
          "line": 496,
          "column": 7,
          "position": 4228
        },
        "endLoc": {
          "line": 503,
          "column": 58,
          "position": 4313
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 159,
        "end": 165,
        "startLoc": {
          "line": 159,
          "column": 7,
          "position": 1368
        },
        "endLoc": {
          "line": 165,
          "column": 6,
          "position": 1452
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "let authStateCallback: (event: string, session: any) => void;\n      vi.mocked(supabase.auth.onAuthStateChange).mockImplementation(\n        (callback) => {\n          authStateCallback = callback;\n          return {\n            data: { subscription: { unsubscribe: vi.fn() } },\n          } as any;\n        },\n      );\n\n      render(\n        <TestWrapper>\n          <ProfileUpdateComponent",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 618,
        "end": 630,
        "startLoc": {
          "line": 618,
          "column": 7,
          "position": 5192
        },
        "endLoc": {
          "line": 630,
          "column": 23,
          "position": 5305
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 386,
        "end": 398,
        "startLoc": {
          "line": 386,
          "column": 7,
          "position": 3275
        },
        "endLoc": {
          "line": 398,
          "column": 23,
          "position": 3388
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "let authStateCallback: (event: string, session: any) => void;\n      vi.mocked(supabase.auth.onAuthStateChange).mockImplementation(\n        (callback) => {\n          authStateCallback = callback;\n          return {\n            data: { subscription: { unsubscribe: vi.fn() } },\n          } as any;\n        },\n      );\n\n      render(\n        <TestWrapper>\n          <ProfileUpdateComponent />\n        </TestWrapper>,\n      );\n\n      await",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 689,
        "end": 705,
        "startLoc": {
          "line": 689,
          "column": 7,
          "position": 5797
        },
        "endLoc": {
          "line": 705,
          "column": 6,
          "position": 5926
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 386,
        "end": 634,
        "startLoc": {
          "line": 386,
          "column": 7,
          "position": 3275
        },
        "endLoc": {
          "line": 634,
          "column": 35,
          "position": 5321
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "await waitFor(() => {\n        expect(screen.getByTestId(\"user\")).toHaveTextContent(mockUser.email);\n        expect(screen.getByTestId(\"session\")).toHaveTextContent(\"has-session\");\n        expect(screen.getByTestId(\"loading\")).toHaveTextContent(\"loaded\");\n      });\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 742,
        "end": 747,
        "startLoc": {
          "line": 742,
          "column": 7,
          "position": 6226
        },
        "endLoc": {
          "line": 747,
          "column": 2,
          "position": 6296
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 411,
        "end": 417,
        "startLoc": {
          "line": 411,
          "column": 7,
          "position": 3484
        },
        "endLoc": {
          "line": 417,
          "column": 26,
          "position": 3555
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\n\n// Mock framer-motion\nvi.mock(\"framer-motion\", () => ({\n  motion: {\n    div: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n  },\n  AnimatePresence: ({ children }: any) => children,\n}));\n\n// Mock the LoadingSkeleton component",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/ai/AIWidgetIntegration.test.tsx",
        "start": 8,
        "end": 18,
        "startLoc": {
          "line": 8,
          "column": 29,
          "position": 132
        },
        "endLoc": {
          "line": 18,
          "column": 38,
          "position": 225
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/ai/RecommendationsBanner.test.tsx",
        "start": 4,
        "end": 21,
        "startLoc": {
          "line": 4,
          "column": 40,
          "position": 74
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 240
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const buttons = screen.getAllByRole(\"button\");\n      const timerButtons = buttons.filter(\n        (button) =>\n          button.className.includes(\"h-9\") &&\n          (button as HTMLButtonElement).type === \"button\" &&\n          !button.className.includes(\"w-full\"),\n      );\n\n      if",
      "tokens": 0,
      "firstFile": {
        "name": "src/__tests__/integration/ai/AIWidgetIntegration.test.tsx",
        "start": 95,
        "end": 103,
        "startLoc": {
          "line": 95,
          "column": 7,
          "position": 813
        },
        "endLoc": {
          "line": 103,
          "column": 3,
          "position": 893
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/widgets/TimeTrackingWidget.test.tsx",
        "start": 106,
        "end": 114,
        "startLoc": {
          "line": 106,
          "column": 5,
          "position": 890
        },
        "endLoc": {
          "line": 114,
          "column": 61,
          "position": 970
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "): void {\n    const endTime = Date.now();\n    const startTime = this.stepTimers.get(step);\n    const duration = startTime ? endTime - startTime : undefined;\n\n    const stepData: DiagnosticStep = {\n      step,\n      timestamp: endTime,\n      duration,\n      status: \"failed\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/diagnostics/logger.ts",
        "start": 76,
        "end": 85,
        "startLoc": {
          "line": 76,
          "column": 3,
          "position": 547
        },
        "endLoc": {
          "line": 85,
          "column": 9,
          "position": 639
        }
      },
      "secondFile": {
        "name": "src/utils/diagnostics/logger.ts",
        "start": 47,
        "end": 56,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 346
        },
        "endLoc": {
          "line": 56,
          "column": 12,
          "position": 438
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "{\n      user: null,\n      session: null,\n      profile: null,\n      loading: false,\n      signIn: vi.fn(),\n      signUp: vi.fn(),\n      signOut: vi.fn(),\n      signInWithGoogle: vi.fn(),\n      resetPassword: vi.fn(),\n      updateProfile: vi.fn(),\n    },\n    ...",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/utils/test-utils.tsx",
        "start": 24,
        "end": 36,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 233
        },
        "endLoc": {
          "line": 36,
          "column": 4,
          "position": 334
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/ProtectedRoute.test.tsx",
        "start": 38,
        "end": 25,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 307
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 224
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "|| \"\",\n        tokensUsed,\n        cost,\n        responseTime,\n        success: true,\n      };\n    } catch (error) {\n      return {\n        content: \"\",\n        tokensUsed: { prompt: 0, completion: 0, total: 0 },\n        cost: 0,\n        responseTime: Date.now() - startTime,\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  private async callGemini",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/ai/aiServiceManager.ts",
        "start": 195,
        "end": 213,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 1697
        },
        "endLoc": {
          "line": 213,
          "column": 11,
          "position": 1840
        }
      },
      "secondFile": {
        "name": "src/services/ai/aiServiceManager.ts",
        "start": 137,
        "end": 155,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1171
        },
        "endLoc": {
          "line": 155,
          "column": 11,
          "position": 1314
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "[0]?.text || \"\",\n        tokensUsed,\n        cost,\n        responseTime,\n        success: true,\n      };\n    } catch (error) {\n      return {\n        content: \"\",\n        tokensUsed: { prompt: 0, completion: 0, total: 0 },\n        cost: 0,\n        responseTime: Date.now() - startTime,\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  private async callLovable",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/ai/aiServiceManager.ts",
        "start": 262,
        "end": 280,
        "startLoc": {
          "line": 262,
          "column": 2,
          "position": 2232
        },
        "endLoc": {
          "line": 280,
          "column": 12,
          "position": 2382
        }
      },
      "secondFile": {
        "name": "src/services/ai/aiServiceManager.ts",
        "start": 195,
        "end": 155,
        "startLoc": {
          "line": 195,
          "column": 8,
          "position": 1690
        },
        "endLoc": {
          "line": 155,
          "column": 11,
          "position": 1314
        }
      }
    },
    {
      "format": "json",
      "lines": 216,
      "fragment": "{\n    \"user\": {\n      \"id\": \"sarah-001\",\n      \"name\": \"Sarah Chen\",\n      \"email\": \"sarah.chen@company.com\",\n      \"role\": \"Executive\",\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"language\": \"en\",\n        \"timezone\": \"America/New_York\"\n      },\n      \"avatar\": \"https://api.dicebear.com/7.x/avataaars/svg?seed=Sarah Chen\",\n      \"joinDate\": \"2024-01-01T08:00:00.000Z\",\n      \"lastActive\": \"2025-10-04T18:58:00.432Z\"\n    },\n    \"activityData\": {\n      \"tasks\": [\n        {\n          \"id\": \"sarah-task-1\",\n          \"title\": \"Board meeting preparation\",\n          \"description\": \"Prepare Q4 financial reports and strategy presentation\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-06T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"meeting\",\n          \"estimatedTime\": 180,\n          \"tags\": [\n            \"quarterly\",\n            \"board\",\n            \"finance\"\n          ]\n        },\n        {\n          \"id\": \"sarah-task-2\",\n          \"title\": \"Review team performance metrics\",\n          \"description\": \"Analyze team KPIs and prepare feedback sessions\",\n          \"completed\": true,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"completedAt\": \"2025-10-04T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"management\",\n          \"estimatedTime\": 120,\n          \"actualTime\": 105,\n          \"tags\": [\n            \"team\",\n            \"performance\",\n            \"kpi\"\n          ]\n        },\n        {\n          \"id\": \"sarah-task-3\",\n          \"title\": \"Investor call - Series B discussion\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-05T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"meeting\",\n          \"estimatedTime\": 90,\n          \"tags\": [\n            \"investor\",\n            \"funding\",\n            \"series-b\"\n          ]\n        },\n        {\n          \"id\": \"sarah-task-4\",\n          \"title\": \"Approve marketing budget for Q1\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-11T18:58:00.432Z\",\n          \"priority\": \"medium\",\n          \"category\": \"finance\",\n          \"estimatedTime\": 60,\n          \"tags\": [\n            \"budget\",\n            \"marketing\",\n            \"q1\"\n          ]\n        }\n      ],\n      \"goals\": [\n        {\n          \"id\": \"sarah-goal-1\",\n          \"title\": \"Increase company revenue by 25%\",\n          \"description\": \"Drive revenue growth through strategic initiatives\",\n          \"progress\": 78,\n          \"deadline\": \"2025-12-31T08:00:00.000Z\",\n          \"category\": \"business\",\n          \"milestones\": [\n            {\n              \"title\": \"Q1 targets met\",\n              \"completed\": true,\n              \"date\": \"2025-03-31T07:00:00.000Z\"\n            },\n            {\n              \"title\": \"Q2 targets met\",\n              \"completed\": true,\n              \"date\": \"2025-06-30T07:00:00.000Z\"\n            },\n            {\n              \"title\": \"Q3 targets met\",\n              \"completed\": true,\n              \"date\": \"2025-09-30T07:00:00.000Z\"\n            },\n            {\n              \"title\": \"Q4 targets\",\n              \"completed\": false,\n              \"date\": \"2025-12-31T08:00:00.000Z\"\n            }\n          ]\n        },\n        {\n          \"id\": \"sarah-goal-2\",\n          \"title\": \"Complete executive leadership program\",\n          \"description\": \"Enhance leadership skills through certified program\",\n          \"progress\": 45,\n          \"deadline\": \"2025-06-30T07:00:00.000Z\",\n          \"category\": \"professional\",\n          \"milestones\": [\n            {\n              \"title\": \"Module 1: Strategic Thinking\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Module 2: Team Leadership\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Module 3: Financial Management\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"Module 4: Innovation Leadership\",\n              \"completed\": false\n            }\n          ]\n        }\n      ],\n      \"habits\": [\n        {\n          \"id\": \"sarah-habit-1\",\n          \"title\": \"Morning meditation\",\n          \"description\": \"10 minutes of mindfulness to start the day\",\n          \"completions\": [\n            \"2025-10-03T18:58:00.432Z\",\n            \"2025-10-02T18:58:00.432Z\",\n            \"2025-10-04T18:58:00.432Z\"\n          ],\n          \"target\": 7,\n          \"frequency\": \"daily\",\n          \"streak\": 3\n        },\n        {\n          \"id\": \"sarah-habit-2\",\n          \"title\": \"Review daily priorities\",\n          \"description\": \"Plan and prioritize the day ahead\",\n          \"completions\": [\n            \"2025-10-03T18:58:00.432Z\",\n            \"2025-10-02T18:58:00.432Z\",\n            \"2025-10-01T18:58:00.432Z\",\n            \"2025-10-04T18:58:00.432Z\"\n          ],\n          \"target\": 7,\n          \"frequency\": \"daily\",\n          \"streak\": 4\n        }\n      ],\n      \"timeEntries\": [\n        {\n          \"id\": \"time-sarah-task-2\",\n          \"taskId\": \"sarah-task-2\",\n          \"startTime\": \"2025-10-04T18:58:00.432Z\",\n          \"endTime\": \"2025-10-04T20:43:00.432Z\",\n          \"duration\": 105,\n          \"category\": \"management\",\n          \"description\": \"Review team performance metrics\"\n        }\n      ],\n      \"notes\": [\n        {\n          \"id\": \"sarah-note-1\",\n          \"title\": \"Board Meeting Strategy\",\n          \"content\": \"Key points for Q4 board presentation:\\n- Revenue up 23% YoY\\n- Team expansion in Q1\\n- New product line launch timeline\\n- Investment in AI/ML capabilities\",\n          \"tags\": [\n            \"board\",\n            \"strategy\",\n            \"q4\"\n          ],\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"updatedAt\": \"2025-10-04T18:58:00.432Z\"\n        },\n        {\n          \"id\": \"sarah-note-2\",\n          \"title\": \"Leadership Insights\",\n          \"content\": \"Notes from executive coaching session:\\n- Focus on delegation\\n- Improve cross-functional collaboration\\n- Develop succession planning\\n- Invest in team development\",\n          \"tags\": [\n            \"leadership\",\n            \"coaching\",\n            \"development\"\n          ],\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"updatedAt\": \"2025-10-03T18:58:00.432Z\"\n        }\n      ]\n    },\n    \"statistics\": {\n      \"totalTasks\": 4,\n      \"completedTasks\": 1,\n      \"totalGoals\": 2,\n      \"avgGoalProgress\": 61.5,\n      \"totalHabits\": 2,\n      \"habitStreak\": 4,\n      \"totalTimeTracked\": 105\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/data/demo/all-personas-demo-data.json",
        "start": 2,
        "end": 217,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 217,
          "column": 2,
          "position": 1184
        }
      },
      "secondFile": {
        "name": "src/data/demo/sarah-demo-data.json",
        "start": 1,
        "end": 216,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 1177
        }
      }
    },
    {
      "format": "json",
      "lines": 210,
      "fragment": "{\n    \"user\": {\n      \"id\": \"marcus-001\",\n      \"name\": \"Marcus Rodriguez\",\n      \"email\": \"marcus.rodriguez@dev.com\",\n      \"role\": \"Developer\",\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"language\": \"en\",\n        \"timezone\": \"America/Los_Angeles\"\n      },\n      \"avatar\": \"https://api.dicebear.com/7.x/avataaars/svg?seed=Marcus Rodriguez\",\n      \"joinDate\": \"2024-01-01T08:00:00.000Z\",\n      \"lastActive\": \"2025-10-04T18:58:00.432Z\"\n    },\n    \"activityData\": {\n      \"tasks\": [\n        {\n          \"id\": \"marcus-task-1\",\n          \"title\": \"Fix authentication bug in user login\",\n          \"description\": \"Resolve OAuth integration issue causing login failures\",\n          \"completed\": true,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"completedAt\": \"2025-10-04T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"bug\",\n          \"estimatedTime\": 120,\n          \"actualTime\": 95,\n          \"tags\": [\n            \"auth\",\n            \"oauth\",\n            \"critical\"\n          ]\n        },\n        {\n          \"id\": \"marcus-task-2\",\n          \"title\": \"Implement dark mode toggle component\",\n          \"description\": \"Create reusable theme switcher with smooth transitions\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-07T18:58:00.432Z\",\n          \"priority\": \"medium\",\n          \"category\": \"feature\",\n          \"estimatedTime\": 180,\n          \"tags\": [\n            \"ui\",\n            \"theme\",\n            \"component\"\n          ]\n        },\n        {\n          \"id\": \"marcus-task-3\",\n          \"title\": \"Code review for team PRs\",\n          \"description\": \"Review 5 pending pull requests from team members\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-05T18:58:00.432Z\",\n          \"priority\": \"medium\",\n          \"category\": \"review\",\n          \"estimatedTime\": 90,\n          \"tags\": [\n            \"review\",\n            \"team\",\n            \"pr\"\n          ]\n        },\n        {\n          \"id\": \"marcus-task-4\",\n          \"title\": \"Optimize database queries\",\n          \"description\": \"Improve performance of user data fetching\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"priority\": \"low\",\n          \"category\": \"optimization\",\n          \"estimatedTime\": 240,\n          \"tags\": [\n            \"database\",\n            \"performance\",\n            \"optimization\"\n          ]\n        }\n      ],\n      \"goals\": [\n        {\n          \"id\": \"marcus-goal-1\",\n          \"title\": \"Master TypeScript advanced patterns\",\n          \"description\": \"Become proficient in advanced TS concepts and patterns\",\n          \"progress\": 65,\n          \"deadline\": \"2025-03-31T07:00:00.000Z\",\n          \"category\": \"learning\",\n          \"milestones\": [\n            {\n              \"title\": \"Generic Types\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Conditional Types\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Template Literal Types\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"Advanced Mapped Types\",\n              \"completed\": false\n            }\n          ]\n        },\n        {\n          \"id\": \"marcus-goal-2\",\n          \"title\": \"Contribute to 3 open source projects\",\n          \"description\": \"Make meaningful contributions to OSS community\",\n          \"progress\": 33,\n          \"deadline\": \"2025-12-31T08:00:00.000Z\",\n          \"category\": \"professional\",\n          \"milestones\": [\n            {\n              \"title\": \"React component library\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Node.js utility package\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"TypeScript definitions\",\n              \"completed\": false\n            }\n          ]\n        }\n      ],\n      \"habits\": [\n        {\n          \"id\": \"marcus-habit-1\",\n          \"title\": \"Daily coding practice\",\n          \"description\": \"Solve algorithmic problems and practice coding\",\n          \"completions\": [\n            \"2025-10-04T18:58:00.432Z\",\n            \"2025-10-03T18:58:00.432Z\",\n            \"2025-10-02T18:58:00.432Z\",\n            \"2025-10-01T18:58:00.432Z\",\n            \"2025-09-30T18:58:00.432Z\"\n          ],\n          \"target\": 7,\n          \"frequency\": \"daily\",\n          \"streak\": 5\n        },\n        {\n          \"id\": \"marcus-habit-2\",\n          \"title\": \"Read tech articles\",\n          \"description\": \"Stay updated with latest development trends\",\n          \"completions\": [\n            \"2025-10-03T18:58:00.432Z\",\n            \"2025-10-01T18:58:00.432Z\",\n            \"2025-10-04T18:58:00.432Z\"\n          ],\n          \"target\": 5,\n          \"frequency\": \"weekly\",\n          \"streak\": 3\n        }\n      ],\n      \"timeEntries\": [\n        {\n          \"id\": \"time-marcus-task-1\",\n          \"taskId\": \"marcus-task-1\",\n          \"startTime\": \"2025-10-04T18:58:00.432Z\",\n          \"endTime\": \"2025-10-04T20:33:00.432Z\",\n          \"duration\": 95,\n          \"category\": \"bug\",\n          \"description\": \"Fix authentication bug in user login\"\n        }\n      ],\n      \"notes\": [\n        {\n          \"id\": \"marcus-note-1\",\n          \"title\": \"TypeScript Advanced Patterns\",\n          \"content\": \"Conditional types syntax:\\n```typescript\\ntype NonNullable<T> = T extends null | undefined ? never : T\\n```\\nUseful for creating more precise type definitions.\",\n          \"tags\": [\n            \"typescript\",\n            \"learning\",\n            \"programming\"\n          ],\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"updatedAt\": \"2025-10-04T18:58:00.432Z\"\n        },\n        {\n          \"id\": \"marcus-note-2\",\n          \"title\": \"Code Review Checklist\",\n          \"content\": \"- Security vulnerabilities\\n- Performance implications\\n- Code readability\\n- Test coverage\\n- Documentation updates\\n- Breaking changes\",\n          \"tags\": [\n            \"code-review\",\n            \"checklist\",\n            \"best-practices\"\n          ],\n          \"createdAt\": \"2025-10-02T18:58:00.432Z\",\n          \"updatedAt\": \"2025-10-02T18:58:00.432Z\"\n        }\n      ]\n    },\n    \"statistics\": {\n      \"totalTasks\": 4,\n      \"completedTasks\": 1,\n      \"totalGoals\": 2,\n      \"avgGoalProgress\": 49,\n      \"totalHabits\": 2,\n      \"habitStreak\": 5,\n      \"totalTimeTracked\": 95\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/data/demo/all-personas-demo-data.json",
        "start": 218,
        "end": 427,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1191
        },
        "endLoc": {
          "line": 427,
          "column": 2,
          "position": 2332
        }
      },
      "secondFile": {
        "name": "src/data/demo/marcus-demo-data.json",
        "start": 1,
        "end": 210,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 210,
          "column": 2,
          "position": 1140
        }
      }
    },
    {
      "format": "json",
      "lines": 169,
      "fragment": "{\n    \"user\": {\n      \"id\": \"elena-001\",\n      \"name\": \"Elena Petrov\",\n      \"email\": \"elena.petrov@pm.com\",\n      \"role\": \"Project Manager\",\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"language\": \"en\",\n        \"timezone\": \"Europe/London\"\n      },\n      \"avatar\": \"https://api.dicebear.com/7.x/avataaars/svg?seed=Elena Petrov\",\n      \"joinDate\": \"2024-01-01T08:00:00.000Z\",\n      \"lastActive\": \"2025-10-04T18:58:00.432Z\"\n    },\n    \"activityData\": {\n      \"tasks\": [\n        {\n          \"id\": \"elena-task-1\",\n          \"title\": \"Sprint planning meeting\",\n          \"description\": \"Plan user stories and estimate effort for next sprint\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-05T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"planning\",\n          \"estimatedTime\": 120,\n          \"tags\": [\n            \"sprint\",\n            \"planning\",\n            \"team\"\n          ]\n        },\n        {\n          \"id\": \"elena-task-2\",\n          \"title\": \"Update project timeline\",\n          \"description\": \"Adjust milestones based on current progress\",\n          \"completed\": true,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"completedAt\": \"2025-10-04T18:58:00.432Z\",\n          \"priority\": \"medium\",\n          \"category\": \"planning\",\n          \"estimatedTime\": 90,\n          \"actualTime\": 75,\n          \"tags\": [\n            \"timeline\",\n            \"milestones\",\n            \"tracking\"\n          ]\n        },\n        {\n          \"id\": \"elena-task-3\",\n          \"title\": \"Client stakeholder review\",\n          \"description\": \"Present project progress to key stakeholders\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-06T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"meeting\",\n          \"estimatedTime\": 60,\n          \"tags\": [\n            \"client\",\n            \"stakeholder\",\n            \"review\"\n          ]\n        }\n      ],\n      \"goals\": [\n        {\n          \"id\": \"elena-goal-1\",\n          \"title\": \"Deliver project on time and budget\",\n          \"description\": \"Successfully complete the digital transformation project\",\n          \"progress\": 75,\n          \"deadline\": \"2025-06-30T07:00:00.000Z\",\n          \"category\": \"project\",\n          \"milestones\": [\n            {\n              \"title\": \"Discovery Phase\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Design Phase\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Development Phase\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"Testing & Launch\",\n              \"completed\": false\n            }\n          ]\n        },\n        {\n          \"id\": \"elena-goal-2\",\n          \"title\": \"Achieve PMP certification\",\n          \"description\": \"Complete Project Management Professional certification\",\n          \"progress\": 40,\n          \"deadline\": \"2025-09-30T07:00:00.000Z\",\n          \"category\": \"professional\",\n          \"milestones\": [\n            {\n              \"title\": \"Complete training hours\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"Submit application\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"Take exam\",\n              \"completed\": false\n            }\n          ]\n        }\n      ],\n      \"habits\": [\n        {\n          \"id\": \"elena-habit-1\",\n          \"title\": \"Daily team standup\",\n          \"description\": \"Check in with team progress and blockers\",\n          \"completions\": [\n            \"2025-10-03T18:58:00.432Z\",\n            \"2025-10-02T18:58:00.432Z\",\n            \"2025-10-01T18:58:00.432Z\",\n            \"2025-10-04T18:58:00.432Z\"\n          ],\n          \"target\": 5,\n          \"frequency\": \"weekdays\",\n          \"streak\": 4\n        }\n      ],\n      \"timeEntries\": [\n        {\n          \"id\": \"time-elena-task-2\",\n          \"taskId\": \"elena-task-2\",\n          \"startTime\": \"2025-10-04T18:58:00.432Z\",\n          \"endTime\": \"2025-10-04T20:13:00.432Z\",\n          \"duration\": 75,\n          \"category\": \"planning\",\n          \"description\": \"Update project timeline\"\n        }\n      ],\n      \"notes\": [\n        {\n          \"id\": \"elena-note-1\",\n          \"title\": \"Project Retrospective\",\n          \"content\": \"Sprint 12 retrospective notes:\\nWhat went well:\\n- Team velocity improved\\n- Better estimation accuracy\\n\\nWhat to improve:\\n- Earlier stakeholder feedback\\n- More thorough testing\",\n          \"tags\": [\n            \"project\",\n            \"retrospective\",\n            \"scrum\"\n          ],\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"updatedAt\": \"2025-10-04T18:58:00.432Z\"\n        }\n      ]\n    },\n    \"statistics\": {\n      \"totalTasks\": 3,\n      \"completedTasks\": 1,\n      \"totalGoals\": 2,\n      \"avgGoalProgress\": 57.5,\n      \"totalHabits\": 1,\n      \"habitStreak\": 4,\n      \"totalTimeTracked\": 75\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/data/demo/all-personas-demo-data.json",
        "start": 428,
        "end": 596,
        "startLoc": {
          "line": 428,
          "column": 2,
          "position": 2339
        },
        "endLoc": {
          "line": 596,
          "column": 2,
          "position": 3262
        }
      },
      "secondFile": {
        "name": "src/data/demo/elena-demo-data.json",
        "start": 1,
        "end": 169,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 922
        }
      }
    },
    {
      "format": "json",
      "lines": 145,
      "fragment": "{\n    \"user\": {\n      \"id\": \"james-001\",\n      \"name\": \"James Thompson\",\n      \"email\": \"james.thompson@freelancer.com\",\n      \"role\": \"Freelancer\",\n      \"preferences\": {\n        \"theme\": \"auto\",\n        \"language\": \"en\",\n        \"timezone\": \"America/Chicago\"\n      },\n      \"avatar\": \"https://api.dicebear.com/7.x/avataaars/svg?seed=James Thompson\",\n      \"joinDate\": \"2024-01-01T08:00:00.000Z\",\n      \"lastActive\": \"2025-10-04T18:58:00.432Z\"\n    },\n    \"activityData\": {\n      \"tasks\": [\n        {\n          \"id\": \"james-task-1\",\n          \"title\": \"Client A - Website redesign\",\n          \"description\": \"Complete homepage and product pages redesign\",\n          \"completed\": false,\n          \"createdAt\": \"2025-09-27T18:58:00.432Z\",\n          \"dueDate\": \"2025-10-09T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"client_work\",\n          \"estimatedTime\": 480,\n          \"tags\": [\n            \"client-a\",\n            \"redesign\",\n            \"website\"\n          ]\n        },\n        {\n          \"id\": \"james-task-2\",\n          \"title\": \"Invoice Client B for December\",\n          \"description\": \"Generate and send invoice for completed work\",\n          \"completed\": true,\n          \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n          \"completedAt\": \"2025-10-04T18:58:00.432Z\",\n          \"priority\": \"high\",\n          \"category\": \"administrative\",\n          \"estimatedTime\": 30,\n          \"actualTime\": 25,\n          \"tags\": [\n            \"invoice\",\n            \"client-b\",\n            \"billing\"\n          ]\n        },\n        {\n          \"id\": \"james-task-3\",\n          \"title\": \"Update portfolio website\",\n          \"description\": \"Add recent projects and client testimonials\",\n          \"completed\": false,\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"priority\": \"medium\",\n          \"category\": \"personal\",\n          \"estimatedTime\": 120,\n          \"tags\": [\n            \"portfolio\",\n            \"marketing\",\n            \"website\"\n          ]\n        }\n      ],\n      \"goals\": [\n        {\n          \"id\": \"james-goal-1\",\n          \"title\": \"Increase monthly income by 30%\",\n          \"description\": \"Grow freelance business through better rates and more clients\",\n          \"progress\": 45,\n          \"deadline\": \"2025-12-31T08:00:00.000Z\",\n          \"category\": \"financial\",\n          \"milestones\": [\n            {\n              \"title\": \"Raise rates by 20%\",\n              \"completed\": true\n            },\n            {\n              \"title\": \"Get 2 new premium clients\",\n              \"completed\": false\n            },\n            {\n              \"title\": \"Launch premium service package\",\n              \"completed\": false\n            }\n          ]\n        }\n      ],\n      \"habits\": [\n        {\n          \"id\": \"james-habit-1\",\n          \"title\": \"Track time for all projects\",\n          \"description\": \"Record time spent on each client project\",\n          \"completions\": [\n            \"2025-10-04T18:58:00.432Z\",\n            \"2025-10-03T18:58:00.432Z\",\n            \"2025-10-02T18:58:00.432Z\",\n            \"2025-10-01T18:58:00.432Z\",\n            \"2025-09-30T18:58:00.432Z\",\n            \"2025-09-29T18:58:00.432Z\",\n            \"2025-09-28T18:58:00.432Z\"\n          ],\n          \"target\": 7,\n          \"frequency\": \"daily\",\n          \"streak\": 7\n        }\n      ],\n      \"timeEntries\": [\n        {\n          \"id\": \"time-james-task-2\",\n          \"taskId\": \"james-task-2\",\n          \"startTime\": \"2025-10-04T18:58:00.432Z\",\n          \"endTime\": \"2025-10-04T19:23:00.432Z\",\n          \"duration\": 25,\n          \"category\": \"administrative\",\n          \"description\": \"Invoice Client B for December\"\n        }\n      ],\n      \"notes\": [\n        {\n          \"id\": \"james-note-1\",\n          \"title\": \"Client Feedback - Website Project\",\n          \"content\": \"Client A feedback on homepage:\\n- Love the modern design\\n- Request mobile optimization\\n- Add contact form\\n- Consider adding testimonials section\",\n          \"tags\": [\n            \"client-feedback\",\n            \"website\",\n            \"design\"\n          ],\n          \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n          \"updatedAt\": \"2025-10-04T18:58:00.432Z\"\n        }\n      ]\n    },\n    \"statistics\": {\n      \"totalTasks\": 3,\n      \"completedTasks\": 1,\n      \"totalGoals\": 1,\n      \"avgGoalProgress\": 45,\n      \"totalHabits\": 1,\n      \"habitStreak\": 7,\n      \"totalTimeTracked\": 25\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/data/demo/all-personas-demo-data.json",
        "start": 597,
        "end": 741,
        "startLoc": {
          "line": 597,
          "column": 2,
          "position": 3269
        },
        "endLoc": {
          "line": 741,
          "column": 2,
          "position": 4060
        }
      },
      "secondFile": {
        "name": "src/data/demo/james-demo-data.json",
        "start": 1,
        "end": 145,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 790
        }
      }
    },
    {
      "format": "json",
      "lines": 155,
      "fragment": "{\n  \"user\": {\n    \"id\": \"aisha-001\",\n    \"name\": \"Aisha Williams\",\n    \"email\": \"aisha.williams@student.edu\",\n    \"role\": \"Student\",\n    \"preferences\": {\n      \"theme\": \"dark\",\n      \"language\": \"en\",\n      \"timezone\": \"America/New_York\"\n    },\n    \"avatar\": \"https://api.dicebear.com/7.x/avataaars/svg?seed=Aisha Williams\",\n    \"joinDate\": \"2024-01-01T08:00:00.000Z\",\n    \"lastActive\": \"2025-10-04T18:58:00.432Z\"\n  },\n  \"activityData\": {\n    \"tasks\": [\n      {\n        \"id\": \"aisha-task-1\",\n        \"title\": \"Complete calculus homework - Chapter 8\",\n        \"description\": \"Solve integration problems 1-25\",\n        \"completed\": false,\n        \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n        \"dueDate\": \"2025-10-05T18:58:00.432Z\",\n        \"priority\": \"high\",\n        \"category\": \"study\",\n        \"estimatedTime\": 120,\n        \"tags\": [\n          \"calculus\",\n          \"homework\",\n          \"math\"\n        ]\n      },\n      {\n        \"id\": \"aisha-task-2\",\n        \"title\": \"Read \\\"Pride and Prejudice\\\" - Chapters 10-15\",\n        \"description\": \"Reading assignment for English Literature class\",\n        \"completed\": true,\n        \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n        \"completedAt\": \"2025-10-04T18:58:00.432Z\",\n        \"priority\": \"medium\",\n        \"category\": \"study\",\n        \"estimatedTime\": 90,\n        \"actualTime\": 105,\n        \"tags\": [\n          \"english\",\n          \"literature\",\n          \"reading\"\n        ]\n      },\n      {\n        \"id\": \"aisha-task-3\",\n        \"title\": \"Study group - Chemistry exam prep\",\n        \"description\": \"Review organic chemistry concepts with study group\",\n        \"completed\": false,\n        \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n        \"dueDate\": \"2025-10-06T18:58:00.432Z\",\n        \"priority\": \"high\",\n        \"category\": \"study\",\n        \"estimatedTime\": 180,\n        \"tags\": [\n          \"chemistry\",\n          \"exam\",\n          \"study-group\"\n        ]\n      }\n    ],\n    \"goals\": [\n      {\n        \"id\": \"aisha-goal-1\",\n        \"title\": \"Maintain 3.8 GPA this semester\",\n        \"description\": \"Keep high academic performance across all courses\",\n        \"progress\": 85,\n        \"deadline\": \"2025-05-15T07:00:00.000Z\",\n        \"category\": \"academic\",\n        \"milestones\": [\n          {\n            \"title\": \"Midterm exams average 3.8+\",\n            \"completed\": true\n          },\n          {\n            \"title\": \"Complete all major assignments\",\n            \"completed\": false\n          },\n          {\n            \"title\": \"Final exams average 3.8+\",\n            \"completed\": false\n          }\n        ]\n      }\n    ],\n    \"habits\": [\n      {\n        \"id\": \"aisha-habit-1\",\n        \"title\": \"Study for 2 hours daily\",\n        \"description\": \"Dedicated study time for coursework\",\n        \"completions\": [\n          \"2025-10-03T18:58:00.432Z\",\n          \"2025-10-02T18:58:00.432Z\",\n          \"2025-10-01T18:58:00.432Z\",\n          \"2025-10-04T18:58:00.432Z\"\n        ],\n        \"target\": 7,\n        \"frequency\": \"daily\",\n        \"streak\": 4\n      }\n    ],\n    \"timeEntries\": [\n      {\n        \"id\": \"time-aisha-task-2\",\n        \"taskId\": \"aisha-task-2\",\n        \"startTime\": \"2025-10-04T18:58:00.432Z\",\n        \"endTime\": \"2025-10-04T20:43:00.432Z\",\n        \"duration\": 105,\n        \"category\": \"study\",\n        \"description\": \"Read \\\"Pride and Prejudice\\\" - Chapters 10-15\"\n      }\n    ],\n    \"notes\": [\n      {\n        \"id\": \"aisha-note-1\",\n        \"title\": \"Chemistry Study Notes\",\n        \"content\": \"Organic Chemistry - Chapter 12:\\n- Alcohols and Phenols\\n- Naming conventions: -ol suffix\\n- Properties: hydrogen bonding affects boiling point\\n- Reactions: dehydration, oxidation\",\n        \"tags\": [\n          \"chemistry\",\n          \"study\",\n          \"organic\"\n        ],\n        \"createdAt\": \"2025-10-04T18:58:00.432Z\",\n        \"updatedAt\": \"2025-10-04T18:58:00.432Z\"\n      },\n      {\n        \"id\": \"aisha-note-2\",\n        \"title\": \"Literature Essay Ideas\",\n        \"content\": \"Pride and Prejudice essay topics:\\n1. Social class and marriage\\n2. Character development of Elizabeth Bennet\\n3. Irony and wit in Austen's writing\\n4. Gender roles in Regency England\",\n        \"tags\": [\n          \"literature\",\n          \"essay\",\n          \"pride-prejudice\"\n        ],\n        \"createdAt\": \"2025-10-03T18:58:00.432Z\",\n        \"updatedAt\": \"2025-10-03T18:58:00.432Z\"\n      }\n    ]\n  },\n  \"statistics\": {\n    \"totalTasks\": 3,\n    \"completedTasks\": 1,\n    \"totalGoals\": 1,\n    \"avgGoalProgress\": 85,\n    \"totalHabits\": 1,\n    \"habitStreak\": 4,\n    \"totalTimeTracked\": 105\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/data/demo/aisha-demo-data.json",
        "start": 1,
        "end": 155,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 847
        }
      },
      "secondFile": {
        "name": "src/data/demo/all-personas-demo-data.json",
        "start": 742,
        "end": 896,
        "startLoc": {
          "line": 742,
          "column": 2,
          "position": 4067
        },
        "endLoc": {
          "line": 896,
          "column": 2,
          "position": 4915
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Brain className=\"h-5 w-5 text-purple-600\" />\n          <CardTitle className=\"text-lg\">AI Recommendations</CardTitle>\n        </div>\n        <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/widgets/SmartRecommendationsWidget.tsx",
        "start": 200,
        "end": 207,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1469
        },
        "endLoc": {
          "line": 207,
          "column": 2,
          "position": 1541
        }
      },
      "secondFile": {
        "name": "src/components/widgets/SmartRecommendationsWidget.tsx",
        "start": 166,
        "end": 173,
        "startLoc": {
          "line": 166,
          "column": 5,
          "position": 1196
        },
        "endLoc": {
          "line": 173,
          "column": 3,
          "position": 1268
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "() {\n  const navigate = useNavigate();\n  const { profile } = useAuth();\n  const [workspaceId, setWorkspaceId] = useState<string>(\"\");\n\n  useEffect(() => {\n    async function fetchWorkspace() {\n      if (!profile?.id) return;\n      const { data } = await supabase\n        .from(\"workspaces\")\n        .select(\"id\")\n        .eq(\"owner_id\", profile.id)\n        .eq(\"type\", \"personal\")\n        .single();\n      if (data) setWorkspaceId(data.id);\n    }\n    fetchWorkspace();\n  }, [profile?.id]);\n\n  const { data: habits",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/widgets/HabitsWidget.tsx",
        "start": 13,
        "end": 32,
        "startLoc": {
          "line": 13,
          "column": 13,
          "position": 158
        },
        "endLoc": {
          "line": 32,
          "column": 7,
          "position": 352
        }
      },
      "secondFile": {
        "name": "src/components/widgets/ReflectionsWidget.tsx",
        "start": 11,
        "end": 30,
        "startLoc": {
          "line": 11,
          "column": 18,
          "position": 129
        },
        "endLoc": {
          "line": 30,
          "column": 12,
          "position": 323
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ")}%</span>\n          </div>\n          <Progress value={averageProgress} className=\"h-2\" />\n        </div>\n\n        {/* Key Metrics */}\n        <div className=\"grid grid-cols-2 gap-3\">\n          <div className=\"space-y-1\">\n            <div className=\"text-2xl font-bold text-primary",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/widgets/GoalsWidget.tsx",
        "start": 74,
        "end": 82,
        "startLoc": {
          "line": 74,
          "column": 16,
          "position": 745
        },
        "endLoc": {
          "line": 82,
          "column": 32,
          "position": 815
        }
      },
      "secondFile": {
        "name": "src/components/widgets/HabitsWidget.tsx",
        "start": 76,
        "end": 84,
        "startLoc": {
          "line": 76,
          "column": 15,
          "position": 737
        },
        "endLoc": {
          "line": 84,
          "column": 34,
          "position": 807
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => navigate(\"/goals/new\")}\n            className=\"apple-button\"\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n    </BaseWidget>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/widgets/GoalsWidget.tsx",
        "start": 167,
        "end": 180,
        "startLoc": {
          "line": 167,
          "column": 11,
          "position": 1465
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 1543
        }
      },
      "secondFile": {
        "name": "src/components/widgets/TasksWidget.tsx",
        "start": 108,
        "end": 121,
        "startLoc": {
          "line": 108,
          "column": 11,
          "position": 978
        },
        "endLoc": {
          "line": 121,
          "column": 2,
          "position": 1056
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ":\n        return (\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <SkeletonText lines={1} {...commonProps} />\n              <EnhancedSkeleton shape=\"circle\" size=\"sm\" {...commonProps} />\n            </div>\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/widgets/EnhancedWidgetLoader.tsx",
        "start": 164,
        "end": 171,
        "startLoc": {
          "line": 164,
          "column": 10,
          "position": 1425
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1500
        }
      },
      "secondFile": {
        "name": "src/components/widgets/EnhancedWidgetLoader.tsx",
        "start": 109,
        "end": 116,
        "startLoc": {
          "line": 109,
          "column": 8,
          "position": 853
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 928
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "{\n            component: (\n              <div className=\"space-y-3\">\n                <EnhancedSkeleton height=\"20px\" width=\"40%\" {...baseProps} />\n                <EnhancedSkeleton height=\"12px\" width=\"60%\" {...baseProps} />\n                <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/widgets/EnhancedWidgetLoader.tsx",
        "start": 230,
        "end": 235,
        "startLoc": {
          "line": 230,
          "column": 11,
          "position": 2084
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 2150
        }
      },
      "secondFile": {
        "name": "src/components/widgets/EnhancedWidgetLoader.tsx",
        "start": 220,
        "end": 225,
        "startLoc": {
          "line": 220,
          "column": 11,
          "position": 1991
        },
        "endLoc": {
          "line": 225,
          "column": 3,
          "position": 2057
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "}\n              />\n            )}\n\n            {variable.type === \"number\" && (\n              <Input\n                id={variable.key}\n                type=\"number\"\n                value={values[variable.key] || \"\"}\n                onChange={(e) =>\n                  setValues((prev) => ({\n                    ...prev,\n                    [variable.key]: e.target.value,\n                  }))\n                }\n                placeholder={`Enter ${variable.label.toLowerCase()}`}\n                required={variable.required}\n              />\n            )}\n\n            {variable.type === \"select\" && variable.options && (\n              <Select\n                value={values",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/templates/VariableInput.tsx",
        "start": 113,
        "end": 135,
        "startLoc": {
          "line": 113,
          "column": 9,
          "position": 1000
        },
        "endLoc": {
          "line": 135,
          "column": 7,
          "position": 1157
        }
      },
      "secondFile": {
        "name": "src/components/templates/VariableInput.tsx",
        "start": 95,
        "end": 119,
        "startLoc": {
          "line": 95,
          "column": 4,
          "position": 849
        },
        "endLoc": {
          "line": 119,
          "column": 9,
          "position": 1030
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n\ntype Task = Database[\"public\"][\"Tables\"][\"tasks\"][\"Row\"] & {\n  assigned_to_profile?: { full_name: string | null; avatar_url: string | null };\n  created_by_profile?: { full_name: string | null; avatar_url: string | null };\n};\n\ninterface TaskCardProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tasks/TaskCard.tsx",
        "start": 36,
        "end": 43,
        "startLoc": {
          "line": 36,
          "column": 32,
          "position": 295
        },
        "endLoc": {
          "line": 43,
          "column": 14,
          "position": 386
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 22,
          "position": 360
        },
        "endLoc": {
          "line": 39,
          "column": 18,
          "position": 451
        }
      }
    },
    {
      "format": "tsx",
      "lines": 43,
      "fragment": ";\n}\n\nconst priorityConfig = {\n  low: {\n    color:\n      \"bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400\",\n    icon: \"🟢\",\n  },\n  medium: {\n    color:\n      \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400\",\n    icon: \"🟡\",\n  },\n  high: {\n    color:\n      \"bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400\",\n    icon: \"🟠\",\n  },\n  urgent: {\n    color: \"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\",\n    icon: \"🔴\",\n  },\n};\n\nconst statusConfig = {\n  todo: { color: \"bg-secondary text-secondary-foreground\", icon: \"📋\" },\n  in_progress: {\n    color: \"bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400\",\n    icon: \"⚡\",\n  },\n  blocked: {\n    color: \"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\",\n    icon: \"🚫\",\n  },\n  done: {\n    color:\n      \"bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400\",\n    icon: \"✅\",\n  },\n};\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tasks/TaskCard.tsx",
        "start": 44,
        "end": 86,
        "startLoc": {
          "line": 44,
          "column": 5,
          "position": 395
        },
        "endLoc": {
          "line": 86,
          "column": 7,
          "position": 616
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 40,
        "end": 82,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 462
        },
        "endLoc": {
          "line": 82,
          "column": 9,
          "position": 683
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ";\n\n  const handleDelete = () => {\n    if (confirm(\"Are you sure you want to delete this task?\")) {\n      deleteTask.mutate(task.id);\n    }\n  };\n\n  const handleToggleCompletion = () => {\n    toggleCompletion.mutate(task);\n  };\n\n  const priorityInfo =\n    priorityConfig[task.priority as keyof typeof priorityConfig];\n  const statusInfo = statusConfig[task.status as keyof typeof statusConfig];\n\n  return (\n    <DraggableTask",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tasks/TaskCard.tsx",
        "start": 90,
        "end": 107,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 702
        },
        "endLoc": {
          "line": 107,
          "column": 14,
          "position": 833
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 88,
        "end": 105,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 812
        },
        "endLoc": {
          "line": 105,
          "column": 4,
          "position": 943
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "<DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" size=\"sm\">\n                    <MoreHorizontal className=\"w-4 h-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  <TaskForm\n                    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tasks/TaskCard.tsx",
        "start": 140,
        "end": 148,
        "startLoc": {
          "line": 140,
          "column": 15,
          "position": 1088
        },
        "endLoc": {
          "line": 148,
          "column": 21,
          "position": 1152
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 222,
        "end": 230,
        "startLoc": {
          "line": 222,
          "column": 11,
          "position": 1848
        },
        "endLoc": {
          "line": 230,
          "column": 17,
          "position": 1912
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n\ntype Task = Database[\"public\"][\"Tables\"][\"tasks\"][\"Row\"] & {\n  assigned_to_profile?: { full_name: string | null; avatar_url: string | null };\n  created_by_profile?: { full_name: string | null; avatar_url: string | null };\n};\n\ninterface TaskCalendarViewProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tasks/TaskCalendarView.tsx",
        "start": 16,
        "end": 23,
        "startLoc": {
          "line": 16,
          "column": 32,
          "position": 143
        },
        "endLoc": {
          "line": 23,
          "column": 22,
          "position": 234
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 22,
          "position": 360
        },
        "endLoc": {
          "line": 39,
          "column": 18,
          "position": 451
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n\ntype Task = Database[\"public\"][\"Tables\"][\"tasks\"][\"Row\"] & {\n  assigned_to_profile?: { full_name: string | null; avatar_url: string | null };\n  created_by_profile?: { full_name: string | null; avatar_url: string | null };\n};\n\ninterface TaskBoardViewProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tasks/TaskBoardView.tsx",
        "start": 21,
        "end": 28,
        "startLoc": {
          "line": 21,
          "column": 22,
          "position": 217
        },
        "endLoc": {
          "line": 28,
          "column": 19,
          "position": 308
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 22,
          "position": 360
        },
        "endLoc": {
          "line": 39,
          "column": 18,
          "position": 451
        }
      }
    },
    {
      "format": "javascript",
      "lines": 38,
      "fragment": "}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Edit Tag</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"edit-tag-name\">Tag Name</Label>\n              <Input\n                id=\"edit-tag-name\"\n                placeholder=\"Enter tag name\"\n                value={formData.name}\n                onChange={(e) =>\n                  setFormData({ ...formData, name: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Color</Label>\n              <TagColorPicker\n                value={formData.color}\n                onChange={(color) => setFormData({ ...formData, color })}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"edit-tag-category\">Category (Optional)</Label>\n              <Input\n                id=\"edit-tag-category\"\n                placeholder=\"e.g., Work, Personal, Health\"\n                value={formData.category}\n                onChange={(e) =>\n                  setFormData({ ...formData, category: e.target.value })\n                }\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setEditDialogOpen",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tags/TagManager.tsx",
        "start": 208,
        "end": 245,
        "startLoc": {
          "line": 208,
          "column": 18,
          "position": 1702
        },
        "endLoc": {
          "line": 245,
          "column": 18,
          "position": 2006
        }
      },
      "secondFile": {
        "name": "src/components/tags/TagManager.tsx",
        "start": 157,
        "end": 196,
        "startLoc": {
          "line": 157,
          "column": 20,
          "position": 1313
        },
        "endLoc": {
          "line": 196,
          "column": 20,
          "position": 1619
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\n      <Dialog open={createDialogOpen} onOpenChange={setCreateDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Create New Tag</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"create-tag-name",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tags/TagManager.tsx",
        "start": 156,
        "end": 164,
        "startLoc": {
          "line": 156,
          "column": 20,
          "position": 1297
        },
        "endLoc": {
          "line": 164,
          "column": 16,
          "position": 1373
        }
      },
      "secondFile": {
        "name": "src/components/tags/TagSelector.tsx",
        "start": 170,
        "end": 178,
        "startLoc": {
          "line": 170,
          "column": 24,
          "position": 1365
        },
        "endLoc": {
          "line": 178,
          "column": 9,
          "position": 1441
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "\"\n                placeholder=\"Enter tag name\"\n                value={formData.name}\n                onChange={(e) =>\n                  setFormData({ ...formData, name: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Color</Label>\n              <TagColorPicker\n                value={formData.color}\n                onChange={(color) => setFormData({ ...formData, color })}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"edit-tag-category",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/tags/TagManager.tsx",
        "start": 217,
        "end": 233,
        "startLoc": {
          "line": 217,
          "column": 14,
          "position": 1778
        },
        "endLoc": {
          "line": 233,
          "column": 18,
          "position": 1907
        }
      },
      "secondFile": {
        "name": "src/components/tags/TagManager.tsx",
        "start": 166,
        "end": 182,
        "startLoc": {
          "line": 166,
          "column": 16,
          "position": 1391
        },
        "endLoc": {
          "line": 182,
          "column": 20,
          "position": 1520
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "}/10\n            </span>\n          )}\n        </div>\n        <Slider\n          value={stressLevel ? [stressLevel] : [5]}\n          onValueChange={([value]) => onStressChange(value)}\n          max={10}\n          min={1}\n          step={1}\n          className=\"w-full\"\n        />\n        <div className=\"flex justify-between text-xs text-muted-foreground\">\n          <span>Low</span>\n          <span>High</span>\n        </div>\n      </div>\n\n      {/* Satisfaction Level */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/reflections/MoodTracker.tsx",
        "start": 96,
        "end": 114,
        "startLoc": {
          "line": 96,
          "column": 12,
          "position": 899
        },
        "endLoc": {
          "line": 114,
          "column": 25,
          "position": 1023
        }
      },
      "secondFile": {
        "name": "src/components/reflections/MoodTracker.tsx",
        "start": 72,
        "end": 90,
        "startLoc": {
          "line": 72,
          "column": 12,
          "position": 715
        },
        "endLoc": {
          "line": 90,
          "column": 19,
          "position": 839
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "}/10\n            </span>\n          )}\n        </div>\n        <Slider\n          value={satisfactionLevel ? [satisfactionLevel] : [5]}\n          onValueChange={([value]) => onSatisfactionChange(value)}\n          max={10}\n          min={1}\n          step={1}\n          className=\"w-full\"\n        />\n        <div className=\"flex justify-between text-xs text-muted-foreground\">\n          <span>Low</span>\n          <span>High</span>\n        </div>\n      </div>\n    </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/reflections/MoodTracker.tsx",
        "start": 120,
        "end": 137,
        "startLoc": {
          "line": 120,
          "column": 18,
          "position": 1083
        },
        "endLoc": {
          "line": 137,
          "column": 3,
          "position": 1205
        }
      },
      "secondFile": {
        "name": "src/components/reflections/MoodTracker.tsx",
        "start": 72,
        "end": 90,
        "startLoc": {
          "line": 72,
          "column": 12,
          "position": 715
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 838
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 1,
        "end": 8,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 8,
          "column": 6,
          "position": 95
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskForm.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 7,
          "position": 96
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ".map((item, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center gap-2 p-2 bg-secondary rounded-md\"\n                >\n                  <span className=\"flex-1 text-sm\">{item}</span>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-6 w-6\"\n                    onClick={() => handleRemoveItem(wins, setWins, index)}\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Challenges */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 362,
        "end": 382,
        "startLoc": {
          "line": 362,
          "column": 5,
          "position": 3077
        },
        "endLoc": {
          "line": 382,
          "column": 17,
          "position": 3214
        }
      },
      "secondFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 324,
        "end": 346,
        "startLoc": {
          "line": 324,
          "column": 15,
          "position": 2789
        },
        "endLoc": {
          "line": 346,
          "column": 11,
          "position": 2927
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": ".map((item, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center gap-2 p-2 bg-secondary rounded-md\"\n                >\n                  <span className=\"flex-1 text-sm\">{item}</span>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-6 w-6\"\n                    onClick={() =>\n                      handleRemoveItem(challenges, setChallenges, index)\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Learnings */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 402,
        "end": 424,
        "startLoc": {
          "line": 402,
          "column": 11,
          "position": 3369
        },
        "endLoc": {
          "line": 424,
          "column": 16,
          "position": 3507
        }
      },
      "secondFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 324,
        "end": 346,
        "startLoc": {
          "line": 324,
          "column": 15,
          "position": 2789
        },
        "endLoc": {
          "line": 346,
          "column": 11,
          "position": 2927
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ".map((item, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center gap-2 p-2 bg-secondary rounded-md\"\n                >\n                  <span className=\"flex-1 text-sm\">{item}</span>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-6 w-6\"\n                    onClick={() =>\n                      handleRemoveItem(learnings, setLearnings, index)\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 444,
        "end": 465,
        "startLoc": {
          "line": 444,
          "column": 10,
          "position": 3664
        },
        "endLoc": {
          "line": 465,
          "column": 3,
          "position": 3800
        }
      },
      "secondFile": {
        "name": "src/components/reflections/DailyReflectionForm.tsx",
        "start": 324,
        "end": 346,
        "startLoc": {
          "line": 324,
          "column": 15,
          "position": 2789
        },
        "endLoc": {
          "line": 346,
          "column": 2,
          "position": 2926
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "({\n        title: \"\",\n        description: \"\",\n        status: PROJECT_DEFAULTS.status,\n        priority: PROJECT_DEFAULTS.priority,\n        visibility: PROJECT_DEFAULTS.visibility,\n        start_date: \"\",\n        target_date: \"\",\n        estimated_hours: \"\",\n        budget_amount: \"\",\n        color: PROJECT_DEFAULTS.color,\n        icon: PROJECT_DEFAULTS.icon,\n        tags: [],",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/projects/ProjectForm.tsx",
        "start": 140,
        "end": 152,
        "startLoc": {
          "line": 140,
          "column": 12,
          "position": 1026
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1122
        }
      },
      "secondFile": {
        "name": "src/components/projects/ProjectForm.tsx",
        "start": 103,
        "end": 115,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 665
        },
        "endLoc": {
          "line": 115,
          "column": 3,
          "position": 762
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "<div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                  <div className=\"flex items-center gap-1\">\n                    <Clock className=\"w-3 h-3\" />\n                    <span>{formatDate(note.created_at)}</span>\n                  </div>\n                  {note.content.includes(\"[[\") && (\n                    <div",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/notes/NotesGrid.tsx",
        "start": 205,
        "end": 211,
        "startLoc": {
          "line": 205,
          "column": 17,
          "position": 1738
        },
        "endLoc": {
          "line": 211,
          "column": 4,
          "position": 1809
        }
      },
      "secondFile": {
        "name": "src/components/widgets/NotesWidget.tsx",
        "start": 181,
        "end": 187,
        "startLoc": {
          "line": 181,
          "column": 17,
          "position": 1476
        },
        "endLoc": {
          "line": 187,
          "column": 5,
          "position": 1547
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ");\n  };\n\n  const getTypeColor = (type: NoteType) => {\n    switch (type) {\n      case \"permanent\":\n        return \"bg-success/10 text-success border-success/20\";\n      case \"literature\":\n        return \"bg-primary/10 text-primary border-primary/20\";\n      case \"fleeting\":\n        return \"bg-warning/10 text-warning border-warning/20\";\n      default:\n        return \"bg-muted text-muted-foreground\";\n    }\n  };\n\n  const getTypeDescription = (type: NoteType) => {\n    switch (type) {\n      case \"permanent\":\n        return \"Atomic, evergreen knowledge\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/notes/NoteEditor.tsx",
        "start": 168,
        "end": 187,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1468
        },
        "endLoc": {
          "line": 187,
          "column": 30,
          "position": 1593
        }
      },
      "secondFile": {
        "name": "src/components/notes/NotesGrid.tsx",
        "start": 52,
        "end": 71,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 511
        },
        "endLoc": {
          "line": 71,
          "column": 22,
          "position": 636
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ", () => {\n      render(<TouchOptimizedButton>Touch Test</TouchOptimizedButton>);\n      const button = screen.getByRole(\"button\");\n\n      fireEvent.touchStart(button, {\n        touches: [{ clientX: 50, clientY: 50 }],\n      });\n\n      fireEvent",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 82,
        "end": 90,
        "startLoc": {
          "line": 82,
          "column": 33,
          "position": 665
        },
        "endLoc": {
          "line": 90,
          "column": 10,
          "position": 744
        }
      },
      "secondFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 69,
        "end": 77,
        "startLoc": {
          "line": 69,
          "column": 35,
          "position": 551
        },
        "endLoc": {
          "line": 77,
          "column": 62,
          "position": 630
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "Test\n        </TouchOptimizedButton>,\n      );\n      const button = screen.getByRole(\"button\");\n\n      act(() => {\n        fireEvent.touchStart(button, {\n          touches: [{ clientX: 50, clientY: 50 }],\n        });\n      });\n\n      // Release before long press duration",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 188,
        "end": 199,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1522
        },
        "endLoc": {
          "line": 199,
          "column": 38,
          "position": 1604
        }
      },
      "secondFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 161,
        "end": 172,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 1320
        },
        "endLoc": {
          "line": 172,
          "column": 21,
          "position": 1402
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "</TouchOptimizedButton>,\n      );\n      const button = screen.getByRole(\"button\");\n\n      // Mock getBoundingClientRect\n      vi.spyOn(button, \"getBoundingClientRect\").mockReturnValue({\n        left: 0,\n        top: 0,\n        width: 100,\n        height: 40,\n        right: 100,\n        bottom: 40,\n        x: 0,\n        y: 0,\n        toJSON: vi.fn(),\n      });\n\n      fireEvent.touchStart(button, {\n        touches: [{ clientX: 50, clientY: 20 }],\n      });\n\n      await",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 305,
        "end": 326,
        "startLoc": {
          "line": 305,
          "column": 9,
          "position": 2386
        },
        "endLoc": {
          "line": 326,
          "column": 6,
          "position": 2541
        }
      },
      "secondFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 99,
        "end": 120,
        "startLoc": {
          "line": 99,
          "column": 5,
          "position": 812
        },
        "endLoc": {
          "line": 120,
          "column": 32,
          "position": 967
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "Test\n        </TouchOptimizedButton>,\n      );\n      const button = screen.getByRole(\"button\");\n\n      act(() => {\n        fireEvent.touchStart(button, {\n          touches: [{ clientX: 50, clientY: 50 }],\n        });\n      });\n\n      // Unmount before long press completes",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 434,
        "end": 445,
        "startLoc": {
          "line": 434,
          "column": 2,
          "position": 3479
        },
        "endLoc": {
          "line": 445,
          "column": 39,
          "position": 3561
        }
      },
      "secondFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 161,
        "end": 172,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 1320
        },
        "endLoc": {
          "line": 172,
          "column": 21,
          "position": 1402
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "</TouchOptimizedButton>,\n      );\n      const button = screen.getByRole(\"button\");\n\n      // Mock getBoundingClientRect\n      vi.spyOn(button, \"getBoundingClientRect\").mockReturnValue({\n        left: 0,\n        top: 0,\n        width: 100,\n        height: 40,\n        right: 100,\n        bottom: 40,\n        x: 0,\n        y: 0,\n        toJSON: vi.fn(),\n      });\n\n      fireEvent.touchStart(button, {\n        touches: [{ clientX: 50, clientY: 20 }],\n      });\n\n      // Should create ripple",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 477,
        "end": 498,
        "startLoc": {
          "line": 477,
          "column": 8,
          "position": 3816
        },
        "endLoc": {
          "line": 498,
          "column": 24,
          "position": 3971
        }
      },
      "secondFile": {
        "name": "src/components/mobile/TouchOptimizedButton.test.tsx",
        "start": 99,
        "end": 120,
        "startLoc": {
          "line": 99,
          "column": 5,
          "position": 812
        },
        "endLoc": {
          "line": 120,
          "column": 32,
          "position": 967
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": ".id}\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ delay: index * 0.1 }}\n            >\n              <Card className=\"glass-card elevated-card group cursor-pointer h-full\">\n                <CardContent\n                  className=\"p-6 space-y-4\"\n                  onClick={(",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/landing/SuccessStoriesGrid.tsx",
        "start": 113,
        "end": 122,
        "startLoc": {
          "line": 113,
          "column": 6,
          "position": 859
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 949
        }
      },
      "secondFile": {
        "name": "src/components/landing/TrustBadges.tsx",
        "start": 93,
        "end": 103,
        "startLoc": {
          "line": 93,
          "column": 10,
          "position": 644
        },
        "endLoc": {
          "line": 103,
          "column": 41,
          "position": 750
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": ".id}\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: index * 0.1 }}\n          >\n            <Card className=\"glass-card elevated-card group hover:scale-105 transition-transform duration-300\">\n              <CardContent className=\"p-6 text-center space-y-4\">\n                <div\n                  className={`w-14 h-14 mx-auto rounded-2xl bg-gradient-to-br ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/landing/CommunityStatsCounter.tsx",
        "start": 149,
        "end": 158,
        "startLoc": {
          "line": 149,
          "column": 5,
          "position": 1159
        },
        "endLoc": {
          "line": 158,
          "column": 50,
          "position": 1254
        }
      },
      "secondFile": {
        "name": "src/components/landing/TrustBadges.tsx",
        "start": 93,
        "end": 103,
        "startLoc": {
          "line": 93,
          "column": 10,
          "position": 644
        },
        "endLoc": {
          "line": 103,
          "column": 41,
          "position": 750
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "*</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"build",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 157,
        "end": 168,
        "startLoc": {
          "line": 157,
          "column": 6,
          "position": 1202
        },
        "endLoc": {
          "line": 168,
          "column": 6,
          "position": 1259
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 10,
          "position": 977
        },
        "endLoc": {
          "line": 137,
          "column": 7,
          "position": 1034
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "*</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"daily",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 185,
        "end": 196,
        "startLoc": {
          "line": 185,
          "column": 11,
          "position": 1373
        },
        "endLoc": {
          "line": 196,
          "column": 6,
          "position": 1430
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 10,
          "position": 977
        },
        "endLoc": {
          "line": 137,
          "column": 7,
          "position": 1034
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "*</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"easy",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 212,
        "end": 223,
        "startLoc": {
          "line": 212,
          "column": 12,
          "position": 1542
        },
        "endLoc": {
          "line": 223,
          "column": 5,
          "position": 1599
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 10,
          "position": 977
        },
        "endLoc": {
          "line": 137,
          "column": 7,
          "position": 1034
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"morning",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 241,
        "end": 252,
        "startLoc": {
          "line": 241,
          "column": 5,
          "position": 1729
        },
        "endLoc": {
          "line": 252,
          "column": 8,
          "position": 1785
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 978
        },
        "endLoc": {
          "line": 137,
          "column": 7,
          "position": 1034
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { useUpdateHabit",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 3,
        "end": 22,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 34
        },
        "endLoc": {
          "line": 22,
          "column": 15,
          "position": 148
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskForm.tsx",
        "start": 4,
        "end": 24,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 47
        },
        "endLoc": {
          "line": 24,
          "column": 7,
          "position": 162
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "} />\n      </TabsContent>\n\n      <TabsContent value=\"custom\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            {/* Basic Info */}\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Title *</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Morning meditation",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 21,
          "position": 1171
        },
        "endLoc": {
          "line": 150,
          "column": 25,
          "position": 1283
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskForm.tsx",
        "start": 134,
        "end": 152,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 1260
        },
        "endLoc": {
          "line": 152,
          "column": 20,
          "position": 1390
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"What is this habit about?",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 150,
        "end": 165,
        "startLoc": {
          "line": 150,
          "column": 25,
          "position": 1284
        },
        "endLoc": {
          "line": 165,
          "column": 26,
          "position": 1365
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskForm.tsx",
        "start": 152,
        "end": 167,
        "startLoc": {
          "line": 152,
          "column": 20,
          "position": 1391
        },
        "endLoc": {
          "line": 167,
          "column": 26,
          "position": 1472
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "*</FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"build",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 214,
        "end": 225,
        "startLoc": {
          "line": 214,
          "column": 6,
          "position": 1674
        },
        "endLoc": {
          "line": 225,
          "column": 6,
          "position": 1731
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 10,
          "position": 1449
        },
        "endLoc": {
          "line": 192,
          "column": 7,
          "position": 1506
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "*</FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"daily",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 243,
        "end": 254,
        "startLoc": {
          "line": 243,
          "column": 11,
          "position": 1850
        },
        "endLoc": {
          "line": 254,
          "column": 6,
          "position": 1907
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 10,
          "position": 1449
        },
        "endLoc": {
          "line": 192,
          "column": 7,
          "position": 1506
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "*</FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"easy",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 270,
        "end": 281,
        "startLoc": {
          "line": 270,
          "column": 12,
          "position": 2019
        },
        "endLoc": {
          "line": 281,
          "column": 5,
          "position": 2076
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 10,
          "position": 1449
        },
        "endLoc": {
          "line": 192,
          "column": 7,
          "position": 1506
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "</FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"morning",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 300,
        "end": 311,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 2211
        },
        "endLoc": {
          "line": 311,
          "column": 8,
          "position": 2267
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1450
        },
        "endLoc": {
          "line": 192,
          "column": 7,
          "position": 1506
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "import { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Tabs",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 2,
        "end": 23,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 13
        },
        "endLoc": {
          "line": 23,
          "column": 5,
          "position": 161
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 7,
          "position": 162
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ";\n\nconst habitSchema = z.object({\n  title: z.string().min(1, \"Title is required\").max(100),\n  description: z.string().max(500).optional(),\n  category: z.enum([\n    \"health\",\n    \"productivity\",\n    \"learning\",\n    \"mindfulness\",\n    \"social\",\n    \"financial\",\n    \"creative\",\n    \"other\",\n  ]),\n  type: z.enum([\"build\", \"break\", \"maintain\"]),\n  frequency: z.enum([\"daily\", \"weekly\", \"monthly\", \"custom\"]),\n  difficulty: z.enum([\"easy\", \"medium\", \"hard\", \"extreme\"]),\n  time_of_day: z\n    .enum([\"morning\", \"afternoon\", \"evening\", \"anytime\"])\n    .optional(),\n  duration_minutes: z.coerce.number().min(1).optional(),\n  target_streak: z.coerce.number().min(1).optional(),\n  reminder_enabled",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCreateForm.tsx",
        "start": 26,
        "end": 49,
        "startLoc": {
          "line": 26,
          "column": 19,
          "position": 216
        },
        "endLoc": {
          "line": 49,
          "column": 17,
          "position": 464
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitEditForm.tsx",
        "start": 23,
        "end": 46,
        "startLoc": {
          "line": 23,
          "column": 17,
          "position": 171
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 418
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</div>\n        </div>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n            <Button variant=\"ghost\" size=\"icon\">\n              <MoreVertical className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCard.tsx",
        "start": 82,
        "end": 91,
        "startLoc": {
          "line": 82,
          "column": 11,
          "position": 739
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 826
        }
      },
      "secondFile": {
        "name": "src/components/reflections/ReflectionCard.tsx",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 11,
          "position": 710
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 798
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "</p>\n            </div>\n          </div>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n              <Button variant=\"ghost\" size=\"icon\">\n                <MoreVertical className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem onClick={handleDuplicate}>\n                <Copy className=\"h-4 w-4 mr-2\" />\n                Duplicate\n              </DropdownMenuItem>\n              <DropdownMenuItem onClick={handleArchive}>\n                <Archive className=\"h-4 w-4 mr-2\" />\n                Archive\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCard.tsx",
        "start": 178,
        "end": 197,
        "startLoc": {
          "line": 178,
          "column": 7,
          "position": 1588
        },
        "endLoc": {
          "line": 197,
          "column": 17,
          "position": 1744
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitCard.tsx",
        "start": 81,
        "end": 100,
        "startLoc": {
          "line": 81,
          "column": 13,
          "position": 734
        },
        "endLoc": {
          "line": 100,
          "column": 15,
          "position": 890
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "\">\n            <Button variant=\"outline\" size=\"icon\" onClick={previousMonth}>\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"outline\" size=\"icon\" onClick={nextMonth}>\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/HabitCalendar.tsx",
        "start": 70,
        "end": 79,
        "startLoc": {
          "line": 70,
          "column": 11,
          "position": 594
        },
        "endLoc": {
          "line": 79,
          "column": 3,
          "position": 688
        }
      },
      "secondFile": {
        "name": "src/components/reflections/ReflectionCalendar.tsx",
        "start": 70,
        "end": 80,
        "startLoc": {
          "line": 70,
          "column": 11,
          "position": 590
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 685
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "</h4>\n                <ResponsiveContainer width=\"100%\" height={250}>\n                  <LineChart data={quarterData}>\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"rate\"\n                      stroke=\"hsl(var(--primary))\"\n                      strokeWidth={2}\n                      dot={false}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"pattern",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/habits/CompletionTrends.tsx",
        "start": 139,
        "end": 158,
        "startLoc": {
          "line": 139,
          "column": 9,
          "position": 1256
        },
        "endLoc": {
          "line": 158,
          "column": 8,
          "position": 1381
        }
      },
      "secondFile": {
        "name": "src/components/habits/CompletionTrends.tsx",
        "start": 87,
        "end": 106,
        "startLoc": {
          "line": 87,
          "column": 9,
          "position": 892
        },
        "endLoc": {
          "line": 106,
          "column": 6,
          "position": 1023
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "{ useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Slider",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/ProgressEditor.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 2
        },
        "endLoc": {
          "line": 14,
          "column": 7,
          "position": 104
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/CreateAPIKeyDialog.tsx",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 5
        },
        "endLoc": {
          "line": 15,
          "column": 7,
          "position": 111
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "{ useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { GoalMilestone",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/MilestoneEditor.tsx",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 2
        },
        "endLoc": {
          "line": 21,
          "column": 14,
          "position": 138
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/EditAPIKeyDialog.tsx",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 5
        },
        "endLoc": {
          "line": 22,
          "column": 7,
          "position": 142
        }
      }
    },
    {
      "format": "javascript",
      "lines": 65,
      "fragment": "={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[500px]\">\n        <form onSubmit={handleSubmit}>\n          <DialogHeader>\n            <DialogTitle>Create Milestone</DialogTitle>\n            <DialogDescription>\n              Add a new milestone to track progress toward your goal\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"title\">Title*</Label>\n              <Input\n                id=\"title\"\n                value={formData.title || \"\"}\n                onChange={(e) =>\n                  setFormData({ ...formData, title: e.target.value })\n                }\n                placeholder=\"Milestone title\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"description\">Description</Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description || \"\"}\n                onChange={(e) =>\n                  setFormData({ ...formData, description: e.target.value })\n                }\n                placeholder=\"Milestone description (optional)\"\n                rows={3}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"target-date\">Target Date</Label>\n                <Input\n                  id=\"target-date\"\n                  type=\"date\"\n                  value={\n                    formData.target_date?.toISOString().split(\"T\")[0] || \"\"\n                  }\n                  onChange={(e) =>\n                    setFormData({\n                      ...formData,\n                      target_date: e.target.value\n                        ? new Date(e.target.value)\n                        : undefined,\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"priority\">Priority</Label>\n                <Select\n                  value={formData.priority?.toString()}\n                  onValueChange={(value) =>\n                    setFormData({\n                      ...formData,\n                      priority: parseInt(value) as 1",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/MilestoneCreator.tsx",
        "start": 56,
        "end": 120,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 404
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 892
        }
      },
      "secondFile": {
        "name": "src/components/goals/MilestoneEditor.tsx",
        "start": 62,
        "end": 126,
        "startLoc": {
          "line": 62,
          "column": 5,
          "position": 468
        },
        "endLoc": {
          "line": 126,
          "column": 4,
          "position": 946
        }
      }
    },
    {
      "format": "javascript",
      "lines": 49,
      "fragment": ",\n                    })\n                  }\n                >\n                  <SelectTrigger id=\"priority\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"1\">Lowest</SelectItem>\n                    <SelectItem value=\"2\">Low</SelectItem>\n                    <SelectItem value=\"3\">Medium</SelectItem>\n                    <SelectItem value=\"4\">High</SelectItem>\n                    <SelectItem value=\"5\">Critical</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"estimated-hours\">Estimated Hours</Label>\n              <Input\n                id=\"estimated-hours\"\n                type=\"number\"\n                min=\"0\"\n                value={formData.estimated_hours || \"\"}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    estimated_hours: e.target.value\n                      ? parseInt(e.target.value)\n                      : undefined,\n                  })\n                }\n                placeholder=\"Estimated hours to complete\"\n              />\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={createMilestone",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/MilestoneCreator.tsx",
        "start": 120,
        "end": 168,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 909
        },
        "endLoc": {
          "line": 168,
          "column": 16,
          "position": 1222
        }
      },
      "secondFile": {
        "name": "src/components/goals/MilestoneEditor.tsx",
        "start": 126,
        "end": 174,
        "startLoc": {
          "line": 126,
          "column": 4,
          "position": 947
        },
        "endLoc": {
          "line": 174,
          "column": 16,
          "position": 1260
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  useCreateMilestone",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/MilestoneCreator.tsx",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 136
        }
      },
      "secondFile": {
        "name": "src/components/goals/ProgressEditor.tsx",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 7,
          "position": 142
        }
      }
    },
    {
      "format": "tsx",
      "lines": 108,
      "fragment": "</DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"title\">Title*</Label>\n              <Input\n                id=\"title\"\n                value={formData.title || \"\"}\n                onChange={(e) =>\n                  setFormData({ ...formData, title: e.target.value })\n                }\n                placeholder=\"Milestone title\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"description\">Description</Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description || \"\"}\n                onChange={(e) =>\n                  setFormData({ ...formData, description: e.target.value })\n                }\n                placeholder=\"Milestone description (optional)\"\n                rows={3}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"target-date\">Target Date</Label>\n                <Input\n                  id=\"target-date\"\n                  type=\"date\"\n                  value={\n                    formData.target_date?.toISOString().split(\"T\")[0] || \"\"\n                  }\n                  onChange={(e) =>\n                    setFormData({\n                      ...formData,\n                      target_date: e.target.value\n                        ? new Date(e.target.value)\n                        : undefined,\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"priority\">Priority</Label>\n                <Select\n                  value={formData.priority?.toString()}\n                  onValueChange={(value) =>\n                    setFormData({\n                      ...formData,\n                      priority: parseInt(value) as 1 | 2 | 3 | 4 | 5,\n                    })\n                  }\n                >\n                  <SelectTrigger id=\"priority\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"1\">Lowest</SelectItem>\n                    <SelectItem value=\"2\">Low</SelectItem>\n                    <SelectItem value=\"3\">Medium</SelectItem>\n                    <SelectItem value=\"4\">High</SelectItem>\n                    <SelectItem value=\"5\">Critical</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"estimated-hours\">Estimated Hours</Label>\n              <Input\n                id=\"estimated-hours\"\n                type=\"number\"\n                min=\"0\"\n                value={formData.estimated_hours || \"\"}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    estimated_hours: e.target.value\n                      ? parseInt(e.target.value)\n                      : undefined,\n                  })\n                }\n                placeholder=\"Estimated hours to complete\"\n              />\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={createMilestone.isPending || !formData.title?.trim()}\n            >\n              {createMilestone",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/MilestoneCreator.tsx",
        "start": 63,
        "end": 170,
        "startLoc": {
          "line": 63,
          "column": 13,
          "position": 481
        },
        "endLoc": {
          "line": 170,
          "column": 16,
          "position": 1242
        }
      },
      "secondFile": {
        "name": "src/components/goals/MilestoneEditor.tsx",
        "start": 69,
        "end": 176,
        "startLoc": {
          "line": 69,
          "column": 13,
          "position": 535
        },
        "endLoc": {
          "line": 176,
          "column": 16,
          "position": 1280
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { GoalMilestone",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/MilestoneCompletion.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 14,
          "position": 104
        }
      },
      "secondFile": {
        "name": "src/components/goals/ProgressEditor.tsx",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 15,
          "column": 7,
          "position": 111
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": ";\n\n  const getReflectionTypeLabel = (type: GoalReflectionType) => {\n    const labels: Record<GoalReflectionType, string> = {\n      progress_review: \"Progress Review\",\n      milestone_achieved: \"Milestone Achieved\",\n      challenge_faced: \"Challenge Faced\",\n      strategy_adjustment: \"Strategy Adjustment\",\n      completion_celebration: \"Completion Celebration\",\n    };\n    return labels[type];\n  };\n\n  const getReflectionTypeColor = (type: GoalReflectionType) => {\n    const colors: Record<GoalReflectionType, string> = {\n      progress_review: \"bg-blue-500/10 text-blue-700 dark:text-blue-400\",\n      milestone_achieved: \"bg-green-500/10 text-green-700 dark:text-green-400\",\n      challenge_faced: \"bg-orange-500/10 text-orange-700 dark:text-orange-400\",\n      strategy_adjustment:\n        \"bg-purple-500/10 text-purple-700 dark:text-purple-400\",\n      completion_celebration: \"bg-pink-500/10 text-pink-700 dark:text-pink-400\",\n    };\n    return colors[type];\n  };\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/GoalReflectionsTab.tsx",
        "start": 47,
        "end": 72,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 414
        },
        "endLoc": {
          "line": 72,
          "column": 6,
          "position": 597
        }
      },
      "secondFile": {
        "name": "src/components/reflections/GoalReflectionLinker.tsx",
        "start": 117,
        "end": 142,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 1014
        },
        "endLoc": {
          "line": 142,
          "column": 3,
          "position": 1197
        }
      }
    },
    {
      "format": "tsx",
      "lines": 36,
      "fragment": ".category}</Badge>\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label>\n                    Contribution Weight: {contributionWeight[0].toFixed(1)}\n                  </Label>\n                  <p className=\"text-sm text-muted-foreground mb-2\">\n                    How much does this habit contribute to the goal?\n                  </p>\n                  <Slider\n                    value={contributionWeight}\n                    onValueChange={setContributionWeight}\n                    min={0.1}\n                    max={2.0}\n                    step={0.1}\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                    <span>Minor (0.1)</span>\n                    <span>Normal (1.0)</span>\n                    <span>Major (2.0)</span>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button\n                    onClick={handleCreateLink}\n                    disabled={!selectedHabitId || createLink.isPending}\n                    className=\"flex-1\"\n                  >\n                    Link Habit",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/GoalHabitManager.tsx",
        "start": 123,
        "end": 158,
        "startLoc": {
          "line": 123,
          "column": 6,
          "position": 1094
        },
        "endLoc": {
          "line": 158,
          "column": 6,
          "position": 1341
        }
      },
      "secondFile": {
        "name": "src/components/habits/HabitGoalLinker.tsx",
        "start": 126,
        "end": 161,
        "startLoc": {
          "line": 126,
          "column": 5,
          "position": 1117
        },
        "endLoc": {
          "line": 161,
          "column": 5,
          "position": 1364
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": " (Optional)</FormLabel>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <FormControl>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          \"w-full pl-3 text-left font-normal focus-brand transition-all duration-200 hover:border-primary/50\",\n                          !field.value && \"text-muted-foreground\",\n                        )}\n                        aria-label=\"Select target date",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/GoalForm.tsx",
        "start": 161,
        "end": 171,
        "startLoc": {
          "line": 161,
          "column": 8,
          "position": 1091
        },
        "endLoc": {
          "line": 171,
          "column": 19,
          "position": 1146
        }
      },
      "secondFile": {
        "name": "src/components/goals/GoalForm.tsx",
        "start": 120,
        "end": 130,
        "startLoc": {
          "line": 120,
          "column": 6,
          "position": 852
        },
        "endLoc": {
          "line": 130,
          "column": 18,
          "position": 907
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": "?</span>\n                        )}\n                        <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                      </Button>\n                    </FormControl>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                    <Calendar\n                      mode=\"single\"\n                      selected={field.value}\n                      onSelect={field.onChange}\n                      initialFocus\n                      className=\"pointer-events-auto\"\n                    />\n                  </PopoverContent>\n                </Popover>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <Button\n          type=\"submit\"\n          className=\"w-full apple-button focus-brand\"\n          disabled={isSubmitting",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/goals/GoalForm.tsx",
        "start": 176,
        "end": 201,
        "startLoc": {
          "line": 176,
          "column": 20,
          "position": 1181
        },
        "endLoc": {
          "line": 201,
          "column": 13,
          "position": 1310
        }
      },
      "secondFile": {
        "name": "src/components/goals/GoalForm.tsx",
        "start": 135,
        "end": 157,
        "startLoc": {
          "line": 135,
          "column": 20,
          "position": 940
        },
        "endLoc": {
          "line": 157,
          "column": 5,
          "position": 1052
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n\ntype Task = Database[\"public\"][\"Tables\"][\"tasks\"][\"Row\"] & {\n  assigned_to_profile?: { full_name: string | null; avatar_url: string | null };\n  created_by_profile?: { full_name: string | null; avatar_url: string | null };\n};\n\ninterface DraggableTaskProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dnd/DraggableTask.tsx",
        "start": 5,
        "end": 12,
        "startLoc": {
          "line": 5,
          "column": 26,
          "position": 63
        },
        "endLoc": {
          "line": 12,
          "column": 19,
          "position": 154
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 22,
          "position": 360
        },
        "endLoc": {
          "line": 39,
          "column": 18,
          "position": 451
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ";\nimport { Database } from \"@/integrations/supabase/types\";\n\ntype Task = Database[\"public\"][\"Tables\"][\"tasks\"][\"Row\"] & {\n  assigned_to_profile?: { full_name: string | null; avatar_url: string | null };\n  created_by_profile?: { full_name: string | null; avatar_url: string | null };\n};\n\ninterface DragAndDropContextType",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dnd/DragAndDropProvider.tsx",
        "start": 15,
        "end": 23,
        "startLoc": {
          "line": 15,
          "column": 20,
          "position": 88
        },
        "endLoc": {
          "line": 23,
          "column": 23,
          "position": 192
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskCalendarView.tsx",
        "start": 15,
        "end": 39,
        "startLoc": {
          "line": 15,
          "column": 13,
          "position": 130
        },
        "endLoc": {
          "line": 39,
          "column": 18,
          "position": 451
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "\" />\n            </div>\n            <Progress\n              value={currentMetrics.task_completion_rate * 100}\n              className=\"h-2 mt-2\"\n            />\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">\n                  Response",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/automation/WorkflowOptimizer.tsx",
        "start": 346,
        "end": 360,
        "startLoc": {
          "line": 346,
          "column": 22,
          "position": 2357
        },
        "endLoc": {
          "line": 360,
          "column": 9,
          "position": 2444
        }
      },
      "secondFile": {
        "name": "src/components/automation/WorkflowOptimizer.tsx",
        "start": 326,
        "end": 340,
        "startLoc": {
          "line": 326,
          "column": 23,
          "position": 2215
        },
        "endLoc": {
          "line": 340,
          "column": 11,
          "position": 2302
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ").map(\n                            ([key, value]) => (\n                              <li key={key}>\n                                {key.replace(/_/g, \" \")}:{\" \"}\n                                {typeof value === \"number\"\n                                  ? Math.round(value * 100) + \"%\"\n                                  : value}\n                              </li>\n                            ),\n                          )}\n                        </ul>\n                      </div>\n                    </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/automation/WorkflowOptimizer.tsx",
        "start": 653,
        "end": 665,
        "startLoc": {
          "line": 653,
          "column": 14,
          "position": 4616
        },
        "endLoc": {
          "line": 665,
          "column": 3,
          "position": 4721
        }
      },
      "secondFile": {
        "name": "src/components/automation/WorkflowOptimizer.tsx",
        "start": 638,
        "end": 650,
        "startLoc": {
          "line": 638,
          "column": 15,
          "position": 4472
        },
        "endLoc": {
          "line": 650,
          "column": 2,
          "position": 4577
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "priority</SelectItem>\n                  <SelectItem value=\"low\">Low</SelectItem>\n                  <SelectItem value=\"medium\">Medium</SelectItem>\n                  <SelectItem value=\"high\">High</SelectItem>\n                  <SelectItem value=\"urgent\">Urgent</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"flex justify-end gap-2",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/automation/RuleEditor.tsx",
        "start": 281,
        "end": 291,
        "startLoc": {
          "line": 281,
          "column": 2,
          "position": 2247
        },
        "endLoc": {
          "line": 291,
          "column": 23,
          "position": 2340
        }
      },
      "secondFile": {
        "name": "src/components/automation/RuleEditor.tsx",
        "start": 220,
        "end": 230,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 1713
        },
        "endLoc": {
          "line": 230,
          "column": 10,
          "position": 1806
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "import { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Brain",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/automation/AIAutomationDashboard.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 6,
          "position": 110
        }
      },
      "secondFile": {
        "name": "src/components/automation/WorkflowOptimizer.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 11,
          "position": 110
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": " {...commonProps}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              {metricIds.map(\n                (metricId, index) =>\n                  visibleMetrics[metricId] && (\n                    <Bar",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/RealTimeAnalytics.tsx",
        "start": 329,
        "end": 338,
        "startLoc": {
          "line": 329,
          "column": 9,
          "position": 2726
        },
        "endLoc": {
          "line": 338,
          "column": 4,
          "position": 2804
        }
      },
      "secondFile": {
        "name": "src/components/analytics/RealTimeAnalytics.tsx",
        "start": 302,
        "end": 311,
        "startLoc": {
          "line": 302,
          "column": 10,
          "position": 2532
        },
        "endLoc": {
          "line": 311,
          "column": 5,
          "position": 2610
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": " {...commonProps}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              {metricIds.map(\n                (metricId, index) =>\n                  visibleMetrics[metricId] && (\n                    <Line",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/RealTimeAnalytics.tsx",
        "start": 352,
        "end": 361,
        "startLoc": {
          "line": 352,
          "column": 10,
          "position": 2888
        },
        "endLoc": {
          "line": 361,
          "column": 5,
          "position": 2966
        }
      },
      "secondFile": {
        "name": "src/components/analytics/RealTimeAnalytics.tsx",
        "start": 302,
        "end": 311,
        "startLoc": {
          "line": 302,
          "column": 10,
          "position": 2532
        },
        "endLoc": {
          "line": 311,
          "column": 5,
          "position": 2610
        }
      }
    },
    {
      "format": "javascript",
      "lines": 28,
      "fragment": "} />\n                </BarChart>\n              </ResponsiveContainer>\n            </TabsContent>\n\n            <TabsContent value=\"goals\" className=\"mt-4\">\n              <ResponsiveContainer width=\"100%\" height={getChartHeight()}>\n                <LineChart data={weeklyData}>\n                  <XAxis\n                    dataKey=\"day\"\n                    axisLine={false}\n                    tickLine={false}\n                    tick={{ fontSize: 12 }}\n                  />\n                  <YAxis hide />\n                  <Tooltip\n                    contentStyle={{\n                      backgroundColor: \"hsl(var(--card))\",\n                      border: \"1px solid hsl(var(--border))\",\n                      borderRadius: \"8px\",\n                      fontSize: \"12px\",\n                    }}\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"goals\"\n                    stroke=\"#10b981\"\n                    strokeWidth={3",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/MobileAnalyticsDashboard.tsx",
        "start": 230,
        "end": 257,
        "startLoc": {
          "line": 230,
          "column": 2,
          "position": 1853
        },
        "endLoc": {
          "line": 257,
          "column": 2,
          "position": 2023
        }
      },
      "secondFile": {
        "name": "src/components/analytics/MobileAnalyticsDashboard.tsx",
        "start": 170,
        "end": 230,
        "startLoc": {
          "line": 170,
          "column": 2,
          "position": 1371
        },
        "endLoc": {
          "line": 230,
          "column": 2,
          "position": 1841
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": "}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </TabsContent>\n\n            <TabsContent value=\"time\" className=\"mt-4\">\n              <ResponsiveContainer width=\"100%\" height={getChartHeight()}>\n                <AreaChart data={weeklyData}>\n                  <XAxis\n                    dataKey=\"day\"\n                    axisLine={false}\n                    tickLine={false}\n                    tick={{ fontSize: 12 }}\n                  />\n                  <YAxis hide />\n                  <Tooltip\n                    contentStyle={{\n                      backgroundColor: \"hsl(var(--card))\",\n                      border: \"1px solid hsl(var(--border))\",\n                      borderRadius: \"8px\",\n                      fontSize: \"12px\",\n                    }}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"time\"\n                    stroke=\"#8b5cf6\"\n                    fill=\"#8b5cf6\"\n                    fillOpacity={0.3",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/MobileAnalyticsDashboard.tsx",
        "start": 258,
        "end": 287,
        "startLoc": {
          "line": 258,
          "column": 2,
          "position": 2046
        },
        "endLoc": {
          "line": 287,
          "column": 4,
          "position": 2222
        }
      },
      "secondFile": {
        "name": "src/components/analytics/MobileAnalyticsDashboard.tsx",
        "start": 170,
        "end": 230,
        "startLoc": {
          "line": 170,
          "column": 2,
          "position": 1371
        },
        "endLoc": {
          "line": 230,
          "column": 2,
          "position": 1841
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "} from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/ExecutiveDashboard.tsx",
        "start": 1,
        "end": 25,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 25,
          "column": 9,
          "position": 157
        }
      },
      "secondFile": {
        "name": "src/components/analytics/PredictiveAnalytics.tsx",
        "start": 1,
        "end": 25,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 9
        },
        "endLoc": {
          "line": 25,
          "column": 13,
          "position": 160
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": ";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  RadialBarChart",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/ExecutiveDashboard.tsx",
        "start": 11,
        "end": 36,
        "startLoc": {
          "line": 11,
          "column": 27,
          "position": 81
        },
        "endLoc": {
          "line": 36,
          "column": 15,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src/components/analytics/RealTimeAnalytics.tsx",
        "start": 10,
        "end": 35,
        "startLoc": {
          "line": 10,
          "column": 24,
          "position": 71
        },
        "endLoc": {
          "line": 35,
          "column": 14,
          "position": 191
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "} from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/DashboardBuilder.tsx",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 9
        },
        "endLoc": {
          "line": 15,
          "column": 7,
          "position": 117
        }
      },
      "secondFile": {
        "name": "src/components/automation/NaturalLanguageRuleBuilder.tsx",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 15,
          "column": 7,
          "position": 114
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n  DropdownMenu",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/analytics/AnalyticsDashboard.tsx",
        "start": 11,
        "end": 29,
        "startLoc": {
          "line": 11,
          "column": 24,
          "position": 81
        },
        "endLoc": {
          "line": 29,
          "column": 13,
          "position": 176
        }
      },
      "secondFile": {
        "name": "src/components/analytics/DashboardBuilder.tsx",
        "start": 13,
        "end": 31,
        "startLoc": {
          "line": 13,
          "column": 27,
          "position": 110
        },
        "endLoc": {
          "line": 31,
          "column": 16,
          "position": 205
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "} from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Collapsible",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai-insights/BehavioralInsightsWidget.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 9
        },
        "endLoc": {
          "line": 9,
          "column": 12,
          "position": 117
        }
      },
      "secondFile": {
        "name": "src/components/ai-insights/PredictiveInsightsWidget.tsx",
        "start": 1,
        "end": 8,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 12
        },
        "endLoc": {
          "line": 8,
          "column": 5,
          "position": 119
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => hideInsight(insight.id)}\n                className=\"h-6 w-6 p-0\"\n              >\n                <EyeOff className=\"h-3 w-3\" />\n              </Button>\n              {insight",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai-insights/BehavioralInsightsWidget.tsx",
        "start": 175,
        "end": 188,
        "startLoc": {
          "line": 175,
          "column": 19,
          "position": 1460
        },
        "endLoc": {
          "line": 188,
          "column": 8,
          "position": 1549
        }
      },
      "secondFile": {
        "name": "src/components/ai-insights/PredictiveInsightsWidget.tsx",
        "start": 205,
        "end": 220,
        "startLoc": {
          "line": 205,
          "column": 19,
          "position": 1854
        },
        "endLoc": {
          "line": 220,
          "column": 2,
          "position": 1945
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "&& (\n                <Collapsible>\n                  <CollapsibleTrigger asChild>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => toggleInsightExpansion(insight.id)}\n                      className=\"h-6 w-6 p-0\"\n                    >\n                      <ChevronDown\n                        className={cn(\n                          \"h-3 w-3 transition-transform\",\n                          isExpanded && \"rotate-180\"\n                        )}\n                      />\n                    </Button>\n                  </CollapsibleTrigger>\n                </Collapsible>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai-insights/BehavioralInsightsWidget.tsx",
        "start": 188,
        "end": 211,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1559
        },
        "endLoc": {
          "line": 211,
          "column": 2,
          "position": 1673
        }
      },
      "secondFile": {
        "name": "src/components/ai-insights/PredictiveInsightsWidget.tsx",
        "start": 220,
        "end": 243,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 1969
        },
        "endLoc": {
          "line": 243,
          "column": 2,
          "position": 2083
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "();\n\n  const getProviderBadgeColor = (provider: string) => {\n    const colors = {\n      openai: \"bg-green-100 text-green-800\",\n      claude: \"bg-blue-100 text-blue-800\",\n      gemini: \"bg-purple-100 text-purple-800\",\n      lovable: \"bg-orange-100 text-orange-800\",\n      custom: \"bg-gray-100 text-gray-800\",\n    };\n    return colors[provider as keyof typeof colors] || colors.custom;\n  };\n\n  const projectedExceedsLimit",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai-insights/AIUsageWidget.tsx",
        "start": 88,
        "end": 101,
        "startLoc": {
          "line": 88,
          "column": 17,
          "position": 794
        },
        "endLoc": {
          "line": 101,
          "column": 22,
          "position": 896
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/UsageAnalytics.tsx",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 15,
          "position": 439
        },
        "endLoc": {
          "line": 74,
          "column": 12,
          "position": 541
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "import React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/SmartRecommendations.tsx",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 7,
          "position": 96
        }
      },
      "secondFile": {
        "name": "src/components/widgets/SmartRecommendationsWidget.tsx",
        "start": 1,
        "end": 13,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 13,
          "column": 6,
          "position": 97
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ">\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Object.entries(PROVIDER_LABELS).map(([value, label]) => (\n                        <SelectItem key={value} value={value}>\n                          {label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label>",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/AISettingsDashboard.tsx",
        "start": 193,
        "end": 208,
        "startLoc": {
          "line": 193,
          "column": 19,
          "position": 1423
        },
        "endLoc": {
          "line": 208,
          "column": 2,
          "position": 1532
        }
      },
      "secondFile": {
        "name": "src/components/admin/APIManagement/CreateAPIKeyDialog.tsx",
        "start": 101,
        "end": 116,
        "startLoc": {
          "line": 101,
          "column": 15,
          "position": 744
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 853
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n}));\n\n// Mock toast notifications\nvi.mock(\"sonner\", () => ({\n  toast: {\n    success: vi.fn(),\n    error: vi.fn(),\n    info: vi.fn(),\n  },\n}));\n\ndescribe",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 86,
        "end": 98,
        "startLoc": {
          "line": 86,
          "column": 15,
          "position": 654
        },
        "endLoc": {
          "line": 98,
          "column": 9,
          "position": 728
        }
      },
      "secondFile": {
        "name": "src/__tests__/integration/auth/AuthenticationFlows.test.tsx",
        "start": 44,
        "end": 56,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 417
        },
        "endLoc": {
          "line": 56,
          "column": 26,
          "position": 491
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ", async () => {\n      const user = userEvent.setup();\n      const preferencesTab = screen.getByRole(\"tab\", { name: /preferences/i });\n\n      await user.click(preferencesTab);\n\n      // Should show preferences content\n      expect(screen.getByText(/AI Provider Settings/i)).toBeInTheDocument();\n    });\n\n    it(\"should handle performance settings\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 180,
        "end": 190,
        "startLoc": {
          "line": 180,
          "column": 41,
          "position": 1393
        },
        "endLoc": {
          "line": 190,
          "column": 37,
          "position": 1484
        }
      },
      "secondFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 170,
        "end": 180,
        "startLoc": {
          "line": 170,
          "column": 36,
          "position": 1301
        },
        "endLoc": {
          "line": 180,
          "column": 41,
          "position": 1392
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", async () => {\n      const user = userEvent.setup();\n      const preferencesTab = screen.getByRole(\"tab\", { name: /preferences/i });\n\n      await user.click(preferencesTab);\n\n      // Should show preferences content\n      expect(screen.getByText(/AI Provider Settings/i)).toBeInTheDocument();\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 190,
        "end": 199,
        "startLoc": {
          "line": 190,
          "column": 37,
          "position": 1485
        },
        "endLoc": {
          "line": 199,
          "column": 2,
          "position": 1573
        }
      },
      "secondFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 170,
        "end": 180,
        "startLoc": {
          "line": 170,
          "column": 36,
          "position": 1301
        },
        "endLoc": {
          "line": 180,
          "column": 3,
          "position": 1390
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", async () => {\n      const user = userEvent.setup();\n      const privacyTab = screen.getByRole(\"tab\", { name: /privacy/i });\n\n      await user.click(privacyTab);\n\n      // Should show privacy content\n      expect(screen.getByText(/Privacy/i)).toBeInTheDocument();\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 262,
        "end": 271,
        "startLoc": {
          "line": 262,
          "column": 41,
          "position": 2125
        },
        "endLoc": {
          "line": 271,
          "column": 2,
          "position": 2213
        }
      },
      "secondFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 252,
        "end": 262,
        "startLoc": {
          "line": 252,
          "column": 41,
          "position": 2033
        },
        "endLoc": {
          "line": 262,
          "column": 3,
          "position": 2122
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ", async () => {\n      const user = userEvent.setup();\n      render(<AISettingsDashboard />);\n\n      const privacyTab = screen.getByRole(\"tab\", { name: /privacy/i });\n      await user.click(privacyTab);\n\n      // Should show privacy content\n      expect(screen.getByText(/Privacy/i)).toBeInTheDocument();\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 524,
        "end": 534,
        "startLoc": {
          "line": 524,
          "column": 32,
          "position": 4201
        },
        "endLoc": {
          "line": 534,
          "column": 2,
          "position": 4299
        }
      },
      "secondFile": {
        "name": "src/components/ai/AISettingsDashboard.test.tsx",
        "start": 513,
        "end": 524,
        "startLoc": {
          "line": 513,
          "column": 32,
          "position": 4099
        },
        "endLoc": {
          "line": 524,
          "column": 3,
          "position": 4198
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ");\n  const days = eachDayOfInterval({ start, end });\n\n  const entryMap = new Map(\n    entries.map((e) => [format(parseISO(e.date), \"yyyy-MM-dd\"), e]),\n  );\n\n  return days.map((date) => {\n    const dateStr = format(date, \"yyyy-MM-dd\");\n    const entry = entryMap.get(dateStr);\n\n    let",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/habits.ts",
        "start": 266,
        "end": 277,
        "startLoc": {
          "line": 266,
          "column": 3,
          "position": 1937
        },
        "endLoc": {
          "line": 277,
          "column": 4,
          "position": 2057
        }
      },
      "secondFile": {
        "name": "src/utils/habits.ts",
        "start": 237,
        "end": 248,
        "startLoc": {
          "line": 237,
          "column": 6,
          "position": 1684
        },
        "endLoc": {
          "line": 248,
          "column": 7,
          "position": 1804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(entries: HabitEntry[]): number {\n  if (!entries || entries.length === 0) return 0;\n\n  const sortedEntries = [...entries]\n    .filter((e) => e.status === \"completed\")\n    .sort((a, b) => new Date(a",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/habitAnalytics.ts",
        "start": 55,
        "end": 60,
        "startLoc": {
          "line": 55,
          "column": 23,
          "position": 439
        },
        "endLoc": {
          "line": 60,
          "column": 2,
          "position": 525
        }
      },
      "secondFile": {
        "name": "src/utils/habitAnalytics.ts",
        "start": 24,
        "end": 29,
        "startLoc": {
          "line": 24,
          "column": 16,
          "position": 147
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 233
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": string;\n  description?: string;\n  status?: ProjectStatus;\n  priority?: ProjectPriority;\n  visibility?: ProjectVisibility;\n  project_manager?: string;\n  start_date?: string;\n  target_date?: string;\n  tags?: string[];\n  color?: string;\n  icon?: string;\n  estimated_hours?: number;\n  actual_hours",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/projects.ts",
        "start": 179,
        "end": 191,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 1125
        },
        "endLoc": {
          "line": 191,
          "column": 13,
          "position": 1221
        }
      },
      "secondFile": {
        "name": "src/types/projects.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 6,
          "position": 986
        },
        "endLoc": {
          "line": 173,
          "column": 14,
          "position": 1082
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": string;\n  title: string;\n  description?: string | null;\n  category: GoalCategory;\n  status: GoalStatus;\n  priority: number;\n  progress: number;\n  target_value?: number | null;\n  current_value?: number | null;\n  unit?: string | null;\n  start_date?: string | null;\n  target_date?: string | null;\n  completed_at?: string | null;\n  created_by",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/goals.ts",
        "start": 95,
        "end": 108,
        "startLoc": {
          "line": 95,
          "column": 8,
          "position": 731
        },
        "endLoc": {
          "line": 108,
          "column": 11,
          "position": 856
        }
      },
      "secondFile": {
        "name": "src/types/goals.ts",
        "start": 18,
        "end": 31,
        "startLoc": {
          "line": 18,
          "column": 13,
          "position": 96
        },
        "endLoc": {
          "line": 31,
          "column": 15,
          "position": 221
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "= {\n    getItem: vi.fn(),\n    setItem: vi.fn(),\n    removeItem: vi.fn(),\n    clear: vi.fn(),\n    length: 0,\n    key: vi.fn(),\n  };\n  Object.defineProperty(window, \"sessionStorage\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/test-utils.tsx",
        "start": 163,
        "end": 171,
        "startLoc": {
          "line": 163,
          "column": 2,
          "position": 1193
        },
        "endLoc": {
          "line": 171,
          "column": 17,
          "position": 1271
        }
      },
      "secondFile": {
        "name": "src/test/test-utils.tsx",
        "start": 147,
        "end": 155,
        "startLoc": {
          "line": 147,
          "column": 2,
          "position": 1066
        },
        "endLoc": {
          "line": 155,
          "column": 15,
          "position": 1144
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    loading: false,\n    authError: null,\n    signIn: vi.fn(),\n    signUp: vi.fn(),\n    signOut: vi.fn(),\n    signInWithGoogle: vi.fn(),\n    resetPassword: vi.fn(),\n    updateProfile: vi.fn(),\n    clearAuthError: vi.fn(),\n  },",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/mock-data.ts",
        "start": 262,
        "end": 272,
        "startLoc": {
          "line": 262,
          "column": 2,
          "position": 2021
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 2116
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 66,
        "end": 76,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 572
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 667
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "{\n    user: null,\n    session: null,\n    profile: null,\n    loading: false,\n    authError: null,\n    signIn: vi.fn(),\n    signUp: vi.fn(),\n    signOut: vi.fn(),\n    signInWithGoogle: vi.fn(),\n    resetPassword: vi.fn(),\n    updateProfile: vi.fn(),\n    clearAuthError: vi.fn(),\n  },\n  loading",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/mock-data.ts",
        "start": 273,
        "end": 287,
        "startLoc": {
          "line": 273,
          "column": 2,
          "position": 2122
        },
        "endLoc": {
          "line": 287,
          "column": 8,
          "position": 2241
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 172,
        "end": 273,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 1578
        },
        "endLoc": {
          "line": 273,
          "column": 16,
          "position": 2119
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    authError: null,\n    signIn: vi.fn(),\n    signUp: vi.fn(),\n    signOut: vi.fn(),\n    signInWithGoogle: vi.fn(),\n    resetPassword: vi.fn(),\n    updateProfile: vi.fn(),\n    clearAuthError: vi.fn(),\n  },\n  error",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/mock-data.ts",
        "start": 291,
        "end": 301,
        "startLoc": {
          "line": 291,
          "column": 5,
          "position": 2272
        },
        "endLoc": {
          "line": 301,
          "column": 6,
          "position": 2363
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 67,
        "end": 273,
        "startLoc": {
          "line": 67,
          "column": 6,
          "position": 579
        },
        "endLoc": {
          "line": 273,
          "column": 16,
          "position": 2119
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    signIn: vi.fn(),\n    signUp: vi.fn(),\n    signOut: vi.fn(),\n    signInWithGoogle: vi.fn(),\n    resetPassword: vi.fn(),\n    updateProfile: vi.fn(),\n    clearAuthError: vi.fn(),\n  },\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/test/mock-data.ts",
        "start": 306,
        "end": 315,
        "startLoc": {
          "line": 306,
          "column": 24,
          "position": 2401
        },
        "endLoc": {
          "line": 315,
          "column": 2,
          "position": 2484
        }
      },
      "secondFile": {
        "name": "src/__tests__/unit/hooks/useProductivityProfile.test.ts",
        "start": 68,
        "end": 273,
        "startLoc": {
          "line": 68,
          "column": 5,
          "position": 586
        },
        "endLoc": {
          "line": 273,
          "column": 16,
          "position": 2119
        }
      }
    },
    {
      "format": "css",
      "lines": 38,
      "fragment": "{\n  /* Light theme colors */\n  --background: 0 0% 100%;\n  --foreground: 222.2 84% 4.9%;\n  --card: 0 0% 100%;\n  --card-foreground: 222.2 84% 4.9%;\n  --popover: 0 0% 100%;\n  --popover-foreground: 222.2 84% 4.9%;\n  --primary: 221.2 83.2% 53.3%;\n  --primary-foreground: 210 40% 98%;\n  --secondary: 210 40% 96%;\n  --secondary-foreground: 222.2 84% 4.9%;\n  --muted: 210 40% 96%;\n  --muted-foreground: 215.4 16.3% 46.9%;\n  --accent: 210 40% 96%;\n  --accent-foreground: 222.2 84% 4.9%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 210 40% 98%;\n  --border: 214.3 31.8% 91.4%;\n  --input: 214.3 31.8% 91.4%;\n  --ring: 221.2 83.2% 53.3%;\n  --radius: 0.5rem;\n\n  /* Success colors */\n  --success: 142.1 76.2% 36.3%;\n  --success-foreground: 355.7 100% 97.3%;\n\n  /* Warning colors */\n  --warning: 32.2 95% 44.1%;\n  --warning-foreground: 355.7 100% 97.3%;\n\n  /* Info colors */\n  --info: 198.6 88.7% 48.4%;\n  --info-foreground: 355.7 100% 97.3%;\n}\n\n.dark,\n[data-theme=\"dark\"]",
      "tokens": 0,
      "firstFile": {
        "name": "src/styles/globals.css",
        "start": 43,
        "end": 80,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 323
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 625
        }
      },
      "secondFile": {
        "name": "src/styles/globals.css",
        "start": 6,
        "end": 42,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 17
        },
        "endLoc": {
          "line": 42,
          "column": 28,
          "position": 319
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": "}>\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Create from Template\n        </Button>\n      </div>\n\n      {/* Search and Filters */}\n      <Card>\n        <CardContent className=\"pt-6 space-y-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search templates...\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n\n          {allCategories && allCategories.length > 0 && (\n            <div className=\"space-y-2\">\n              <p className=\"text-sm font-medium\">Categories</p>\n              <div className=\"flex items-center gap-2 flex-wrap\">\n                <Badge\n                  variant={!selectedCategory ? \"default\" : \"outline\"}\n                  className=\"cursor-pointer\"\n                  onClick={() => setSelectedCategory(undefined)}\n                >\n                  All\n                </Badge>\n                {allCategories.map((category) => (\n                  <Badge\n                    key={category}\n                    variant={\n                      selectedCategory ",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Templates.tsx",
        "start": 76,
        "end": 110,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 663
        },
        "endLoc": {
          "line": 110,
          "column": 40,
          "position": 919
        }
      },
      "secondFile": {
        "name": "src/components/templates/TemplateSelector.tsx",
        "start": 82,
        "end": 114,
        "startLoc": {
          "line": 82,
          "column": 10,
          "position": 711
        },
        "endLoc": {
          "line": 114,
          "column": 42,
          "position": 938
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ";\n\n  const filteredTemplates = templates?.filter(\n    (template) =>\n      template.name.toLowerCase().includes(search.toLowerCase()) ||\n      template.description?.toLowerCase().includes(search.toLowerCase()),\n  );\n\n  const handleDelete",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Templates.tsx",
        "start": 48,
        "end": 56,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 404
        },
        "endLoc": {
          "line": 56,
          "column": 13,
          "position": 475
        }
      },
      "secondFile": {
        "name": "src/components/templates/TemplateSelector.tsx",
        "start": 41,
        "end": 49,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 363
        },
        "endLoc": {
          "line": 49,
          "column": 17,
          "position": 434
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "<Skeleton className=\"h-48\" />\n          <Skeleton className=\"h-48\" />\n          <Skeleton className=\"h-48\" />\n          <Skeleton className=\"h-48\" />\n          <Skeleton className=\"h-48\" />\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Templates.tsx",
        "start": 137,
        "end": 142,
        "startLoc": {
          "line": 137,
          "column": 11,
          "position": 1085
        },
        "endLoc": {
          "line": 142,
          "column": 3,
          "position": 1145
        }
      },
      "secondFile": {
        "name": "src/pages/Templates.tsx",
        "start": 136,
        "end": 141,
        "startLoc": {
          "line": 136,
          "column": 11,
          "position": 1073
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1133
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "const priorityConfig = {\n  low: {\n    color:\n      \"bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400\",\n    icon: \"🟢\",\n  },\n  medium: {\n    color:\n      \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400\",\n    icon: \"🟡\",\n  },\n  high: {\n    color:\n      \"bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400\",\n    icon: \"🟠\",\n  },\n  urgent: {\n    color: \"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\",\n    icon: \"🔴\",\n  },\n};\n\nconst statusConfig = {\n  todo: {\n    color: \"bg-secondary text-secondary-foreground\",\n    icon: \"📋\",",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/TaskDetail.tsx",
        "start": 43,
        "end": 68,
        "startLoc": {
          "line": 43,
          "column": 1,
          "position": 357
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 494
        }
      },
      "secondFile": {
        "name": "src/components/tasks/TaskListView.tsx",
        "start": 43,
        "end": 66,
        "startLoc": {
          "line": 43,
          "column": 1,
          "position": 467
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 603
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <Collapsible>\n            <CollapsibleTrigger className=\"w-full\">\n              <div className=\"flex items-center justify-between w-full py-2\">\n                <div className=\"flex items-center gap-2 text-left\">\n                  <Settings className=\"h-5 w-5\" />\n                  <div>\n                    <h3 className=\"font-semibold\">Advanced Profile",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Profile.tsx",
        "start": 192,
        "end": 201,
        "startLoc": {
          "line": 192,
          "column": 57,
          "position": 1636
        },
        "endLoc": {
          "line": 201,
          "column": 8,
          "position": 1721
        }
      },
      "secondFile": {
        "name": "src/components/settings/AccessibilitySettings.tsx",
        "start": 143,
        "end": 152,
        "startLoc": {
          "line": 143,
          "column": 49,
          "position": 1017
        },
        "endLoc": {
          "line": 152,
          "column": 14,
          "position": 1102
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": "} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={loading}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"password\">Password</Label>\n                <Link\n                  to=\"/forgot-password\"\n                  className=\"text-sm text-primary hover:underline\"\n                >\n                  Forgot password?\n                </Link>\n              </div>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"••••••••\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                disabled={loading}\n              />\n            </div>\n            <Button type=\"submit\" className=\"w-full\" disabled={loading",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 62,
        "end": 95,
        "startLoc": {
          "line": 62,
          "column": 13,
          "position": 552
        },
        "endLoc": {
          "line": 95,
          "column": 8,
          "position": 801
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 75,
        "end": 100,
        "startLoc": {
          "line": 75,
          "column": 8,
          "position": 663
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 844
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "{ useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { toast } from \"sonner\";\nimport { Loader2 } from \"lucide-react\";\n\nexport default function Login",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 5
        },
        "endLoc": {
          "line": 17,
          "column": 6,
          "position": 151
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 2
        },
        "endLoc": {
          "line": 17,
          "column": 7,
          "position": 148
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ", signInWithGoogle, user } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user) {\n      navigate(\"/dashboard\");\n    }\n  }, [user, navigate]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const { error } = await signIn",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 21,
        "end": 34,
        "startLoc": {
          "line": 21,
          "column": 7,
          "position": 217
        },
        "endLoc": {
          "line": 34,
          "column": 7,
          "position": 340
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 22,
        "end": 35,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 232
        },
        "endLoc": {
          "line": 35,
          "column": 7,
          "position": 355
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ");\n      navigate(\"/dashboard\");\n    }\n\n    setLoading(false);\n  };\n\n  const handleGoogleSignIn = async () => {\n    setLoading(true);\n    await signInWithGoogle();\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-mesh p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl font-bold\">Welcome",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 39,
        "end": 56,
        "startLoc": {
          "line": 39,
          "column": 25,
          "position": 387
        },
        "endLoc": {
          "line": 56,
          "column": 8,
          "position": 504
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 42,
        "end": 60,
        "startLoc": {
          "line": 42,
          "column": 7,
          "position": 410
        },
        "endLoc": {
          "line": 60,
          "column": 7,
          "position": 529
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 59,
        "end": 68,
        "startLoc": {
          "line": 59,
          "column": 11,
          "position": 530
        },
        "endLoc": {
          "line": 68,
          "column": 12,
          "position": 603
        }
      },
      "secondFile": {
        "name": "src/pages/Profile.tsx",
        "start": 146,
        "end": 155,
        "startLoc": {
          "line": 146,
          "column": 8,
          "position": 1279
        },
        "endLoc": {
          "line": 155,
          "column": 6,
          "position": 1352
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={loading}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <div",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 62,
        "end": 76,
        "startLoc": {
          "line": 62,
          "column": 2,
          "position": 559
        },
        "endLoc": {
          "line": 76,
          "column": 4,
          "position": 662
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 77,
        "end": 91,
        "startLoc": {
          "line": 77,
          "column": 4,
          "position": 670
        },
        "endLoc": {
          "line": 91,
          "column": 6,
          "position": 773
        }
      }
    },
    {
      "format": "tsx",
      "lines": 43,
      "fragment": "</Button>\n          </form>\n\n          <div className=\"relative my-4\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <span className=\"w-full border-t\" />\n            </div>\n            <div className=\"relative flex justify-center text-xs uppercase\">\n              <span className=\"bg-card px-2 text-muted-foreground\">\n                Or continue with\n              </span>\n            </div>\n          </div>\n\n          <Button\n            variant=\"outline\"\n            className=\"w-full\"\n            onClick={handleGoogleSignIn}\n            disabled={loading}\n          >\n            <svg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\">\n              <path\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                fill=\"#4285F4\"\n              />\n              <path\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                fill=\"#34A853\"\n              />\n              <path\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                fill=\"#FBBC05\"\n              />\n              <path\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                fill=\"#EA4335\"\n              />\n            </svg>\n            Google\n          </Button>\n\n          <p className=\"mt-4 text-center text-sm text-muted-foreground\">\n            Don't",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Login.tsx",
        "start": 98,
        "end": 140,
        "startLoc": {
          "line": 98,
          "column": 13,
          "position": 829
        },
        "endLoc": {
          "line": 140,
          "column": 6,
          "position": 1068
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 109,
        "end": 151,
        "startLoc": {
          "line": 109,
          "column": 13,
          "position": 930
        },
        "endLoc": {
          "line": 151,
          "column": 8,
          "position": 1169
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "if (!a.target_date && !b.target_date) return 0;\n          if (!a.target_date) return 1;\n          if (!b.target_date) return -1;\n          return (\n            new Date(a.target_date).getTime() -\n            new Date(b.target_date).getTime()\n          );\n        case",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Goals.tsx",
        "start": 86,
        "end": 93,
        "startLoc": {
          "line": 86,
          "column": 11,
          "position": 805
        },
        "endLoc": {
          "line": 93,
          "column": 5,
          "position": 897
        }
      },
      "secondFile": {
        "name": "src/components/goals/MilestoneTimeline.tsx",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 5,
          "position": 180
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 271
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "() => {\n    if (goal) {\n      setEditedGoal({\n        title: goal.title,\n        description: goal.description,\n        category: goal.category,\n        priority: goal.priority,\n        target_value: goal.target_value,\n        current_value: goal.current_value,\n        unit: goal.unit,\n        start_date: goal.start_date,\n        target_date: goal.target_date,\n        tags: goal.tags || [],\n      });\n    }\n    setIsEditing",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/GoalDetail.tsx",
        "start": 131,
        "end": 146,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1201
        },
        "endLoc": {
          "line": 146,
          "column": 13,
          "position": 1326
        }
      },
      "secondFile": {
        "name": "src/pages/GoalDetail.tsx",
        "start": 79,
        "end": 94,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 674
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 799
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"1\">Lowest</SelectItem>\n                        <SelectItem value=\"2\">Low</SelectItem>\n                        <SelectItem value=\"3\">Medium</SelectItem>\n                        <SelectItem value=\"4\">High</SelectItem>\n                        <SelectItem value=\"5\">Urgent",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/GoalDetail.tsx",
        "start": 381,
        "end": 389,
        "startLoc": {
          "line": 381,
          "column": 14,
          "position": 3232
        },
        "endLoc": {
          "line": 389,
          "column": 7,
          "position": 3320
        }
      },
      "secondFile": {
        "name": "src/components/goals/MilestoneEditor.tsx",
        "start": 130,
        "end": 138,
        "startLoc": {
          "line": 130,
          "column": 2,
          "position": 965
        },
        "endLoc": {
          "line": 138,
          "column": 9,
          "position": 1053
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "import { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Trophy",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Gamification.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 7,
          "position": 110
        }
      },
      "secondFile": {
        "name": "src/components/automation/WorkflowOptimizer.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 11,
          "position": 110
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "Link } from \"react-router-dom\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { toast } from \"sonner\";\nimport { Loader2,",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ForgotPassword.tsx",
        "start": 2,
        "end": 15,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 17
        },
        "endLoc": {
          "line": 15,
          "column": 2,
          "position": 127
        }
      },
      "secondFile": {
        "name": "src/pages/Signup.tsx",
        "start": 2,
        "end": 15,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 23
        },
        "endLoc": {
          "line": 15,
          "column": 2,
          "position": 134
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={loading}\n              />\n            </div>\n            <Button",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ForgotPassword.tsx",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 11,
          "position": 625
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 746
        }
      },
      "secondFile": {
        "name": "src/pages/Profile.tsx",
        "start": 146,
        "end": 90,
        "startLoc": {
          "line": 146,
          "column": 8,
          "position": 1279
        },
        "endLoc": {
          "line": 90,
          "column": 4,
          "position": 762
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "import { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  BarChart3,\n  Brain",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/Analytics.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 6,
          "position": 101
        }
      },
      "secondFile": {
        "name": "src/components/analytics/MobileAnalyticsDashboard.tsx",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 11,
          "position": 101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "export interface TextAnalysis {\n  sentiment: {\n    score: number;\n    comparative: number;\n    positive: string[];\n    negative: string[];\n  };\n  keywords: string[];\n  entities: {\n    dates: Date[];\n    times: string[];\n    people: string[];\n    locations: string[];\n  };\n  intent: {\n    action: string;\n    confidence: number;\n  };\n}\n\nclass",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/nlp-utils.ts",
        "start": 15,
        "end": 35,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 102
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 234
        }
      },
      "secondFile": {
        "name": "src/types/ai.ts",
        "start": 39,
        "end": 59,
        "startLoc": {
          "line": 39,
          "column": 1,
          "position": 273
        },
        "endLoc": {
          "line": 59,
          "column": 7,
          "position": 405
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "export interface AIConfig {\n  provider: \"anthropic\" | \"openai\";\n  apiKey: string;\n  model?: string;\n  maxTokens?: number;\n  temperature?: number;\n}\n\nexport interface AIMessage {\n  id: string;\n  role: \"user\" | \"assistant\" | \"system\";\n  content: string;\n  timestamp: Date;\n  metadata?: Record<string, any>;\n}\n\nexport interface TaskExtractionResult {\n  title: string;\n  description?: string;\n  dueDate?: Date;\n  priority?: \"low\" | \"medium\" | \"high\";\n  category?: string;\n  assignee?: string;\n  confidence: number;\n}\n\nexport interface ProductivityInsight {\n  type: \"pattern\" | \"recommendation\" | \"warning\" | \"achievement\";\n  title: string;\n  description: string;\n  data: Record<string, any>;\n  confidence: number;\n  actionable?: boolean;\n  suggestedActions?: string[];\n}\n\nclass",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/ai-service.ts",
        "start": 10,
        "end": 46,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 25
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 294
        }
      },
      "secondFile": {
        "name": "src/types/ai.ts",
        "start": 2,
        "end": 38,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 38,
          "column": 13,
          "position": 271
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "if (!user) throw new Error(\"User not authenticated\");\n\n      const { data, error } = await supabase\n        .from(\"workspaces\")\n        .select(\"*\")\n        .eq(\"owner_id\", user.id)\n        .eq(\"type\", \"personal\")\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useTags.ts",
        "start": 18,
        "end": 30,
        "startLoc": {
          "line": 18,
          "column": 7,
          "position": 200
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 303
        }
      },
      "secondFile": {
        "name": "src/hooks/useTasks.ts",
        "start": 19,
        "end": 31,
        "startLoc": {
          "line": 19,
          "column": 7,
          "position": 219
        },
        "endLoc": {
          "line": 31,
          "column": 8,
          "position": 322
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const { data: currentTask } = await supabase\n        .from(\"tasks\")\n        .select(\"parent_task_id\")\n        .eq(\"id\", taskId)\n        .single();\n\n      const { data, error } = await supabase\n        .from(\"tasks\")\n        .update({ parent_task_id: newParentId",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useSubtasks.ts",
        "start": 284,
        "end": 292,
        "startLoc": {
          "line": 284,
          "column": 7,
          "position": 2343
        },
        "endLoc": {
          "line": 292,
          "column": 12,
          "position": 2426
        }
      },
      "secondFile": {
        "name": "src/hooks/useSubtasks.ts",
        "start": 234,
        "end": 242,
        "startLoc": {
          "line": 234,
          "column": 7,
          "position": 1908
        },
        "endLoc": {
          "line": 242,
          "column": 5,
          "position": 1991
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ".habit_links?.map((link: any) => ({\n          ...link,\n          habit: link.habit\n            ? {\n                ...link.habit,\n                custom_frequency: link.habit.custom_frequency as any,\n                metadata: link.habit.metadata as any,\n              }\n            : undefined,\n        })),\n      } as",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useReflections.ts",
        "start": 125,
        "end": 135,
        "startLoc": {
          "line": 125,
          "column": 5,
          "position": 882
        },
        "endLoc": {
          "line": 135,
          "column": 3,
          "position": 973
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflections.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 612
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 702
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) throw error;\n      return {\n        ...data,\n        metadata: data.metadata as Record<string, any>,\n      } as Reflection;\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({\n        queryKey: [REFLECTIONS_QUERY_KEY, data.workspace_id],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [REFLECTIONS_QUERY_KEY",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useReflections.ts",
        "start": 289,
        "end": 304,
        "startLoc": {
          "line": 289,
          "column": 3,
          "position": 2349
        },
        "endLoc": {
          "line": 304,
          "column": 22,
          "position": 2468
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflections.ts",
        "start": 242,
        "end": 256,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 1984
        },
        "endLoc": {
          "line": 256,
          "column": 23,
          "position": 2102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n          created_by: (await supabase.auth.getUser()).data.user!.id,\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      return {\n        ...data,\n        metadata: data.metadata as Record<string, any>,\n      } as Reflection;\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({\n        queryKey: [REFLECTIONS_QUERY_KEY, data.workspace_id],\n      });\n      toast",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useReflections.ts",
        "start": 376,
        "end": 392,
        "startLoc": {
          "line": 376,
          "column": 9,
          "position": 3073
        },
        "endLoc": {
          "line": 392,
          "column": 6,
          "position": 3209
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflections.ts",
        "start": 240,
        "end": 256,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 1956
        },
        "endLoc": {
          "line": 256,
          "column": 12,
          "position": 2092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n        .single();\n\n      if (error) throw error;\n      return {\n        ...data,\n        prompts: data.prompts as any as TemplatePrompt[],\n        structure: data.structure as any as TemplateStructure,\n        metadata: data.metadata as Record<string, any>,\n      } as ReflectionTemplate;\n    },\n    onSuccess",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useReflectionTemplates.ts",
        "start": 197,
        "end": 208,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 1591
        },
        "endLoc": {
          "line": 208,
          "column": 10,
          "position": 1691
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflectionTemplates.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 11,
          "position": 552
        },
        "endLoc": {
          "line": 81,
          "column": 8,
          "position": 652
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) throw error;\n      return {\n        ...data,\n        prompts: data.prompts as any as TemplatePrompt[],\n        structure: data.structure as any as TemplateStructure,\n        metadata: data.metadata as Record<string, any>,\n      } as ReflectionTemplate;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [TEMPLATES_QUERY_KEY] });\n      toast.success(\"Template updated successfully\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useReflectionTemplates.ts",
        "start": 246,
        "end": 260,
        "startLoc": {
          "line": 246,
          "column": 3,
          "position": 2064
        },
        "endLoc": {
          "line": 260,
          "column": 32,
          "position": 2203
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflectionTemplates.ts",
        "start": 196,
        "end": 210,
        "startLoc": {
          "line": 196,
          "column": 2,
          "position": 1585
        },
        "endLoc": {
          "line": 210,
          "column": 32,
          "position": 1724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "],\n    queryFn: async () => {\n      const { data: user } = await supabase.auth.getUser();\n      if (!user.user) throw new Error(\"Not authenticated\");\n\n      const { data, error } = await supabase.rpc(\n        \"calculate_reflection_streak\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useReflectionAnalytics.ts",
        "start": 189,
        "end": 195,
        "startLoc": {
          "line": 189,
          "column": 12,
          "position": 1466
        },
        "endLoc": {
          "line": 195,
          "column": 30,
          "position": 1550
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflectionPrompts.ts",
        "start": 51,
        "end": 56,
        "startLoc": {
          "line": 51,
          "column": 15,
          "position": 376
        },
        "endLoc": {
          "line": 56,
          "column": 25,
          "position": 458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ";\n\ntype Task = Database[\"public\"][\"Tables\"][\"tasks\"][\"Row\"];\ntype TaskInsert = Database[\"public\"][\"Tables\"][\"tasks\"][\"Insert\"];\ntype TaskUpdate = Database[\"public\"][\"Tables\"][\"tasks\"][\"Update\"];\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useRecurringTasks.ts",
        "start": 4,
        "end": 10,
        "startLoc": {
          "line": 4,
          "column": 32,
          "position": 56
        },
        "endLoc": {
          "line": 10,
          "column": 7,
          "position": 123
        }
      },
      "secondFile": {
        "name": "src/hooks/useTasks.ts",
        "start": 6,
        "end": 12,
        "startLoc": {
          "line": 6,
          "column": 26,
          "position": 82
        },
        "endLoc": {
          "line": 12,
          "column": 32,
          "position": 149
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\n    }) => {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error(\"Not authenticated\");\n\n      // Get user's default workspace\n      const { data: workspace } = await supabase\n        .from(\"workspace_members\")\n        .select(\"workspace_id\")\n        .eq(\"user_id\", user.id)\n        .limit(1)\n        .single();\n\n      if (!workspace) throw new Error(\"No workspace found\");\n\n      const { data, error } = await supabase\n        .from(\"tasks\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useRecurringTasks.ts",
        "start": 74,
        "end": 92,
        "startLoc": {
          "line": 74,
          "column": 18,
          "position": 617
        },
        "endLoc": {
          "line": 92,
          "column": 8,
          "position": 781
        }
      },
      "secondFile": {
        "name": "src/hooks/useTaskTemplates.ts",
        "start": 118,
        "end": 136,
        "startLoc": {
          "line": 118,
          "column": 8,
          "position": 987
        },
        "endLoc": {
          "line": 136,
          "column": 17,
          "position": 1151
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "= () => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({\n      taskId,\n      pattern,\n    }: {\n      taskId: string;\n      pattern: RecurrencePattern;\n    }) => {\n      const { data, error } = await supabase\n        .from(\"tasks\")\n        .update({\n          is_recurring",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useRecurringTasks.ts",
        "start": 153,
        "end": 167,
        "startLoc": {
          "line": 153,
          "column": 2,
          "position": 1271
        },
        "endLoc": {
          "line": 167,
          "column": 13,
          "position": 1377
        }
      },
      "secondFile": {
        "name": "src/hooks/useRecurringTasks.ts",
        "start": 119,
        "end": 132,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 985
        },
        "endLoc": {
          "line": 132,
          "column": 19,
          "position": 1090
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "{\n        title: title.trim(),\n        workspace_id: defaults?.workspace_id || workspace.id,\n        created_by: user.id,\n        status: defaults?.status || \"todo\",\n        priority: defaults?.priority || \"medium\",\n        tags: defaults?.tags || [],\n        position: index",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useQuickTask.ts",
        "start": 110,
        "end": 117,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 988
        },
        "endLoc": {
          "line": 117,
          "column": 6,
          "position": 1073
        }
      },
      "secondFile": {
        "name": "src/hooks/useQuickTask.ts",
        "start": 64,
        "end": 71,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 567
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 652
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ")\n        .select(\n          `\n          *,\n          user_profile:profiles!project_members_user_id_fkey(id, full_name, avatar_url, email)\n        `,\n        )\n        .single();\n\n      if (error) throw error;\n      return {\n        ...data,\n        permissions: data.permissions as any as ProjectMemberPermissions,\n      } as ProjectMember;\n    },\n    onSuccess: (member) => {\n      queryClient.invalidateQueries({\n        queryKey: projectMemberKeys.list(member.project_id),\n      });\n      queryClient.invalidateQueries({\n        queryKey: projectMemberKeys",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useProjectMembers.ts",
        "start": 252,
        "end": 272,
        "startLoc": {
          "line": 252,
          "column": 3,
          "position": 1853
        },
        "endLoc": {
          "line": 272,
          "column": 18,
          "position": 1975
        }
      },
      "secondFile": {
        "name": "src/hooks/useProjectMembers.ts",
        "start": 206,
        "end": 226,
        "startLoc": {
          "line": 206,
          "column": 11,
          "position": 1518
        },
        "endLoc": {
          "line": 226,
          "column": 12,
          "position": 1640
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "{\n      queryClient.invalidateQueries({\n        queryKey: projectMemberKeys.list(projectId),\n      });\n      queryClient.invalidateQueries({\n        queryKey: projectKeys.detail(projectId),\n      });\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useProjectMembers.ts",
        "start": 389,
        "end": 397,
        "startLoc": {
          "line": 389,
          "column": 2,
          "position": 2901
        },
        "endLoc": {
          "line": 397,
          "column": 12,
          "position": 2972
        }
      },
      "secondFile": {
        "name": "src/hooks/useProjectMembers.ts",
        "start": 314,
        "end": 322,
        "startLoc": {
          "line": 314,
          "column": 2,
          "position": 2303
        },
        "endLoc": {
          "line": 322,
          "column": 2,
          "position": 2374
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n\n      return projectId;\n    },\n    onSuccess: (projectId) => {\n      queryClient.invalidateQueries({\n        queryKey: projectMemberKeys.list(projectId),\n      });\n      queryClient.invalidateQueries({\n        queryKey: projectKeys.detail(projectId),\n      });\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useProjectMembers.ts",
        "start": 470,
        "end": 482,
        "startLoc": {
          "line": 470,
          "column": 2,
          "position": 3557
        },
        "endLoc": {
          "line": 482,
          "column": 6,
          "position": 3651
        }
      },
      "secondFile": {
        "name": "src/hooks/useProjectMembers.ts",
        "start": 386,
        "end": 322,
        "startLoc": {
          "line": 386,
          "column": 6,
          "position": 2879
        },
        "endLoc": {
          "line": 322,
          "column": 2,
          "position": 2374
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "const activeGoals = goals.filter((g) => g.status === \"active\");\n    const avgProgress =\n      activeGoals.length > 0\n        ? activeGoals.reduce((sum, g) => sum + (g.progress || 0), 0) /\n          activeGoals.length\n        : 0;\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/usePersonalization.ts",
        "start": 153,
        "end": 160,
        "startLoc": {
          "line": 153,
          "column": 5,
          "position": 1320
        },
        "endLoc": {
          "line": 160,
          "column": 6,
          "position": 1411
        }
      },
      "secondFile": {
        "name": "src/hooks/usePersonalization.ts",
        "start": 98,
        "end": 105,
        "startLoc": {
          "line": 98,
          "column": 5,
          "position": 777
        },
        "endLoc": {
          "line": 105,
          "column": 3,
          "position": 868
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".lists() });\n      toast.success(\"Template created successfully!\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to create template\");\n      console.error(\"Create template error:\", error);\n    },\n  });\n}\n\n/**\n * Rate a template\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitTemplates.ts",
        "start": 186,
        "end": 198,
        "startLoc": {
          "line": 186,
          "column": 18,
          "position": 1474
        },
        "endLoc": {
          "line": 198,
          "column": 4,
          "position": 1550
        }
      },
      "secondFile": {
        "name": "src/hooks/useProjectTemplates.ts",
        "start": 173,
        "end": 185,
        "startLoc": {
          "line": 173,
          "column": 13,
          "position": 1319
        },
        "endLoc": {
          "line": 185,
          "column": 4,
          "position": 1395
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({\n      templateId,\n      rating,\n    }: {\n      templateId: string;\n      rating: number;\n    }) => {\n      if (rating < 1 || rating > 5) {\n        throw new Error(\"Rating must be between 1 and 5\");\n      }\n\n      // Get current rating",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitTemplates.ts",
        "start": 199,
        "end": 214,
        "startLoc": {
          "line": 199,
          "column": 16,
          "position": 1557
        },
        "endLoc": {
          "line": 214,
          "column": 22,
          "position": 1664
        }
      },
      "secondFile": {
        "name": "src/hooks/useReflectionTemplates.ts",
        "start": 297,
        "end": 312,
        "startLoc": {
          "line": 297,
          "column": 18,
          "position": 2455
        },
        "endLoc": {
          "line": 312,
          "column": 51,
          "position": 2562
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "queryClient.invalidateQueries({\n        queryKey: habitStreakKeys.current(variables.habitId),\n      });\n      queryClient.invalidateQueries({\n        queryKey: habitKeys.detail(variables.habitId),\n      });\n      queryClient.invalidateQueries({ queryKey: habitKeys.lists() });\n      toast.success(\"Streak restored successfully\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitStreaks.ts",
        "start": 228,
        "end": 235,
        "startLoc": {
          "line": 228,
          "column": 7,
          "position": 1865
        },
        "endLoc": {
          "line": 235,
          "column": 31,
          "position": 1941
        }
      },
      "secondFile": {
        "name": "src/hooks/useHabitStreaks.ts",
        "start": 177,
        "end": 184,
        "startLoc": {
          "line": 177,
          "column": 7,
          "position": 1470
        },
        "endLoc": {
          "line": 184,
          "column": 28,
          "position": 1546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as unknown as HabitReminder;\n    },\n    onSuccess: (reminder) => {\n      queryClient.invalidateQueries({\n        queryKey: habitReminderKeys.list(reminder.habit_id),\n      });\n      queryClient.invalidateQueries({\n        queryKey: habitReminderKeys.upcoming(reminder.habit_id),\n      });\n      toast.success(\"Reminder updated successfully!\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitReminders.ts",
        "start": 146,
        "end": 160,
        "startLoc": {
          "line": 146,
          "column": 3,
          "position": 1095
        },
        "endLoc": {
          "line": 160,
          "column": 33,
          "position": 1210
        }
      },
      "secondFile": {
        "name": "src/hooks/useHabitReminders.ts",
        "start": 104,
        "end": 118,
        "startLoc": {
          "line": 104,
          "column": 13,
          "position": 775
        },
        "endLoc": {
          "line": 118,
          "column": 33,
          "position": 890
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as unknown as HabitReminder;\n    },\n    onSuccess: (reminder) => {\n      queryClient.invalidateQueries({\n        queryKey: habitReminderKeys.list(reminder.habit_id),\n      });\n      queryClient.invalidateQueries({\n        queryKey: habitReminderKeys.upcoming(reminder.habit_id),\n      });\n      toast.success(\"Reminder snoozed\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitReminders.ts",
        "start": 230,
        "end": 244,
        "startLoc": {
          "line": 230,
          "column": 11,
          "position": 1743
        },
        "endLoc": {
          "line": 244,
          "column": 19,
          "position": 1858
        }
      },
      "secondFile": {
        "name": "src/hooks/useHabitReminders.ts",
        "start": 104,
        "end": 118,
        "startLoc": {
          "line": 104,
          "column": 13,
          "position": 775
        },
        "endLoc": {
          "line": 118,
          "column": 33,
          "position": 890
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "})\n        .eq(\"id\", reminderId)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as unknown as HabitReminder;\n    },\n    onSuccess: (reminder) => {\n      queryClient.invalidateQueries({\n        queryKey: habitReminderKeys.list(reminder.habit_id),\n      });\n      queryClient.invalidateQueries({\n        queryKey: habitReminderKeys.upcoming(reminder.habit_id),\n      });\n      toast.success(\n        reminder",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitReminders.ts",
        "start": 269,
        "end": 285,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2033
        },
        "endLoc": {
          "line": 285,
          "column": 9,
          "position": 2161
        }
      },
      "secondFile": {
        "name": "src/hooks/useHabitReminders.ts",
        "start": 229,
        "end": 118,
        "startLoc": {
          "line": 229,
          "column": 2,
          "position": 1732
        },
        "endLoc": {
          "line": 118,
          "column": 33,
          "position": 890
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as HabitEntry;\n    },\n    onSuccess: async (entry) => {\n      queryClient.invalidateQueries({ queryKey: habitEntryKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: habitEntryKeys.today() });\n      queryClient.invalidateQueries({ queryKey: habitKeys.lists() });\n      queryClient.invalidateQueries({\n        queryKey: habitKeys.detail(entry.habit_id),\n      });\n\n      // Refresh gamification data if habit was completed",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useHabitEntries.ts",
        "start": 207,
        "end": 222,
        "startLoc": {
          "line": 207,
          "column": 3,
          "position": 1670
        },
        "endLoc": {
          "line": 222,
          "column": 52,
          "position": 1814
        }
      },
      "secondFile": {
        "name": "src/hooks/useHabitEntries.ts",
        "start": 145,
        "end": 160,
        "startLoc": {
          "line": 145,
          "column": 10,
          "position": 1128
        },
        "endLoc": {
          "line": 160,
          "column": 60,
          "position": 1272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": string;\n  description?: string;\n  target_date?: Date;\n  target_progress?: number;\n  depends_on?: string[];\n  priority?: 1 | 2 | 3 | 4 | 5;\n  estimated_hours?: number;\n  tags?: string[];\n  metadata?: Record<string, any>;\n}\n\nexport interface MilestoneTemplate",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useGoalMilestones.ts",
        "start": 20,
        "end": 31,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 185
        },
        "endLoc": {
          "line": 31,
          "column": 18,
          "position": 287
        }
      },
      "secondFile": {
        "name": "src/hooks/useGoalMilestones.ts",
        "start": 8,
        "end": 19,
        "startLoc": {
          "line": 8,
          "column": 6,
          "position": 76
        },
        "endLoc": {
          "line": 19,
          "column": 21,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n\n      return data as GoalMilestone;\n    },\n    onSuccess: (milestone) => {\n      queryClient.invalidateQueries({\n        queryKey: [\"goal-milestones\", milestone.goal_id],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"milestone-analytics\", milestone.goal_id],\n      });\n      queryClient.invalidateQueries({ queryKey: [\"goals\"] });\n      toast.success(\"Milestone updated successfully!\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useGoalMilestones.ts",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 7,
          "position": 2113
        },
        "endLoc": {
          "line": 258,
          "column": 34,
          "position": 2217
        }
      },
      "secondFile": {
        "name": "src/hooks/useGoalMilestones.ts",
        "start": 157,
        "end": 169,
        "startLoc": {
          "line": 157,
          "column": 7,
          "position": 1270
        },
        "endLoc": {
          "line": 169,
          "column": 34,
          "position": 1374
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") => {\n      // Optimistic update\n      await queryClient.cancelQueries({ queryKey: [\"quick-todos\"] });\n\n      const previousQuickTodos = queryClient.getQueryData([\n        \"quick-todos\",\n        profile?.id,\n      ]);\n\n      queryClient.setQueryData(\n        [\"quick-todos\", profile?.id],\n        (old: QuickTodo[] | undefined) =>\n          old?.filter",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useDeleteQuickTodo.ts",
        "start": 21,
        "end": 33,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 202
        },
        "endLoc": {
          "line": 33,
          "column": 7,
          "position": 300
        }
      },
      "secondFile": {
        "name": "src/hooks/useUpdateQuickTodo.ts",
        "start": 28,
        "end": 40,
        "startLoc": {
          "line": 28,
          "column": 8,
          "position": 267
        },
        "endLoc": {
          "line": 40,
          "column": 4,
          "position": 365
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ") || [],\n      );\n\n      return { previousQuickTodos };\n    },\n    onError: (error, variables, context) => {\n      // Revert optimistic update\n      if (context?.previousQuickTodos) {\n        queryClient.setQueryData(\n          [\"quick-todos\", profile?.id],\n          context.previousQuickTodos,\n        );\n      }\n      toast.error(\"Failed to delete travel note\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useDeleteQuickTodo.ts",
        "start": 33,
        "end": 46,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 315
        },
        "endLoc": {
          "line": 46,
          "column": 31,
          "position": 411
        }
      },
      "secondFile": {
        "name": "src/hooks/useUpdateQuickTodo.ts",
        "start": 44,
        "end": 57,
        "startLoc": {
          "line": 44,
          "column": 11,
          "position": 419
        },
        "endLoc": {
          "line": 57,
          "column": 31,
          "position": 515
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as QuickTodo;\n    },\n    onMutate: async (request) => {\n      // Optimistic update\n      await queryClient.cancelQueries({ queryKey: [\"quick-todos\"] });\n\n      const previousQuickTodos = queryClient.getQueryData([\n        \"quick-todos\",\n        profile?.id,\n      ]);\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useCreateQuickTodo.ts",
        "start": 32,
        "end": 48,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 326
        },
        "endLoc": {
          "line": 48,
          "column": 6,
          "position": 437
        }
      },
      "secondFile": {
        "name": "src/hooks/useUpdateQuickTodo.ts",
        "start": 21,
        "end": 37,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 217
        },
        "endLoc": {
          "line": 37,
          "column": 12,
          "position": 328
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "],\n      );\n\n      return { previousQuickTodos };\n    },\n    onError: (error, variables, context) => {\n      // Revert optimistic update\n      if (context?.previousQuickTodos) {\n        queryClient.setQueryData(\n          [\"quick-todos\", profile?.id],\n          context.previousQuickTodos,\n        );\n      }\n      toast.error(\"Failed to create travel note\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useCreateQuickTodo.ts",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 600
        },
        "endLoc": {
          "line": 74,
          "column": 31,
          "position": 691
        }
      },
      "secondFile": {
        "name": "src/hooks/useUpdateQuickTodo.ts",
        "start": 44,
        "end": 57,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 424
        },
        "endLoc": {
          "line": 57,
          "column": 31,
          "position": 515
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n        .eq(\"user_id\", user.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as AISettings;\n    },\n    onSuccess: (data) => {\n      queryClient.setQueryData([\"ai-settings\", user?.id], data);\n      toast.success(\"Settings reset to defaults\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useAISettings.ts",
        "start": 161,
        "end": 171,
        "startLoc": {
          "line": 161,
          "column": 16,
          "position": 1296
        },
        "endLoc": {
          "line": 171,
          "column": 29,
          "position": 1387
        }
      },
      "secondFile": {
        "name": "src/hooks/useAISettings.ts",
        "start": 130,
        "end": 140,
        "startLoc": {
          "line": 130,
          "column": 2,
          "position": 1032
        },
        "endLoc": {
          "line": 140,
          "column": 35,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n        .eq(\"user_id\", user.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data as AISettings;\n    },\n    onSuccess: (data) => {\n      queryClient.setQueryData([\"ai-settings\", user?.id], data);\n      toast.success(\"Settings imported successfully\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useAISettings.ts",
        "start": 280,
        "end": 290,
        "startLoc": {
          "line": 280,
          "column": 15,
          "position": 2266
        },
        "endLoc": {
          "line": 290,
          "column": 33,
          "position": 2357
        }
      },
      "secondFile": {
        "name": "src/hooks/useAISettings.ts",
        "start": 130,
        "end": 140,
        "startLoc": {
          "line": 130,
          "column": 2,
          "position": 1032
        },
        "endLoc": {
          "line": 140,
          "column": 35,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "interface AIContextType {\n  service: AIService | null;\n  messages: AIMessage[];\n  isLoading: boolean;\n  isConfigured: boolean;\n  config: AIConfig | null;\n  configure: (config: AIConfig) => void;\n  sendMessage: (message: string) => Promise<string>;\n  extractTask: (text: string) => Promise<TaskExtractionResult>;\n  generateInsights: () => Promise<ProductivityInsight[]>;\n  suggestNextAction: () => Promise<string>;\n  clearConversation: () => void;\n  error: string | null;\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useAI.ts",
        "start": 6,
        "end": 21,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 80
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 243
        }
      },
      "secondFile": {
        "name": "src/types/ai.ts",
        "start": 138,
        "end": 153,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 946
        },
        "endLoc": {
          "line": 153,
          "column": 7,
          "position": 1109
        }
      }
    }
  ]
}