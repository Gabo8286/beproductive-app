name: Optimized CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

jobs:
  # Fast feedback for PRs - Essential checks only
  pr-validation:
    name: PR Validation (Fast)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run unit tests
        run: npm run test:run

      - name: Build application
        run: npm run build

      - name: Run E2E tests (Chromium only)
        run: |
          npx playwright install chromium --with-deps
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000
          npx playwright test --project=chromium

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-test-results
          path: |
            test-results/
            playwright-report/

  # Full validation for main/develop branches
  full-validation:
    name: Full Validation (Complete)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    strategy:
      matrix:
        test-suite: ['lint-and-build', 'unit-tests', 'e2e-chromium', 'e2e-firefox', 'e2e-webkit', 'security-tests', 'performance-tests']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Conditional steps based on test suite
      - name: Run Lint and Build
        if: matrix.test-suite == 'lint-and-build'
        run: |
          npm run lint
          npx tsc --noEmit
          npm run build

      - name: Run Unit Tests
        if: matrix.test-suite == 'unit-tests'
        run: |
          npm run test:run
          npm run test:coverage

      - name: Run E2E Tests - Chromium
        if: matrix.test-suite == 'e2e-chromium'
        run: |
          npm run build
          npx playwright install chromium --with-deps
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000
          npx playwright test --project=chromium

      - name: Run E2E Tests - Firefox
        if: matrix.test-suite == 'e2e-firefox'
        run: |
          npm run build
          npx playwright install firefox --with-deps
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000
          npx playwright test --project=firefox

      - name: Run E2E Tests - WebKit
        if: matrix.test-suite == 'e2e-webkit'
        run: |
          npm run build
          npx playwright install webkit --with-deps
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000
          npx playwright test --project=webkit

      - name: Run Security Tests
        if: matrix.test-suite == 'security-tests'
        run: |
          npm audit --audit-level=moderate
          npm run test:run -- src/test/security/ || echo "Security tests directory not found"

      - name: Run Performance Tests
        if: matrix.test-suite == 'performance-tests'
        run: |
          npm run build
          npm run preview &
          npx wait-on http://localhost:4173
          npm install -g @lhci/cli@0.12.x
          lhci autorun --upload.target=temporary-public-storage

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.test-suite }}
          path: |
            test-results/
            playwright-report/
            coverage/

  # Nightly comprehensive tests (scheduled or manual)
  nightly-comprehensive:
    name: Nightly Comprehensive Tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all validation scripts
        run: |
          npm run lint
          npx tsc --noEmit
          npm run test:coverage
          npm run build

      - name: Run comprehensive E2E tests
        run: |
          npx playwright install --with-deps
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000
          npx playwright test

      - name: Run visual regression tests
        run: npx playwright test tests/e2e/visual-regression.spec.ts

      - name: Run accessibility tests
        run: |
          npm run test:run -- src/test/accessibility/
          npx playwright test tests/e2e/accessibility.spec.ts

      - name: Run production readiness tests
        run: npm run test:production-readiness

      - name: Generate comprehensive report
        run: npm run production:report

      - name: Upload comprehensive results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-comprehensive-results
          path: |
            test-results/
            playwright-report/
            coverage/
            production-readiness-report/

  # Summary job for status checks
  ci-status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [pr-validation, full-validation]
    if: always()

    steps:
      - name: Check PR validation
        if: github.event_name == 'pull_request' && needs.pr-validation.result != 'success'
        run: |
          echo "PR validation failed"
          exit 1

      - name: Check full validation
        if: github.event_name == 'push' && needs.full-validation.result != 'success'
        run: |
          echo "Full validation failed"
          exit 1

      - name: Success
        run: echo "All checks passed!"

# Schedule for nightly runs
# Uncomment to enable:
# on:
#   schedule:
#     - cron: '0 2 * * *'  # Run at 2 AM UTC daily