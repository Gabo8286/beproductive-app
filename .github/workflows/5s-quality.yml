name: 5S Codebase Organization Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CACHE_VERSION: v1

jobs:
  5s-analysis:
    name: 5S Organization Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for trend analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run 5S Agent Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      run: |
        echo "üè≠ Running 5S Codebase Organization Analysis..."
        node scripts/5s-agent.js --environment=$ENVIRONMENT --format=json --output=5s-report.json

    - name: Generate 5S Quality Report
      run: |
        echo "üìä Generating 5S Quality Report..."
        node scripts/5s-agent.js --report-only --format=markdown --output=5s-report.md

    - name: Check 5S Quality Gates
      env:
        FAIL_ON_VIOLATION: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}
      run: |
        echo "üöß Checking 5S Quality Gates..."
        node scripts/5s-agent.js --check-gates --fail-on-violation=$FAIL_ON_VIOLATION

    - name: Upload 5S Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: 5s-analysis-${{ github.run_number }}
        path: |
          5s-report.json
          5s-report.md
          quality-reports/5s/**
        retention-days: 30

    - name: Comment PR with 5S Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          try {
            const report = fs.readFileSync('5s-report.md', 'utf8');

            const body = `## üè≠ 5S Codebase Organization Report

            ${report}

            ---
            *Generated by 5S Agent on ${new Date().toISOString()}*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          } catch (error) {
            console.log('Could not read 5S report:', error.message);
          }

    - name: Update Quality Dashboard
      if: github.ref == 'refs/heads/main'
      env:
        QUALITY_WEBHOOK_URL: ${{ secrets.QUALITY_WEBHOOK_URL }}
      run: |
        if [ -n "$QUALITY_WEBHOOK_URL" ]; then
          echo "üì° Updating Quality Dashboard..."
          curl -X POST "$QUALITY_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d @5s-report.json
        else
          echo "‚ÑπÔ∏è Quality webhook URL not configured"
        fi

  5s-enforcement:
    name: 5S Enforcement Check
    runs-on: ubuntu-latest
    needs: 5s-analysis
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    timeout-minutes: 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download 5S Analysis Results
      uses: actions/download-artifact@v4
      with:
        name: 5s-analysis-${{ github.run_number }}

    - name: Enforce 5S Standards
      env:
        ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
        BLOCK_DEPLOYMENT: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}
      run: |
        echo "‚öñÔ∏è Enforcing 5S Standards for $ENVIRONMENT..."
        node scripts/5s-agent.js --enforce --environment=$ENVIRONMENT --block-deployment=$BLOCK_DEPLOYMENT

    - name: Create GitHub Status Check
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');

          let state = 'success';
          let description = '5S standards passed';

          try {
            const report = JSON.parse(fs.readFileSync('5s-report.json', 'utf8'));

            if (report.overallScore < 80) {
              state = 'failure';
              description = `5S score: ${report.overallScore}/100 (minimum: 80)`;
            } else if (report.violations && report.violations.length > 0) {
              state = 'failure';
              description = `${report.violations.length} 5S violations found`;
            }
          } catch (error) {
            state = 'error';
            description = 'Could not parse 5S report';
          }

          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: state,
            description: description,
            context: '5S Organization Standards'
          });

  5s-trends:
    name: 5S Trend Analysis
    runs-on: ubuntu-latest
    needs: 5s-analysis
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 100  # Get more history for trend analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download 5S Analysis Results
      uses: actions/download-artifact@v4
      with:
        name: 5s-analysis-${{ github.run_number }}

    - name: Generate 5S Trend Report
      run: |
        echo "üìà Generating 5S Trend Analysis..."
        node scripts/5s-agent.js --trends --days=30 --format=json --output=5s-trends.json

    - name: Check for 5S Regressions
      run: |
        echo "üîç Checking for 5S Regressions..."
        node scripts/5s-agent.js --regression-check --threshold=-5 --alert-on-regression=true

    - name: Upload Trend Analysis
      uses: actions/upload-artifact@v4
      with:
        name: 5s-trends-${{ github.run_number }}
        path: |
          5s-trends.json
          quality-reports/5s/trends/**
        retention-days: 90

    - name: Notify on Regression
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        if [ -n "$SLACK_WEBHOOK_URL" ]; then
          curl -X POST "$SLACK_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d '{
              "text": "üö® 5S Quality Regression Detected",
              "attachments": [
                {
                  "color": "danger",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "${{ github.sha }}",
                      "short": true
                    },
                    {
                      "title": "Action",
                      "value": "Review 5S trends and address quality degradation",
                      "short": false
                    }
                  ]
                }
              ]
            }'
        fi